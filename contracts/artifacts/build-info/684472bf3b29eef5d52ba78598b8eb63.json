{
	"id": "684472bf3b29eef5d52ba78598b8eb63",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/SuperToken_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/Nonces.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC5267.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/ShortStrings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/EIP712.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/cryptography/ECDSA.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n\n// File: contracts/SuperToken.sol\n\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/// @custom:security-contact ummanmemmedov2005@gmail.com\ncontract SuperToken is ERC20, ERC20Burnable, Ownable, ERC20Permit {\n    constructor(address initialOwner)\n        ERC20(\"Super Token\", \"STK\")\n        Ownable(initialOwner)\n        ERC20Permit(\"Super Token\")\n    {\n        _mint(msg.sender, 1000000 * 10 ** decimals());\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SuperToken_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SuperToken_flattened.sol\":40634:48020  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SuperToken_flattened.sol\":40634:48020  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204bb698115c5f49a44003c8783315c6d6b191cf5cc9d5df4056ac786247c5b59264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204bb698115c5f49a44003c8783315c6d6b191cf5cc9d5df4056ac786247c5b59264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xB6 SWAP9 GT 0x5C PUSH0 0x49 LOG4 BLOCKHASH SUB 0xC8 PUSH25 0x3315C6D6B191CF5CC9D5DF4056AC786247C5B59264736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "40634:7386:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;40634:7386:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204bb698115c5f49a44003c8783315c6d6b191cf5cc9d5df4056ac786247c5b59264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xB6 SWAP9 GT 0x5C PUSH0 0x49 LOG4 BLOCKHASH SUB 0xC8 PUSH25 0x3315C6D6B191CF5CC9D5DF4056AC786247C5B59264736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "40634:7386:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40634,
									"end": 48020,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bb698115c5f49a44003c8783315c6d6b191cf5cc9d5df4056ac786247c5b59264736f6c63430008160033",
									".code": [
										{
											"begin": 40634,
											"end": 48020,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 40634,
											"end": 48020,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 40634,
											"end": 48020,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40634,
											"end": 48020,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 40634,
											"end": 48020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40634,
											"end": 48020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40634,
											"end": 48020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40634,
											"end": 48020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40634,
											"end": 48020,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SuperToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1921,
								"contract": "contracts/SuperToken_flattened.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1923,
								"contract": "contracts/SuperToken_flattened.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2909,
								"contract": "contracts/SuperToken_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2915,
								"contract": "contracts/SuperToken_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2917,
								"contract": "contracts/SuperToken_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2919,
								"contract": "contracts/SuperToken_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2921,
								"contract": "contracts/SuperToken_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2909,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2915,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2917,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2919,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2921,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2909,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2915,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2917,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2919,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2921,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1921,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1923,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 13,
								"contract": "contracts/SuperToken_flattened.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SuperToken_flattened.sol\":12076:26990  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SuperToken_flattened.sol\":12076:26990  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b370e666fd5b4e4ae360a816b867006675ec1c11d79d69a6e481094ec4dd185f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b370e666fd5b4e4ae360a816b867006675ec1c11d79d69a6e481094ec4dd185f64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH17 0xE666FD5B4E4AE360A816B867006675EC1C GT 0xD7 SWAP14 PUSH10 0xA6E481094EC4DD185F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "12076:14914:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;12076:14914:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b370e666fd5b4e4ae360a816b867006675ec1c11d79d69a6e481094ec4dd185f64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 PUSH17 0xE666FD5B4E4AE360A816B867006675EC1C GT 0xD7 SWAP14 PUSH10 0xA6E481094EC4DD185F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "12076:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12076,
									"end": 26990,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b370e666fd5b4e4ae360a816b867006675ec1c11d79d69a6e481094ec4dd185f64736f6c63430008160033",
									".code": [
										{
											"begin": 12076,
											"end": 26990,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 26990,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 26990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 26990,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12076,
											"end": 26990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12076,
											"end": 26990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 26990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12076,
											"end": 26990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 26990,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SuperToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SuperToken_flattened.sol\":30550:33785  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SuperToken_flattened.sol\":30550:33785  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ccc43720d87d832e959361a1d0318f627ba520b3f440a2b1ee4bac97d51cc20964736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ccc43720d87d832e959361a1d0318f627ba520b3f440a2b1ee4bac97d51cc20964736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xC4 CALLDATACOPY KECCAK256 0xD8 PUSH30 0x832E959361A1D0318F627BA520B3F440A2B1EE4BAC97D51CC20964736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "30550:3235:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;30550:3235:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ccc43720d87d832e959361a1d0318f627ba520b3f440a2b1ee4bac97d51cc20964736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xC4 CALLDATACOPY KECCAK256 0xD8 PUSH30 0x832E959361A1D0318F627BA520B3F440A2B1EE4BAC97D51CC20964736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "30550:3235:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30550,
									"end": 33785,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ccc43720d87d832e959361a1d0318f627ba520b3f440a2b1ee4bac97d51cc20964736f6c63430008160033",
									".code": [
										{
											"begin": 30550,
											"end": 33785,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30550,
											"end": 33785,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30550,
											"end": 33785,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30550,
											"end": 33785,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30550,
											"end": 33785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30550,
											"end": 33785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30550,
											"end": 33785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30550,
											"end": 33785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30550,
											"end": 33785,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SuperToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "contracts/SuperToken_flattened.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2656,
								"contract": "contracts/SuperToken_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SuperToken_flattened.sol\":7501:10554  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SuperToken_flattened.sol\":7501:10554  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f7effaf26bde0ce389bd6399e5c7ef845c020d45236ef1f7e036ef107d425f6764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f7effaf26bde0ce389bd6399e5c7ef845c020d45236ef1f7e036ef107d425f6764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xEF STATICCALL CALLCODE PUSH12 0xDE0CE389BD6399E5C7EF845C MUL 0xD GASLIMIT 0x23 PUSH15 0xF1F7E036EF107D425F6764736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "7501:3053:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;7501:3053:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f7effaf26bde0ce389bd6399e5c7ef845c020d45236ef1f7e036ef107d425f6764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xEF STATICCALL CALLCODE PUSH12 0xDE0CE389BD6399E5C7EF845C MUL 0xD GASLIMIT 0x23 PUSH15 0xF1F7E036EF107D425F6764736F6C63 NUMBER STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "7501:3053:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7501,
									"end": 10554,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f7effaf26bde0ce389bd6399e5c7ef845c020d45236ef1f7e036ef107d425f6764736f6c63430008160033",
									".code": [
										{
											"begin": 7501,
											"end": 10554,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7501,
											"end": 10554,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7501,
											"end": 10554,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7501,
											"end": 10554,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7501,
											"end": 10554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7501,
											"end": 10554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7501,
											"end": 10554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7501,
											"end": 10554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7501,
											"end": 10554,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SuperToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SuperToken_flattened.sol\":10801:11848  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SuperToken_flattened.sol\":10801:11848  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202946a878b479e3c61a5a670cea019b05b50bf9e92fe042e31db734190e69179d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202946a878b479e3c61a5a670cea019b05b50bf9e92fe042e31db734190e69179d64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 CHAINID 0xA8 PUSH25 0xB479E3C61A5A670CEA019B05B50BF9E92FE042E31DB734190E PUSH10 0x179D64736F6C63430008 AND STOP CALLER ",
							"sourceMap": "10801:1047:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;10801:1047:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202946a878b479e3c61a5a670cea019b05b50bf9e92fe042e31db734190e69179d64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 CHAINID 0xA8 PUSH25 0xB479E3C61A5A670CEA019B05B50BF9E92FE042E31DB734190E PUSH10 0x179D64736F6C63430008 AND STOP CALLER ",
							"sourceMap": "10801:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10801,
									"end": 11848,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202946a878b479e3c61a5a670cea019b05b50bf9e92fe042e31db734190e69179d64736f6c63430008160033",
									".code": [
										{
											"begin": 10801,
											"end": 11848,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 11848,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 11848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 11848,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10801,
											"end": 11848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10801,
											"end": 11848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 11848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10801,
											"end": 11848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10801,
											"end": 11848,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SuperToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SuperToken_flattened.sol\":3580:6265  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SuperToken_flattened.sol\":3580:6265  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c831ba4a1e1321b6e04a91d7499f98faf7c06af2179e91f9730d01dc12e962b664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c831ba4a1e1321b6e04a91d7499f98faf7c06af2179e91f9730d01dc12e962b664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 BALANCE 0xBA 0x4A 0x1E SGT 0x21 0xB6 0xE0 0x4A SWAP2 0xD7 0x49 SWAP16 SWAP9 STATICCALL 0xF7 0xC0 PUSH11 0xF2179E91F9730D01DC12E9 PUSH3 0xB66473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "3580:2685:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3580:2685:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c831ba4a1e1321b6e04a91d7499f98faf7c06af2179e91f9730d01dc12e962b664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 BALANCE 0xBA 0x4A 0x1E SGT 0x21 0xB6 0xE0 0x4A SWAP2 0xD7 0x49 SWAP16 SWAP9 STATICCALL 0xF7 0xC0 PUSH11 0xF2179E91F9730D01DC12E9 PUSH3 0xB66473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "3580:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3580,
									"end": 6265,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c831ba4a1e1321b6e04a91d7499f98faf7c06af2179e91f9730d01dc12e962b664736f6c63430008160033",
									".code": [
										{
											"begin": 3580,
											"end": 6265,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 6265,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 6265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 6265,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3580,
											"end": 6265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 6265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 6265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 6265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 6265,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SuperToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SuperToken_flattened.sol\":27177:30024  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SuperToken_flattened.sol\":27177:30024  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200c76edc539d7932e075fcfb3d1601e8495a23e3c5a06d44bb0a0c552d63d10f964736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200c76edc539d7932e075fcfb3d1601e8495a23e3c5a06d44bb0a0c552d63d10f964736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC PUSH23 0xEDC539D7932E075FCFB3D1601E8495A23E3C5A06D44BB0 LOG0 0xC5 MSTORE 0xD6 RETURNDATASIZE LT 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "27177:2847:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;27177:2847:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200c76edc539d7932e075fcfb3d1601e8495a23e3c5a06d44bb0a0c552d63d10f964736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC PUSH23 0xEDC539D7932E075FCFB3D1601E8495A23E3C5A06D44BB0 LOG0 0xC5 MSTORE 0xD6 RETURNDATASIZE LT 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "27177:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27177,
									"end": 30024,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c76edc539d7932e075fcfb3d1601e8495a23e3c5a06d44bb0a0c552d63d10f964736f6c63430008160033",
									".code": [
										{
											"begin": 27177,
											"end": 30024,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 30024,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 30024,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 30024,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27177,
											"end": 30024,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27177,
											"end": 30024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 30024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27177,
											"end": 30024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27177,
											"end": 30024,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/SuperToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SuperToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "ummanmemmedov2005@gmail.com",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SuperToken_flattened.sol\":80671:81045  contract SuperToken is ERC20, ERC20Burnable, Ownable, ERC20Permit {... */\n  mstore(0x40, 0x0160)\n    /* \"contracts/SuperToken_flattened.sol\":80743:80944  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SuperToken_flattened.sol\":78210:78262  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa9, 0x29bab832b9102a37b5b2b7)\n  dup2\n  mstore\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":78249:78253  name */\n  dup1\n    /* \"contracts/SuperToken_flattened.sol\":36974:37405  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf8, 0x31)\n  dup2\n  mstore\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":80829:80841  initialOwner */\n  dup4\n    /* \"contracts/SuperToken_flattened.sol\":67601:67714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa9, 0x29bab832b9102a37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x53544b)\n  dup2\n  mstore\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":67675:67680  name_ */\n  dup2\n    /* \"contracts/SuperToken_flattened.sol\":67667:67672  _name */\n  0x03\n    /* \"contracts/SuperToken_flattened.sol\":67667:67680  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":67690:67697  _symbol */\n  0x04\n    /* \"contracts/SuperToken_flattened.sol\":67690:67707  _symbol = symbol_ */\n  tag_12\n    /* \"contracts/SuperToken_flattened.sol\":67700:67707  symbol_ */\n  dup3\n    /* \"contracts/SuperToken_flattened.sol\":67690:67697  _symbol */\n  dup3\n    /* \"contracts/SuperToken_flattened.sol\":67690:67707  _symbol = symbol_ */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SuperToken_flattened.sol\":60566:60592  initialOwner == address(0) */\n  dup2\n  and\n    /* \"contracts/SuperToken_flattened.sol\":60562:60657  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"contracts/SuperToken_flattened.sol\":60615:60646  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":60643:60644  0 */\n  0x00\n    /* \"contracts/SuperToken_flattened.sol\":60615:60646  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3142:3193   */\n  mstore\n    /* \"#utility.yul\":3115:3133   */\n  0x24\n  add\n    /* \"contracts/SuperToken_flattened.sol\":60615:60646  OwnableInvalidOwner(address(0)) */\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/SuperToken_flattened.sol\":60562:60657  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"contracts/SuperToken_flattened.sol\":60666:60698  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"contracts/SuperToken_flattened.sol\":60685:60697  initialOwner */\n  dup2\n    /* \"contracts/SuperToken_flattened.sol\":60666:60684  _transferOwnership */\n  tag_18\n    /* \"contracts/SuperToken_flattened.sol\":60666:60698  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":37047:37092  name.toShortStringWithFallback(_nameFallback) */\n  tag_20\n    /* \"contracts/SuperToken_flattened.sol\":37047:37051  name */\n  dup3\n    /* \"contracts/SuperToken_flattened.sol\":37078:37091  _nameFallback */\n  0x06\n    /* \"contracts/SuperToken_flattened.sol\":37047:37077  name.toShortStringWithFallback */\n  tag_21\n    /* \"contracts/SuperToken_flattened.sol\":37047:37092  name.toShortStringWithFallback(_nameFallback) */\n  jump\t// in\ntag_20:\n    /* \"contracts/SuperToken_flattened.sol\":37039:37092  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":37113:37164  version.toShortStringWithFallback(_versionFallback) */\n  tag_22\n    /* \"contracts/SuperToken_flattened.sol\":37113:37120  version */\n  dup2\n    /* \"contracts/SuperToken_flattened.sol\":37147:37163  _versionFallback */\n  0x07\n    /* \"contracts/SuperToken_flattened.sol\":37113:37146  version.toShortStringWithFallback */\n  tag_21\n    /* \"contracts/SuperToken_flattened.sol\":37113:37164  version.toShortStringWithFallback(_versionFallback) */\n  jump\t// in\ntag_22:\n    /* \"contracts/SuperToken_flattened.sol\":37102:37164  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":37188:37210  keccak256(bytes(name)) */\n  dup2\n  mload\n  0x20\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/SuperToken_flattened.sol\":37174:37210  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":37237:37262  keccak256(bytes(version)) */\n  dup2\n  mload\n  swap1\n  dup3\n  add\n  keccak256\n    /* \"contracts/SuperToken_flattened.sol\":37220:37262  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":37290:37303  block.chainid */\n  chainid\n    /* \"contracts/SuperToken_flattened.sol\":37273:37303  _cachedChainId = block.chainid */\n  0xa0\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":37338:37361  _buildDomainSeparator() */\n  tag_23\n    /* \"contracts/SuperToken_flattened.sol\":37872:37883  _hashedName */\n  mload(0xe0)\n    /* \"contracts/SuperToken_flattened.sol\":37885:37899  _hashedVersion */\n  mload(0x0100)\n    /* \"contracts/SuperToken_flattened.sol\":37850:37930  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  0x40\n  dup1\n  mload\n    /* \"contracts/SuperToken_flattened.sol\":35725:35820  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contracts/SuperToken_flattened.sol\":37850:37930  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  0x20\n  dup3\n  add\n    /* \"#utility.yul\":5145:5170   */\n  mstore\n    /* \"#utility.yul\":5186:5204   */\n  swap1\n  dup2\n  add\n    /* \"#utility.yul\":5179:5213   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":5229:5247   */\n  0x60\n  dup3\n  add\n    /* \"#utility.yul\":5222:5256   */\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":37901:37914  block.chainid */\n  chainid\n    /* \"#utility.yul\":5272:5290   */\n  0x80\n  dup3\n  add\n    /* \"#utility.yul\":5265:5299   */\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":37924:37928  this */\n  address\n    /* \"#utility.yul\":5315:5334   */\n  0xa0\n  dup3\n  add\n    /* \"#utility.yul\":5308:5369   */\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":37814:37821  bytes32 */\n  0x00\n  swap1\n    /* \"#utility.yul\":5117:5136   */\n  0xc0\n  add\n    /* \"contracts/SuperToken_flattened.sol\":37850:37930  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":37840:37931  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contracts/SuperToken_flattened.sol\":37833:37931  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":37759:37938  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\n    /* \"contracts/SuperToken_flattened.sol\":37338:37361  _buildDomainSeparator() */\ntag_23:\n    /* \"contracts/SuperToken_flattened.sol\":37313:37361  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  mstore\n  pop\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":37393:37397  this */\n  address\n    /* \"contracts/SuperToken_flattened.sol\":37371:37398  _cachedThis = address(this) */\n  0xc0\n  mstore\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":80892:80937  _mint(msg.sender, 1000000 * 10 ** decimals()) */\n  tag_27\n    /* \"contracts/SuperToken_flattened.sol\":80898:80908  msg.sender */\n  caller\n    /* \"contracts/SuperToken_flattened.sol\":80920:80936  10 ** decimals() */\n  tag_30\n    /* \"contracts/SuperToken_flattened.sol\":68780:68782  18 */\n  0x12\n    /* \"contracts/SuperToken_flattened.sol\":80920:80922  10 */\n  0x0a\n    /* \"contracts/SuperToken_flattened.sol\":80920:80936  10 ** decimals() */\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"contracts/SuperToken_flattened.sol\":80910:80936  1000000 * 10 ** decimals() */\n  tag_32\n  swap1\n    /* \"contracts/SuperToken_flattened.sol\":80910:80917  1000000 */\n  0x0f4240\n    /* \"contracts/SuperToken_flattened.sol\":80910:80936  1000000 * 10 ** decimals() */\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"contracts/SuperToken_flattened.sol\":80892:80897  _mint */\n  tag_34\n    /* \"contracts/SuperToken_flattened.sol\":80892:80937  _mint(msg.sender, 1000000 * 10 ** decimals()) */\n  jump\t// in\ntag_27:\n    /* \"contracts/SuperToken_flattened.sol\":80743:80944  constructor(address initialOwner)... */\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":80671:81045  contract SuperToken is ERC20, ERC20Burnable, Ownable, ERC20Permit {... */\n  jump(tag_81)\n    /* \"contracts/SuperToken_flattened.sol\":62205:62392  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"contracts/SuperToken_flattened.sol\":62297:62303  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SuperToken_flattened.sol\":62313:62330  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/SuperToken_flattened.sol\":62345:62385  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/SuperToken_flattened.sol\":62297:62303  _owner */\n  swap2\n  and\n  swap2\n    /* \"contracts/SuperToken_flattened.sol\":62313:62330  _owner = newOwner */\n  swap1\n    /* \"contracts/SuperToken_flattened.sol\":62297:62303  _owner */\n  dup3\n  swap1\n    /* \"contracts/SuperToken_flattened.sol\":62345:62385  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/SuperToken_flattened.sol\":62278:62294  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/SuperToken_flattened.sol\":62345:62385  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/SuperToken_flattened.sol\":62268:62392  {... */\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":62205:62392  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/SuperToken_flattened.sol\":9160:9500  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_21:\n    /* \"contracts/SuperToken_flattened.sol\":9256:9267  ShortString */\n  0x00\n    /* \"contracts/SuperToken_flattened.sol\":9305:9307  32 */\n  0x20\n    /* \"contracts/SuperToken_flattened.sol\":9289:9294  value */\n  dup4\n    /* \"contracts/SuperToken_flattened.sol\":9283:9302  bytes(value).length */\n  mload\n    /* \"contracts/SuperToken_flattened.sol\":9283:9307  bytes(value).length < 32 */\n  lt\n    /* \"contracts/SuperToken_flattened.sol\":9279:9494  if (bytes(value).length < 32) {... */\n  iszero\n  tag_38\n  jumpi\n    /* \"contracts/SuperToken_flattened.sol\":9330:9350  toShortString(value) */\n  tag_39\n    /* \"contracts/SuperToken_flattened.sol\":9344:9349  value */\n  dup4\n    /* \"contracts/SuperToken_flattened.sol\":9330:9343  toShortString */\n  tag_40\n    /* \"contracts/SuperToken_flattened.sol\":9330:9350  toShortString(value) */\n  jump\t// in\ntag_39:\n    /* \"contracts/SuperToken_flattened.sol\":9323:9350  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_41)\n    /* \"contracts/SuperToken_flattened.sol\":9279:9494  if (bytes(value).length < 32) {... */\ntag_38:\n    /* \"contracts/SuperToken_flattened.sol\":9407:9412  store */\n  dup2\n    /* \"contracts/SuperToken_flattened.sol\":9381:9427  StorageSlot.getStringSlot(store).value = value */\n  tag_44\n    /* \"contracts/SuperToken_flattened.sol\":9422:9427  value */\n  dup5\n    /* \"contracts/SuperToken_flattened.sol\":9407:9412  store */\n  dup3\n    /* \"contracts/SuperToken_flattened.sol\":9381:9427  StorageSlot.getStringSlot(store).value = value */\n  tag_11\n  jump\t// in\ntag_44:\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":7636:7702  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n  swap1\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":9279:9494  if (bytes(value).length < 32) {... */\ntag_41:\n    /* \"contracts/SuperToken_flattened.sol\":9160:9500  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SuperToken_flattened.sol\":73426:73634  function _mint(address account, uint256 value) internal {... */\ntag_34:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SuperToken_flattened.sol\":73496:73517  account == address(0) */\n  dup3\n  and\n    /* \"contracts/SuperToken_flattened.sol\":73492:73583  if (account == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"contracts/SuperToken_flattened.sol\":73540:73572  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"contracts/SuperToken_flattened.sol\":73569:73570  0 */\n  0x00\n    /* \"contracts/SuperToken_flattened.sol\":73540:73572  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3142:3193   */\n  mstore\n    /* \"#utility.yul\":3115:3133   */\n  0x24\n  add\n    /* \"contracts/SuperToken_flattened.sol\":73540:73572  ERC20InvalidReceiver(address(0)) */\n  tag_15\n    /* \"#utility.yul\":2996:3199   */\n  jump\n    /* \"contracts/SuperToken_flattened.sol\":73492:73583  if (account == address(0)) {... */\ntag_50:\n    /* \"contracts/SuperToken_flattened.sol\":73592:73627  _update(address(0), account, value) */\n  tag_52\n    /* \"contracts/SuperToken_flattened.sol\":73608:73609  0 */\n  0x00\n    /* \"contracts/SuperToken_flattened.sol\":73612:73619  account */\n  dup4\n    /* \"contracts/SuperToken_flattened.sol\":73621:73626  value */\n  dup4\n    /* \"contracts/SuperToken_flattened.sol\":73592:73599  _update */\n  tag_53\n    /* \"contracts/SuperToken_flattened.sol\":73592:73627  _update(address(0), account, value) */\n  jump\t// in\ntag_52:\n    /* \"contracts/SuperToken_flattened.sol\":73426:73634  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SuperToken_flattened.sol\":7954:8240  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_40:\n    /* \"contracts/SuperToken_flattened.sol\":8019:8030  ShortString */\n  0x00\n    /* \"contracts/SuperToken_flattened.sol\":8042:8059  bytes memory bstr */\n  dup1\n    /* \"contracts/SuperToken_flattened.sol\":8068:8071  str */\n  dup3\n    /* \"contracts/SuperToken_flattened.sol\":8042:8072  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":8100:8102  31 */\n  0x1f\n    /* \"contracts/SuperToken_flattened.sol\":8086:8090  bstr */\n  dup2\n    /* \"contracts/SuperToken_flattened.sol\":8086:8097  bstr.length */\n  mload\n    /* \"contracts/SuperToken_flattened.sol\":8086:8102  bstr.length > 31 */\n  gt\n    /* \"contracts/SuperToken_flattened.sol\":8082:8154  if (bstr.length > 31) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"contracts/SuperToken_flattened.sol\":8139:8142  str */\n  dup3\n    /* \"contracts/SuperToken_flattened.sol\":8125:8143  StringTooLong(str) */\n  mload(0x40)\n  shl(0xe0, 0x305a27a9)\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_57\n  jump\t// in\n    /* \"contracts/SuperToken_flattened.sol\":8082:8154  if (bstr.length > 31) {... */\ntag_55:\n    /* \"contracts/SuperToken_flattened.sol\":8220:8231  bstr.length */\n  dup1\n  mload\n    /* \"contracts/SuperToken_flattened.sol\":8203:8216  bytes32(bstr) */\n  tag_58\n    /* \"contracts/SuperToken_flattened.sol\":8220:8224  bstr */\n  dup3\n    /* \"contracts/SuperToken_flattened.sol\":8203:8216  bytes32(bstr) */\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"contracts/SuperToken_flattened.sol\":8195:8231  uint256(bytes32(bstr)) | bstr.length */\n  or\n  swap4\n    /* \"contracts/SuperToken_flattened.sol\":7954:8240  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SuperToken_flattened.sol\":71976:73083  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_53:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SuperToken_flattened.sol\":72065:72083  from == address(0) */\n  dup4\n  and\n    /* \"contracts/SuperToken_flattened.sol\":72061:72601  if (from == address(0)) {... */\n  tag_62\n  jumpi\n    /* \"contracts/SuperToken_flattened.sol\":72217:72222  value */\n  dup1\n    /* \"contracts/SuperToken_flattened.sol\":72201:72213  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/SuperToken_flattened.sol\":72201:72222  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_63\n  swap2\n  swap1\n  tag_64\n  jump\t// in\ntag_63:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"contracts/SuperToken_flattened.sol\":72061:72601  if (from == address(0)) {... */\n  tag_65\n  swap1\n  pop\n  jump\ntag_62:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SuperToken_flattened.sol\":72275:72290  _balances[from] */\n  dup4\n  and\n    /* \"contracts/SuperToken_flattened.sol\":72253:72272  uint256 fromBalance */\n  0x00\n    /* \"contracts/SuperToken_flattened.sol\":72275:72290  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/SuperToken_flattened.sol\":72308:72327  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"contracts/SuperToken_flattened.sol\":72304:72419  if (fromBalance < value) {... */\n  iszero\n  tag_66\n  jumpi\n    /* \"contracts/SuperToken_flattened.sol\":72354:72404  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":6585:6617   */\n  dup6\n  and\n    /* \"contracts/SuperToken_flattened.sol\":72354:72404  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6567:6618   */\n  mstore\n    /* \"#utility.yul\":6634:6652   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":6627:6661   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":6677:6695   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":6670:6704   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":6540:6558   */\n  0x64\n  add\n    /* \"contracts/SuperToken_flattened.sol\":72354:72404  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_15\n    /* \"#utility.yul\":6365:6710   */\n  jump\n    /* \"contracts/SuperToken_flattened.sol\":72304:72419  if (fromBalance < value) {... */\ntag_66:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SuperToken_flattened.sol\":72539:72554  _balances[from] */\n  dup5\n  and\n    /* \"contracts/SuperToken_flattened.sol\":72539:72548  _balances */\n  0x00\n    /* \"contracts/SuperToken_flattened.sol\":72539:72554  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/SuperToken_flattened.sol\":72557:72576  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"contracts/SuperToken_flattened.sol\":72539:72576  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"contracts/SuperToken_flattened.sol\":72061:72601  if (from == address(0)) {... */\ntag_65:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SuperToken_flattened.sol\":72615:72631  to == address(0) */\n  dup3\n  and\n    /* \"contracts/SuperToken_flattened.sol\":72611:73036  if (to == address(0)) {... */\n  tag_69\n  jumpi\n    /* \"contracts/SuperToken_flattened.sol\":72778:72790  _totalSupply */\n  0x02\n    /* \"contracts/SuperToken_flattened.sol\":72778:72799  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"contracts/SuperToken_flattened.sol\":72611:73036  if (to == address(0)) {... */\n  jump(tag_70)\ntag_69:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SuperToken_flattened.sol\":72989:73002  _balances[to] */\n  dup3\n  and\n    /* \"contracts/SuperToken_flattened.sol\":72989:72998  _balances */\n  0x00\n    /* \"contracts/SuperToken_flattened.sol\":72989:73002  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/SuperToken_flattened.sol\":72989:73011  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"contracts/SuperToken_flattened.sol\":72611:73036  if (to == address(0)) {... */\ntag_70:\n    /* \"contracts/SuperToken_flattened.sol\":73066:73068  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SuperToken_flattened.sol\":73051:73076  Transfer(from, to, value) */\n  and\n    /* \"contracts/SuperToken_flattened.sol\":73060:73064  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/SuperToken_flattened.sol\":73051:73076  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/SuperToken_flattened.sol\":73070:73075  value */\n  dup4\n    /* \"contracts/SuperToken_flattened.sol\":73051:73076  Transfer(from, to, value) */\n  mload(0x40)\n  tag_71\n  swap2\n    /* \"#utility.yul\":6861:6886   */\n  dup2\n  mstore\n    /* \"#utility.yul\":6849:6851   */\n  0x20\n    /* \"#utility.yul\":6834:6852   */\n  add\n  swap1\n    /* \"#utility.yul\":6715:6892   */\n  jump\n    /* \"contracts/SuperToken_flattened.sol\":73051:73076  Transfer(from, to, value) */\ntag_71:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/SuperToken_flattened.sol\":71976:73083  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_83:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_84:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_73:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_74:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_87:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_88:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_76:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_92\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_92:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_93:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_91:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2991   */\ntag_11:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_99\n  tag_73\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1850:1947   */\n  tag_100\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_101\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_74\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_76\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2002:2006   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2059:2061   */\n  0x1f\n    /* \"#utility.yul\":2048:2062   */\n  dup4\n  gt\n    /* \"#utility.yul\":2076:2077   */\n  0x01\n    /* \"#utility.yul\":2071:2734   */\n  dup2\n  eq\n  tag_103\n  jumpi\n    /* \"#utility.yul\":2778:2779   */\n  0x00\n    /* \"#utility.yul\":2795:2801   */\n  dup5\n    /* \"#utility.yul\":2792:2881   */\n  iszero\n  tag_104\n  jumpi\n  pop\n    /* \"#utility.yul\":2847:2866   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2841:2867   */\n  mload\n    /* \"#utility.yul\":2792:2881   */\ntag_104:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2894:2975   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2041:2985   */\n  jump(tag_102)\n    /* \"#utility.yul\":2071:2734   */\ntag_103:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2107:2127   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2225:2461   */\ntag_107:\n    /* \"#utility.yul\":2239:2246   */\n  dup3\n    /* \"#utility.yul\":2236:2237   */\n  dup2\n    /* \"#utility.yul\":2233:2247   */\n  lt\n    /* \"#utility.yul\":2225:2461   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2328:2347   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2322:2348   */\n  mload\n    /* \"#utility.yul\":2307:2349   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2420:2447   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2388:2389   */\n  0x01\n    /* \"#utility.yul\":2376:2390   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2255:2274   */\n  dup5\n  add\n    /* \"#utility.yul\":2225:2461   */\n  jump(tag_107)\ntag_109:\n    /* \"#utility.yul\":2229:2232   */\n  pop\n    /* \"#utility.yul\":2489:2495   */\n  dup6\n    /* \"#utility.yul\":2480:2487   */\n  dup3\n    /* \"#utility.yul\":2477:2496   */\n  lt\n    /* \"#utility.yul\":2474:2675   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2550:2569   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2544:2570   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2633:2634   */\n  0x03\n    /* \"#utility.yul\":2629:2643   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2645:2648   */\n  0xf8\n    /* \"#utility.yul\":2625:2649   */\n  and\n    /* \"#utility.yul\":2621:2658   */\n  shr\n    /* \"#utility.yul\":2617:2659   */\n  not\n    /* \"#utility.yul\":2602:2660   */\n  and\n    /* \"#utility.yul\":2587:2661   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2474:2675   */\ntag_110:\n  pop\n  pop\n    /* \"#utility.yul\":2721:2722   */\n  0x01\n    /* \"#utility.yul\":2712:2718   */\n  dup5\n    /* \"#utility.yul\":2709:2710   */\n  0x01\n    /* \"#utility.yul\":2705:2719   */\n  shl\n    /* \"#utility.yul\":2701:2723   */\n  add\n    /* \"#utility.yul\":2695:2699   */\n  dup6\n    /* \"#utility.yul\":2688:2724   */\n  sstore\n    /* \"#utility.yul\":2041:2985   */\ntag_102:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1646:2991   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3204:3331   */\ntag_78:\n    /* \"#utility.yul\":3265:3275   */\n  0x4e487b71\n    /* \"#utility.yul\":3260:3263   */\n  0xe0\n    /* \"#utility.yul\":3256:3276   */\n  shl\n    /* \"#utility.yul\":3253:3254   */\n  0x00\n    /* \"#utility.yul\":3246:3277   */\n  mstore\n    /* \"#utility.yul\":3296:3300   */\n  0x11\n    /* \"#utility.yul\":3293:3294   */\n  0x04\n    /* \"#utility.yul\":3286:3301   */\n  mstore\n    /* \"#utility.yul\":3320:3324   */\n  0x24\n    /* \"#utility.yul\":3317:3318   */\n  0x00\n    /* \"#utility.yul\":3310:3325   */\n  revert\n    /* \"#utility.yul\":3336:3752   */\ntag_79:\n    /* \"#utility.yul\":3425:3426   */\n  0x01\n    /* \"#utility.yul\":3462:3467   */\n  dup2\n    /* \"#utility.yul\":3425:3426   */\n  dup2\n    /* \"#utility.yul\":3476:3746   */\ntag_114:\n    /* \"#utility.yul\":3497:3504   */\n  dup1\n    /* \"#utility.yul\":3487:3495   */\n  dup6\n    /* \"#utility.yul\":3484:3505   */\n  gt\n    /* \"#utility.yul\":3476:3746   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3556:3560   */\n  dup2\n    /* \"#utility.yul\":3552:3553   */\n  0x00\n    /* \"#utility.yul\":3548:3554   */\n  not\n    /* \"#utility.yul\":3544:3561   */\n  div\n    /* \"#utility.yul\":3538:3542   */\n  dup3\n    /* \"#utility.yul\":3535:3562   */\n  gt\n    /* \"#utility.yul\":3532:3585   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":3565:3583   */\n  tag_118\n  tag_78\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3615:3622   */\n  dup1\n    /* \"#utility.yul\":3605:3613   */\n  dup6\n    /* \"#utility.yul\":3601:3623   */\n  and\n    /* \"#utility.yul\":3598:3653   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":3635:3651   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3598:3653   */\ntag_119:\n    /* \"#utility.yul\":3714:3736   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3674:3689   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3476:3746   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":3480:3483   */\n  pop\n    /* \"#utility.yul\":3336:3752   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3757:4563   */\ntag_80:\n    /* \"#utility.yul\":3806:3811   */\n  0x00\n    /* \"#utility.yul\":3836:3844   */\n  dup3\n    /* \"#utility.yul\":3826:3906   */\n  tag_121\n  jumpi\n  pop\n    /* \"#utility.yul\":3877:3878   */\n  0x01\n    /* \"#utility.yul\":3891:3896   */\n  jump(tag_41)\n    /* \"#utility.yul\":3826:3906   */\ntag_121:\n    /* \"#utility.yul\":3925:3929   */\n  dup2\n    /* \"#utility.yul\":3915:3991   */\n  tag_122\n  jumpi\n  pop\n    /* \"#utility.yul\":3962:3963   */\n  0x00\n    /* \"#utility.yul\":3976:3981   */\n  jump(tag_41)\n    /* \"#utility.yul\":3915:3991   */\ntag_122:\n    /* \"#utility.yul\":4007:4011   */\n  dup2\n    /* \"#utility.yul\":4025:4026   */\n  0x01\n    /* \"#utility.yul\":4020:4079   */\n  dup2\n  eq\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4093:4094   */\n  0x02\n    /* \"#utility.yul\":4088:4218   */\n  dup2\n  eq\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4000:4218   */\n  jump(tag_123)\n    /* \"#utility.yul\":4020:4079   */\ntag_124:\n    /* \"#utility.yul\":4050:4051   */\n  0x01\n    /* \"#utility.yul\":4041:4051   */\n  swap2\n  pop\n    /* \"#utility.yul\":4064:4069   */\n  pop\n  jump(tag_41)\n    /* \"#utility.yul\":4088:4218   */\ntag_125:\n    /* \"#utility.yul\":4125:4128   */\n  0xff\n    /* \"#utility.yul\":4115:4123   */\n  dup5\n    /* \"#utility.yul\":4112:4129   */\n  gt\n    /* \"#utility.yul\":4109:4152   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":4132:4150   */\n  tag_127\n  tag_78\n  jump\t// in\ntag_127:\n  pop\n  pop\n    /* \"#utility.yul\":4188:4189   */\n  0x01\n    /* \"#utility.yul\":4174:4190   */\n  dup3\n  shl\n    /* \"#utility.yul\":4203:4208   */\n  jump(tag_41)\n    /* \"#utility.yul\":4000:4218   */\ntag_123:\n  pop\n    /* \"#utility.yul\":4302:4304   */\n  0x20\n    /* \"#utility.yul\":4292:4300   */\n  dup4\n    /* \"#utility.yul\":4289:4305   */\n  lt\n    /* \"#utility.yul\":4283:4286   */\n  0x0133\n    /* \"#utility.yul\":4277:4281   */\n  dup4\n    /* \"#utility.yul\":4274:4287   */\n  lt\n    /* \"#utility.yul\":4270:4306   */\n  and\n    /* \"#utility.yul\":4264:4266   */\n  0x4e\n    /* \"#utility.yul\":4254:4262   */\n  dup5\n    /* \"#utility.yul\":4251:4267   */\n  lt\n    /* \"#utility.yul\":4246:4248   */\n  0x0b\n    /* \"#utility.yul\":4240:4244   */\n  dup5\n    /* \"#utility.yul\":4237:4249   */\n  lt\n    /* \"#utility.yul\":4233:4268   */\n  and\n    /* \"#utility.yul\":4230:4307   */\n  or\n    /* \"#utility.yul\":4227:4386   */\n  iszero\n  tag_128\n  jumpi\n  pop\n    /* \"#utility.yul\":4339:4358   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4371:4376   */\n  jump(tag_41)\n    /* \"#utility.yul\":4227:4386   */\ntag_128:\n    /* \"#utility.yul\":4418:4452   */\n  tag_129\n    /* \"#utility.yul\":4443:4451   */\n  dup4\n    /* \"#utility.yul\":4437:4441   */\n  dup4\n    /* \"#utility.yul\":4418:4452   */\n  tag_79\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4488:4494   */\n  dup1\n    /* \"#utility.yul\":4484:4485   */\n  0x00\n    /* \"#utility.yul\":4480:4486   */\n  not\n    /* \"#utility.yul\":4476:4495   */\n  div\n    /* \"#utility.yul\":4467:4474   */\n  dup3\n    /* \"#utility.yul\":4464:4496   */\n  gt\n    /* \"#utility.yul\":4461:4519   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4499:4517   */\n  tag_131\n  tag_78\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4537:4557   */\n  mul\n  swap4\n    /* \"#utility.yul\":3757:4563   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4568:4708   */\ntag_31:\n    /* \"#utility.yul\":4626:4631   */\n  0x00\n    /* \"#utility.yul\":4655:4702   */\n  tag_84\n    /* \"#utility.yul\":4696:4700   */\n  0xff\n    /* \"#utility.yul\":4686:4694   */\n  dup5\n    /* \"#utility.yul\":4682:4701   */\n  and\n    /* \"#utility.yul\":4676:4680   */\n  dup4\n    /* \"#utility.yul\":4655:4702   */\n  tag_80\n  jump\t// in\n    /* \"#utility.yul\":4713:4881   */\ntag_33:\n    /* \"#utility.yul\":4786:4795   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4817:4826   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4834:4849   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4828:4850   */\n  dup5\n  eq\n    /* \"#utility.yul\":4814:4851   */\n  or\n    /* \"#utility.yul\":4804:4875   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":4855:4873   */\n  tag_41\n  tag_78\n  jump\t// in\n    /* \"#utility.yul\":5380:5928   */\ntag_57:\n    /* \"#utility.yul\":5492:5496   */\n  0x00\n    /* \"#utility.yul\":5521:5523   */\n  0x20\n    /* \"#utility.yul\":5550:5552   */\n  dup1\n    /* \"#utility.yul\":5539:5548   */\n  dup4\n    /* \"#utility.yul\":5532:5553   */\n  mstore\n    /* \"#utility.yul\":5582:5588   */\n  dup4\n    /* \"#utility.yul\":5576:5589   */\n  mload\n    /* \"#utility.yul\":5625:5631   */\n  dup1\n    /* \"#utility.yul\":5620:5622   */\n  0x20\n    /* \"#utility.yul\":5609:5618   */\n  dup6\n    /* \"#utility.yul\":5605:5623   */\n  add\n    /* \"#utility.yul\":5598:5632   */\n  mstore\n    /* \"#utility.yul\":5650:5651   */\n  0x00\n    /* \"#utility.yul\":5660:5800   */\ntag_139:\n    /* \"#utility.yul\":5674:5680   */\n  dup2\n    /* \"#utility.yul\":5671:5672   */\n  dup2\n    /* \"#utility.yul\":5668:5681   */\n  lt\n    /* \"#utility.yul\":5660:5800   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":5769:5783   */\n  dup6\n  dup2\n  add\n    /* \"#utility.yul\":5765:5788   */\n  dup4\n  add\n    /* \"#utility.yul\":5759:5789   */\n  mload\n    /* \"#utility.yul\":5735:5752   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":5754:5756   */\n  0x40\n    /* \"#utility.yul\":5731:5757   */\n  add\n    /* \"#utility.yul\":5724:5790   */\n  mstore\n    /* \"#utility.yul\":5689:5699   */\n  dup3\n  add\n    /* \"#utility.yul\":5660:5800   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":5664:5667   */\n  pop\n    /* \"#utility.yul\":5849:5850   */\n  0x00\n    /* \"#utility.yul\":5844:5846   */\n  0x40\n    /* \"#utility.yul\":5835:5841   */\n  dup3\n    /* \"#utility.yul\":5824:5833   */\n  dup7\n    /* \"#utility.yul\":5820:5842   */\n  add\n    /* \"#utility.yul\":5816:5847   */\n  add\n    /* \"#utility.yul\":5809:5851   */\n  mstore\n    /* \"#utility.yul\":5919:5921   */\n  0x40\n    /* \"#utility.yul\":5912:5914   */\n  0x1f\n    /* \"#utility.yul\":5908:5915   */\n  not\n    /* \"#utility.yul\":5903:5905   */\n  0x1f\n    /* \"#utility.yul\":5895:5901   */\n  dup4\n    /* \"#utility.yul\":5891:5906   */\n  add\n    /* \"#utility.yul\":5887:5916   */\n  and\n    /* \"#utility.yul\":5876:5885   */\n  dup6\n    /* \"#utility.yul\":5872:5917   */\n  add\n    /* \"#utility.yul\":5868:5922   */\n  add\n    /* \"#utility.yul\":5860:5922   */\n  swap3\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5380:5928   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5933:6230   */\ntag_59:\n    /* \"#utility.yul\":6051:6063   */\n  dup1\n  mload\n    /* \"#utility.yul\":6098:6102   */\n  0x20\n    /* \"#utility.yul\":6087:6103   */\n  dup1\n  dup4\n  add\n    /* \"#utility.yul\":6081:6104   */\n  mload\n  swap2\n    /* \"#utility.yul\":6051:6063   */\n  swap1\n    /* \"#utility.yul\":6116:6132   */\n  dup2\n  lt\n    /* \"#utility.yul\":6113:6224   */\n  iszero\n  tag_88\n  jumpi\n  not(0x00)\n    /* \"#utility.yul\":6190:6194   */\n  0x20\n    /* \"#utility.yul\":6186:6203   */\n  swap2\n  swap1\n  swap2\n  sub\n    /* \"#utility.yul\":6183:6184   */\n  0x03\n    /* \"#utility.yul\":6179:6204   */\n  shl\n    /* \"#utility.yul\":6175:6213   */\n  shl\n    /* \"#utility.yul\":6164:6214   */\n  and\n  swap2\n    /* \"#utility.yul\":5933:6230   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6235:6360   */\ntag_64:\n    /* \"#utility.yul\":6300:6309   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":6321:6331   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":6318:6354   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":6334:6352   */\n  tag_41\n  tag_78\n  jump\t// in\n    /* \"#utility.yul\":6715:6892   */\ntag_81:\n    /* \"contracts/SuperToken_flattened.sol\":80671:81045  contract SuperToken is ERC20, ERC20Burnable, Ownable, ERC20Permit {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2afe76337b531113eeb6984869209602297c0be432194d84882749ead3021a37\")\n  0x00\n  assignImmutable(\"0xa7cd0fec000bc9bc829eee3f19124c6d92f9bf03bc5604d586b7a9d0b7293aeb\")\n  0x00\n  assignImmutable(\"0x5444bf99e2aaa84d0c0adba4902ca441e981a14d987060ddd53a6e4272e74bca\")\n  0x00\n  assignImmutable(\"0xf9ba965def30954c13b9f17655d4bfcf079e819f9cc42b75928cd97e2c9f9020\")\n  0x00\n  assignImmutable(\"0xf2aed5d52b85e7b229d9a0bb201e12bdcbbc5fc133feb54c1cb531c3f7cf58ed\")\n  0x00\n  assignImmutable(\"0x89dda32db2afb3470ad3a855ff08175ef365ece0147067a2a9b89c9351412201\")\n  0x00\n  assignImmutable(\"0x3f9e555adc0bedaea160f26d13d68ea1bde6a5a9af64af415bccce823c8f9ad8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/SuperToken_flattened.sol\":80671:81045  contract SuperToken is ERC20, ERC20Burnable, Ownable, ERC20Permit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SuperToken_flattened.sol\":67779:67868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SuperToken_flattened.sol\":69998:70184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1269:1283   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1262:1284   */\n      iszero\n        /* \"#utility.yul\":1244:1285   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1217:1235   */\n      add\n        /* \"contracts/SuperToken_flattened.sol\":69998:70184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_27\n        /* \"#utility.yul\":1104:1291   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":68849:68946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"contracts/SuperToken_flattened.sol\":68927:68939  _totalSupply */\n      sload(0x02)\n        /* \"contracts/SuperToken_flattened.sol\":68849:68946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1442:1467   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1415:1433   */\n      add\n        /* \"contracts/SuperToken_flattened.sol\":68849:68946  function totalSupply() public view virtual returns (uint256) {... */\n      tag_27\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":70744:70988  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_29\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":68707:68789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/SuperToken_flattened.sol\":68780:68782  18 */\n      0x12\n        /* \"#utility.yul\":1953:1989   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1941:1943   */\n      0x20\n        /* \"#utility.yul\":1926:1944   */\n      add\n        /* \"contracts/SuperToken_flattened.sol\":68707:68789  function decimals() public view virtual returns (uint8) {... */\n      tag_27\n        /* \"#utility.yul\":1811:1995   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":79292:79404  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_35\n      tag_49\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":80950:81043  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/SuperToken_flattened.sol\":79983:80070  function burn(uint256 value) public virtual {... */\n    tag_10:\n      tag_52\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":69004:69120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_35\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":69095:69113  _balances[account] */\n      and\n        /* \"contracts/SuperToken_flattened.sol\":69069:69076  uint256 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":69095:69113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/SuperToken_flattened.sol\":69004:69120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":61586:61687  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_52\n      tag_65\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":80386:80544  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_13:\n      tag_52\n      tag_67\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":79042:79185  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_14:\n      tag_35\n      tag_70\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":38790:39347  function eip712Domain()... */\n    tag_15:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_27\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":60931:61016  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"contracts/SuperToken_flattened.sol\":61003:61009  _owner */\n      sload(0x05)\n        /* \"contracts/SuperToken_flattened.sol\":60931:61016  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":61003:61009  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3968:4019   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3956:3958   */\n      0x20\n        /* \"#utility.yul\":3941:3959   */\n      add\n        /* \"contracts/SuperToken_flattened.sol\":60931:61016  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":3822:4025   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":67981:68074  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_25\n      tag_82\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":69315:69493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_29\n      tag_85\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":78316:78988  function permit(... */\n    tag_19:\n      tag_52\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":69551:69691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_35\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":69657:69675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/SuperToken_flattened.sol\":69631:69638  uint256 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":69657:69675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":69657:69668  _allowances */\n      0x01\n        /* \"contracts/SuperToken_flattened.sol\":69657:69675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SuperToken_flattened.sol\":69657:69684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/SuperToken_flattened.sol\":69551:69691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":61836:62051  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_52\n      tag_98\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":67779:67868  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"contracts/SuperToken_flattened.sol\":67824:67837  string memory */\n      0x60\n        /* \"contracts/SuperToken_flattened.sol\":67856:67861  _name */\n      0x03\n        /* \"contracts/SuperToken_flattened.sol\":67849:67861  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":67779:67868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":69998:70184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"contracts/SuperToken_flattened.sol\":70071:70075  bool */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":59191:59201  msg.sender */\n      caller\n        /* \"contracts/SuperToken_flattened.sol\":70125:70156  _approve(owner, spender, value) */\n      tag_110\n        /* \"contracts/SuperToken_flattened.sol\":59191:59201  msg.sender */\n      dup2\n        /* \"contracts/SuperToken_flattened.sol\":70141:70148  spender */\n      dup6\n        /* \"contracts/SuperToken_flattened.sol\":70150:70155  value */\n      dup6\n        /* \"contracts/SuperToken_flattened.sol\":70125:70133  _approve */\n      tag_111\n        /* \"contracts/SuperToken_flattened.sol\":70125:70156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/SuperToken_flattened.sol\":70173:70177  true */\n      0x01\n        /* \"contracts/SuperToken_flattened.sol\":70166:70177  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":69998:70184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_107:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":70744:70988  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"contracts/SuperToken_flattened.sol\":70831:70835  bool */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":59191:59201  msg.sender */\n      caller\n        /* \"contracts/SuperToken_flattened.sol\":70887:70924  _spendAllowance(from, spender, value) */\n      tag_115\n        /* \"contracts/SuperToken_flattened.sol\":70903:70907  from */\n      dup6\n        /* \"contracts/SuperToken_flattened.sol\":59191:59201  msg.sender */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":70918:70923  value */\n      dup6\n        /* \"contracts/SuperToken_flattened.sol\":70887:70902  _spendAllowance */\n      tag_116\n        /* \"contracts/SuperToken_flattened.sol\":70887:70924  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/SuperToken_flattened.sol\":70934:70960  _transfer(from, to, value) */\n      tag_117\n        /* \"contracts/SuperToken_flattened.sol\":70944:70948  from */\n      dup6\n        /* \"contracts/SuperToken_flattened.sol\":70950:70952  to */\n      dup6\n        /* \"contracts/SuperToken_flattened.sol\":70954:70959  value */\n      dup6\n        /* \"contracts/SuperToken_flattened.sol\":70934:70943  _transfer */\n      tag_118\n        /* \"contracts/SuperToken_flattened.sol\":70934:70960  _transfer(from, to, value) */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":70977:70981  true */\n      0x01\n      swap5\n        /* \"contracts/SuperToken_flattened.sol\":70744:70988  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":79292:79404  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_49:\n        /* \"contracts/SuperToken_flattened.sol\":79351:79358  bytes32 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":79377:79397  _domainSeparatorV4() */\n      tag_121\n        /* \"contracts/SuperToken_flattened.sol\":79377:79395  _domainSeparatorV4 */\n      tag_122\n        /* \"contracts/SuperToken_flattened.sol\":79377:79397  _domainSeparatorV4() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/SuperToken_flattened.sol\":79370:79397  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":79292:79404  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":80950:81043  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_54:\n        /* \"contracts/SuperToken_flattened.sol\":60824:60837  _checkOwner() */\n      tag_124\n        /* \"contracts/SuperToken_flattened.sol\":60824:60835  _checkOwner */\n      tag_125\n        /* \"contracts/SuperToken_flattened.sol\":60824:60837  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/SuperToken_flattened.sol\":81019:81036  _mint(to, amount) */\n      tag_127\n        /* \"contracts/SuperToken_flattened.sol\":81025:81027  to */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":81029:81035  amount */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":81019:81024  _mint */\n      tag_128\n        /* \"contracts/SuperToken_flattened.sol\":81019:81036  _mint(to, amount) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/SuperToken_flattened.sol\":80950:81043  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":79983:80070  function burn(uint256 value) public virtual {... */\n    tag_58:\n        /* \"contracts/SuperToken_flattened.sol\":80037:80063  _burn(_msgSender(), value) */\n      tag_130\n        /* \"contracts/SuperToken_flattened.sol\":59191:59201  msg.sender */\n      caller\n        /* \"contracts/SuperToken_flattened.sol\":80057:80062  value */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":80037:80042  _burn */\n      tag_132\n        /* \"contracts/SuperToken_flattened.sol\":80037:80063  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/SuperToken_flattened.sol\":79983:80070  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":61586:61687  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"contracts/SuperToken_flattened.sol\":60824:60837  _checkOwner() */\n      tag_135\n        /* \"contracts/SuperToken_flattened.sol\":60824:60835  _checkOwner */\n      tag_125\n        /* \"contracts/SuperToken_flattened.sol\":60824:60837  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/SuperToken_flattened.sol\":61650:61680  _transferOwnership(address(0)) */\n      tag_137\n        /* \"contracts/SuperToken_flattened.sol\":61677:61678  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":61650:61668  _transferOwnership */\n      tag_138\n        /* \"contracts/SuperToken_flattened.sol\":61650:61680  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/SuperToken_flattened.sol\":61586:61687  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":80386:80544  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_68:\n        /* \"contracts/SuperToken_flattened.sol\":80461:80506  _spendAllowance(account, _msgSender(), value) */\n      tag_140\n        /* \"contracts/SuperToken_flattened.sol\":80477:80484  account */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":59191:59201  msg.sender */\n      caller\n        /* \"contracts/SuperToken_flattened.sol\":80500:80505  value */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":80461:80476  _spendAllowance */\n      tag_116\n        /* \"contracts/SuperToken_flattened.sol\":80461:80506  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/SuperToken_flattened.sol\":80516:80537  _burn(account, value) */\n      tag_127\n        /* \"contracts/SuperToken_flattened.sol\":80522:80529  account */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":80531:80536  value */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":80516:80521  _burn */\n      tag_132\n        /* \"contracts/SuperToken_flattened.sol\":80516:80537  _burn(account, value) */\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":79042:79185  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":676:690  _nonces[owner] */\n      dup2\n      and\n        /* \"contracts/SuperToken_flattened.sol\":79133:79140  uint256 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":676:690  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":676:683  _nonces */\n      0x08\n        /* \"contracts/SuperToken_flattened.sol\":676:690  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/SuperToken_flattened.sol\":79159:79178  super.nonces(owner) */\n      tag_107\n        /* \"contracts/SuperToken_flattened.sol\":590:697  function nonces(address owner) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":38790:39347  function eip712Domain()... */\n    tag_74:\n        /* \"contracts/SuperToken_flattened.sol\":38888:38901  bytes1 fields */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":38915:38933  string memory name */\n      0x60\n        /* \"contracts/SuperToken_flattened.sol\":38947:38968  string memory version */\n      dup1\n        /* \"contracts/SuperToken_flattened.sol\":38982:38997  uint256 chainId */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":39011:39036  address verifyingContract */\n      dup1\n        /* \"contracts/SuperToken_flattened.sol\":39050:39062  bytes32 salt */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":39076:39103  uint256[] memory extensions */\n      0x60\n        /* \"contracts/SuperToken_flattened.sol\":39179:39192  _EIP712Name() */\n      tag_147\n        /* \"contracts/SuperToken_flattened.sol\":39179:39190  _EIP712Name */\n      tag_148\n        /* \"contracts/SuperToken_flattened.sol\":39179:39192  _EIP712Name() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/SuperToken_flattened.sol\":39206:39222  _EIP712Version() */\n      tag_149\n        /* \"contracts/SuperToken_flattened.sol\":39206:39220  _EIP712Version */\n      tag_150\n        /* \"contracts/SuperToken_flattened.sol\":39206:39222  _EIP712Version() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/SuperToken_flattened.sol\":39314:39330  new uint256[](0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/SuperToken_flattened.sol\":39298:39299  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":39314:39330  new uint256[](0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      shl(0xf8, 0x0f)\n        /* \"contracts/SuperToken_flattened.sol\":39128:39340  return (... */\n      swap12\n      swap4\n      swap11\n      pop\n      swap2\n      swap9\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":39236:39249  block.chainid */\n      chainid\n      swap8\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":39271:39275  this */\n      address\n      swap7\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":39298:39299  0 */\n      swap5\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":39314:39330  new uint256[](0) */\n      swap3\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":39128:39340  return (... */\n      swap1\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":38790:39347  function eip712Domain()... */\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":67981:68074  function symbol() public view virtual returns (string memory) {... */\n    tag_82:\n        /* \"contracts/SuperToken_flattened.sol\":68028:68041  string memory */\n      0x60\n        /* \"contracts/SuperToken_flattened.sol\":68060:68067  _symbol */\n      0x04\n        /* \"contracts/SuperToken_flattened.sol\":68053:68067  return _symbol */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":69315:69493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_86:\n        /* \"contracts/SuperToken_flattened.sol\":69384:69388  bool */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":59191:59201  msg.sender */\n      caller\n        /* \"contracts/SuperToken_flattened.sol\":69438:69465  _transfer(owner, to, value) */\n      tag_110\n        /* \"contracts/SuperToken_flattened.sol\":59191:59201  msg.sender */\n      dup2\n        /* \"contracts/SuperToken_flattened.sol\":69455:69457  to */\n      dup6\n        /* \"contracts/SuperToken_flattened.sol\":69459:69464  value */\n      dup6\n        /* \"contracts/SuperToken_flattened.sol\":69438:69447  _transfer */\n      tag_118\n        /* \"contracts/SuperToken_flattened.sol\":69438:69465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":78316:78988  function permit(... */\n    tag_91:\n        /* \"contracts/SuperToken_flattened.sol\":78537:78545  deadline */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":78519:78534  block.timestamp */\n      timestamp\n        /* \"contracts/SuperToken_flattened.sol\":78519:78545  block.timestamp > deadline */\n      gt\n        /* \"contracts/SuperToken_flattened.sol\":78515:78612  if (block.timestamp > deadline) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":78568:78601  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      shl(0xe1, 0x313c8981)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1442:1467   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":1415:1433   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":78568:78601  ERC2612ExpiredSignature(deadline) */\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SuperToken_flattened.sol\":78515:78612  if (block.timestamp > deadline) {... */\n    tag_166:\n        /* \"contracts/SuperToken_flattened.sol\":78622:78640  bytes32 structHash */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":77658:77753  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/SuperToken_flattened.sol\":78681:78686  owner */\n      dup9\n        /* \"contracts/SuperToken_flattened.sol\":78688:78695  spender */\n      dup9\n        /* \"contracts/SuperToken_flattened.sol\":78697:78702  value */\n      dup9\n        /* \"contracts/SuperToken_flattened.sol\":78704:78720  _useNonce(owner) */\n      tag_168\n        /* \"contracts/SuperToken_flattened.sol\":78714:78719  owner */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":1173:1187  _nonces[owner] */\n      and\n        /* \"contracts/SuperToken_flattened.sol\":871:878  uint256 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":1173:1187  _nonces[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":1173:1180  _nonces */\n      0x08\n        /* \"contracts/SuperToken_flattened.sol\":1173:1187  _nonces[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SuperToken_flattened.sol\":1173:1189  _nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      swap1\n        /* \"contracts/SuperToken_flattened.sol\":811:1206  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":78704:78720  _useNonce(owner) */\n    tag_168:\n        /* \"contracts/SuperToken_flattened.sol\":78653:78731  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":5797:5822   */\n      swap7\n      swap1\n      swap7\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5896:5911   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":5876:5894   */\n      swap1\n      dup7\n      add\n        /* \"#utility.yul\":5869:5912   */\n      mstore\n        /* \"#utility.yul\":5948:5963   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5928:5946   */\n      0x60\n      dup5\n      add\n        /* \"#utility.yul\":5921:5964   */\n      mstore\n        /* \"#utility.yul\":5980:5998   */\n      0x80\n      dup4\n      add\n        /* \"#utility.yul\":5973:6007   */\n      mstore\n        /* \"#utility.yul\":6023:6042   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":6016:6051   */\n      mstore\n        /* \"#utility.yul\":6067:6086   */\n      0xc0\n      dup2\n      add\n        /* \"#utility.yul\":6060:6095   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":5769:5788   */\n      0xe0\n      add\n        /* \"contracts/SuperToken_flattened.sol\":78653:78731  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":78643:78732  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/SuperToken_flattened.sol\":78622:78732  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":78743:78755  bytes32 hash */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":78758:78786  _hashTypedDataV4(structHash) */\n      tag_172\n        /* \"contracts/SuperToken_flattened.sol\":78775:78785  structHash */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":78758:78774  _hashTypedDataV4 */\n      tag_173\n        /* \"contracts/SuperToken_flattened.sol\":78758:78786  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/SuperToken_flattened.sol\":78743:78786  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":78797:78811  address signer */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":78814:78842  ECDSA.recover(hash, v, r, s) */\n      tag_174\n        /* \"contracts/SuperToken_flattened.sol\":78828:78832  hash */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":78834:78835  v */\n      dup8\n        /* \"contracts/SuperToken_flattened.sol\":78837:78838  r */\n      dup8\n        /* \"contracts/SuperToken_flattened.sol\":78840:78841  s */\n      dup8\n        /* \"contracts/SuperToken_flattened.sol\":78814:78827  ECDSA.recover */\n      tag_175\n        /* \"contracts/SuperToken_flattened.sol\":78814:78842  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/SuperToken_flattened.sol\":78797:78842  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":78866:78871  owner */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":78856:78871  signer != owner */\n      and\n        /* \"contracts/SuperToken_flattened.sol\":78856:78862  signer */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":78856:78871  signer != owner */\n      and\n      eq\n        /* \"contracts/SuperToken_flattened.sol\":78852:78940  if (signer != owner) {... */\n      tag_176\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":78894:78929  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      shl(0xe1, 0x25c00723)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6336:6351   */\n      dup1\n      dup4\n      and\n        /* \"contracts/SuperToken_flattened.sol\":78894:78929  ERC2612InvalidSigner(signer, owner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6318:6352   */\n      mstore\n        /* \"#utility.yul\":6388:6403   */\n      dup12\n      and\n        /* \"#utility.yul\":6368:6386   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6361:6404   */\n      mstore\n        /* \"#utility.yul\":6253:6271   */\n      0x44\n      add\n        /* \"contracts/SuperToken_flattened.sol\":78894:78929  ERC2612InvalidSigner(signer, owner) */\n      tag_167\n        /* \"#utility.yul\":6106:6410   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":78852:78940  if (signer != owner) {... */\n    tag_176:\n        /* \"contracts/SuperToken_flattened.sol\":78950:78981  _approve(owner, spender, value) */\n      tag_179\n        /* \"contracts/SuperToken_flattened.sol\":78959:78964  owner */\n      dup11\n        /* \"contracts/SuperToken_flattened.sol\":78966:78973  spender */\n      dup11\n        /* \"contracts/SuperToken_flattened.sol\":78975:78980  value */\n      dup11\n        /* \"contracts/SuperToken_flattened.sol\":78950:78958  _approve */\n      tag_111\n        /* \"contracts/SuperToken_flattened.sol\":78950:78981  _approve(owner, spender, value) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/SuperToken_flattened.sol\":78505:78988  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":78316:78988  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":61836:62051  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_99:\n        /* \"contracts/SuperToken_flattened.sol\":60824:60837  _checkOwner() */\n      tag_182\n        /* \"contracts/SuperToken_flattened.sol\":60824:60835  _checkOwner */\n      tag_125\n        /* \"contracts/SuperToken_flattened.sol\":60824:60837  _checkOwner() */\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":61920:61942  newOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/SuperToken_flattened.sol\":61916:62007  if (newOwner == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":61965:61996  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":61993:61994  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":61965:61996  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3968:4019   */\n      mstore\n        /* \"#utility.yul\":3941:3959   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":61965:61996  OwnableInvalidOwner(address(0)) */\n      tag_167\n        /* \"#utility.yul\":3822:4025   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":61916:62007  if (newOwner == address(0)) {... */\n    tag_184:\n        /* \"contracts/SuperToken_flattened.sol\":62016:62044  _transferOwnership(newOwner) */\n      tag_130\n        /* \"contracts/SuperToken_flattened.sol\":62035:62043  newOwner */\n      dup2\n        /* \"contracts/SuperToken_flattened.sol\":62016:62034  _transferOwnership */\n      tag_138\n        /* \"contracts/SuperToken_flattened.sol\":62016:62044  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":74694:74822  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_111:\n        /* \"contracts/SuperToken_flattened.sol\":74778:74815  _approve(owner, spender, value, true) */\n      tag_189\n        /* \"contracts/SuperToken_flattened.sol\":74787:74792  owner */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":74794:74801  spender */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":74803:74808  value */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":74810:74814  true */\n      0x01\n        /* \"contracts/SuperToken_flattened.sol\":74778:74786  _approve */\n      tag_190\n        /* \"contracts/SuperToken_flattened.sol\":74778:74815  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/SuperToken_flattened.sol\":74694:74822  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":76368:76845  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":69657:69675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"contracts/SuperToken_flattened.sol\":76467:76491  uint256 currentAllowance */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":69657:69675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":69657:69668  _allowances */\n      0x01\n        /* \"contracts/SuperToken_flattened.sol\":69657:69675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SuperToken_flattened.sol\":69657:69684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/SuperToken_flattened.sol\":76533:76570  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"contracts/SuperToken_flattened.sol\":76529:76839  if (currentAllowance != type(uint256).max) {... */\n      tag_197\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":76609:76614  value */\n      dup2\n        /* \"contracts/SuperToken_flattened.sol\":76590:76606  currentAllowance */\n      dup2\n        /* \"contracts/SuperToken_flattened.sol\":76590:76614  currentAllowance < value */\n      lt\n        /* \"contracts/SuperToken_flattened.sol\":76586:76716  if (currentAllowance < value) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":76641:76701  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6635:6667   */\n      dup5\n      and\n        /* \"contracts/SuperToken_flattened.sol\":76641:76701  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6617:6668   */\n      mstore\n        /* \"#utility.yul\":6684:6702   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6677:6711   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6727:6745   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6720:6754   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6590:6608   */\n      0x64\n      add\n        /* \"contracts/SuperToken_flattened.sol\":76641:76701  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_167\n        /* \"#utility.yul\":6415:6760   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":76586:76716  if (currentAllowance < value) {... */\n    tag_194:\n        /* \"contracts/SuperToken_flattened.sol\":76757:76814  _approve(owner, spender, currentAllowance - value, false) */\n      tag_197\n        /* \"contracts/SuperToken_flattened.sol\":76766:76771  owner */\n      dup5\n        /* \"contracts/SuperToken_flattened.sol\":76773:76780  spender */\n      dup5\n        /* \"contracts/SuperToken_flattened.sol\":76801:76806  value */\n      dup5\n        /* \"contracts/SuperToken_flattened.sol\":76782:76798  currentAllowance */\n      dup5\n        /* \"contracts/SuperToken_flattened.sol\":76782:76806  currentAllowance - value */\n      sub\n        /* \"contracts/SuperToken_flattened.sol\":76808:76813  false */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":76757:76765  _approve */\n      tag_190\n        /* \"contracts/SuperToken_flattened.sol\":76757:76814  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/SuperToken_flattened.sol\":76457:76845  {... */\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":76368:76845  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":71361:71661  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":71444:71462  from == address(0) */\n      dup4\n      and\n        /* \"contracts/SuperToken_flattened.sol\":71440:71526  if (from == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":71485:71515  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":71512:71513  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":71485:71515  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3968:4019   */\n      mstore\n        /* \"#utility.yul\":3941:3959   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":71485:71515  ERC20InvalidSender(address(0)) */\n      tag_167\n        /* \"#utility.yul\":3822:4025   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":71440:71526  if (from == address(0)) {... */\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":71539:71555  to == address(0) */\n      dup3\n      and\n        /* \"contracts/SuperToken_flattened.sol\":71535:71621  if (to == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":71578:71610  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":71607:71608  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":71578:71610  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3968:4019   */\n      mstore\n        /* \"#utility.yul\":3941:3959   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":71578:71610  ERC20InvalidReceiver(address(0)) */\n      tag_167\n        /* \"#utility.yul\":3822:4025   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":71535:71621  if (to == address(0)) {... */\n    tag_201:\n        /* \"contracts/SuperToken_flattened.sol\":71630:71654  _update(from, to, value) */\n      tag_189\n        /* \"contracts/SuperToken_flattened.sol\":71638:71642  from */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":71644:71646  to */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":71648:71653  value */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":71630:71637  _update */\n      tag_204\n        /* \"contracts/SuperToken_flattened.sol\":71630:71654  _update(from, to, value) */\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":37491:37753  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_122:\n        /* \"contracts/SuperToken_flattened.sol\":37544:37551  bytes32 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":37575:37579  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":37584:37595  _cachedThis */\n      immutable(\"0xf2aed5d52b85e7b229d9a0bb201e12bdcbbc5fc133feb54c1cb531c3f7cf58ed\")\n        /* \"contracts/SuperToken_flattened.sol\":37567:37595  address(this) == _cachedThis */\n      and\n      eq\n        /* \"contracts/SuperToken_flattened.sol\":37567:37630  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_206\n      jumpi\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":37616:37630  _cachedChainId */\n      immutable(\"0x89dda32db2afb3470ad3a855ff08175ef365ece0147067a2a9b89c9351412201\")\n        /* \"contracts/SuperToken_flattened.sol\":37599:37612  block.chainid */\n      chainid\n        /* \"contracts/SuperToken_flattened.sol\":37599:37630  block.chainid == _cachedChainId */\n      eq\n        /* \"contracts/SuperToken_flattened.sol\":37567:37630  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_206:\n        /* \"contracts/SuperToken_flattened.sol\":37563:37747  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_207\n      jumpi\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":37653:37675  _cachedDomainSeparator */\n      immutable(\"0x3f9e555adc0bedaea160f26d13d68ea1bde6a5a9af64af415bccce823c8f9ad8\")\n      swap1\n        /* \"contracts/SuperToken_flattened.sol\":37491:37753  function _domainSeparatorV4() internal view returns (bytes32) {... */\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":37563:37747  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_207:\n        /* \"contracts/SuperToken_flattened.sol\":37713:37736  _buildDomainSeparator() */\n      tag_121\n        /* \"contracts/SuperToken_flattened.sol\":37850:37930  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/SuperToken_flattened.sol\":35725:35820  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"contracts/SuperToken_flattened.sol\":37850:37930  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":7251:7276   */\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":37872:37883  _hashedName */\n      immutable(\"0xf9ba965def30954c13b9f17655d4bfcf079e819f9cc42b75928cd97e2c9f9020\")\n        /* \"#utility.yul\":7292:7310   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":7285:7319   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":37885:37899  _hashedVersion */\n      immutable(\"0x5444bf99e2aaa84d0c0adba4902ca441e981a14d987060ddd53a6e4272e74bca\")\n        /* \"#utility.yul\":7335:7353   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":7328:7362   */\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":37901:37914  block.chainid */\n      chainid\n        /* \"#utility.yul\":7378:7396   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":7371:7405   */\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":37924:37928  this */\n      address\n        /* \"#utility.yul\":7421:7440   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":7414:7475   */\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":37814:37821  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":7223:7242   */\n      0xc0\n      add\n        /* \"contracts/SuperToken_flattened.sol\":37850:37930  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":37840:37931  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/SuperToken_flattened.sol\":37833:37931  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":37759:37938  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":61089:61251  function _checkOwner() internal view virtual {... */\n    tag_125:\n        /* \"contracts/SuperToken_flattened.sol\":61003:61009  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/SuperToken_flattened.sol\":59191:59201  msg.sender */\n      caller\n        /* \"contracts/SuperToken_flattened.sol\":61148:61171  owner() != _msgSender() */\n      eq\n        /* \"contracts/SuperToken_flattened.sol\":61144:61245  if (owner() != _msgSender()) {... */\n      tag_137\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":61194:61234  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":59191:59201  msg.sender */\n      caller\n        /* \"contracts/SuperToken_flattened.sol\":61194:61234  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3968:4019   */\n      mstore\n        /* \"#utility.yul\":3941:3959   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":61194:61234  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_167\n        /* \"#utility.yul\":3822:4025   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":73426:73634  function _mint(address account, uint256 value) internal {... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":73496:73517  account == address(0) */\n      dup3\n      and\n        /* \"contracts/SuperToken_flattened.sol\":73492:73583  if (account == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":73540:73572  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":73569:73570  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":73540:73572  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3968:4019   */\n      mstore\n        /* \"#utility.yul\":3941:3959   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":73540:73572  ERC20InvalidReceiver(address(0)) */\n      tag_167\n        /* \"#utility.yul\":3822:4025   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":73492:73583  if (account == address(0)) {... */\n    tag_218:\n        /* \"contracts/SuperToken_flattened.sol\":73592:73627  _update(address(0), account, value) */\n      tag_127\n        /* \"contracts/SuperToken_flattened.sol\":73608:73609  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":73612:73619  account */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":73621:73626  value */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":73592:73599  _update */\n      tag_204\n        /* \"contracts/SuperToken_flattened.sol\":73592:73627  _update(address(0), account, value) */\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":73952:74158  function _burn(address account, uint256 value) internal {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":74022:74043  account == address(0) */\n      dup3\n      and\n        /* \"contracts/SuperToken_flattened.sol\":74018:74107  if (account == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":74066:74096  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":74093:74094  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":74066:74096  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3968:4019   */\n      mstore\n        /* \"#utility.yul\":3941:3959   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":74066:74096  ERC20InvalidSender(address(0)) */\n      tag_167\n        /* \"#utility.yul\":3822:4025   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":74018:74107  if (account == address(0)) {... */\n    tag_222:\n        /* \"contracts/SuperToken_flattened.sol\":74116:74151  _update(account, address(0), value) */\n      tag_127\n        /* \"contracts/SuperToken_flattened.sol\":74124:74131  account */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":74141:74142  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":74145:74150  value */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":74116:74123  _update */\n      tag_204\n        /* \"contracts/SuperToken_flattened.sol\":74116:74151  _update(account, address(0), value) */\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":62205:62392  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_138:\n        /* \"contracts/SuperToken_flattened.sol\":62297:62303  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":62313:62330  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/SuperToken_flattened.sol\":62345:62385  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/SuperToken_flattened.sol\":62297:62303  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/SuperToken_flattened.sol\":62313:62330  _owner = newOwner */\n      swap1\n        /* \"contracts/SuperToken_flattened.sol\":62297:62303  _owner */\n      dup3\n      swap1\n        /* \"contracts/SuperToken_flattened.sol\":62345:62385  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/SuperToken_flattened.sol\":62278:62294  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/SuperToken_flattened.sol\":62345:62385  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/SuperToken_flattened.sol\":62268:62392  {... */\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":62205:62392  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":39667:39793  function _EIP712Name() internal view returns (string memory) {... */\n    tag_148:\n        /* \"contracts/SuperToken_flattened.sol\":39713:39726  string memory */\n      0x60\n        /* \"contracts/SuperToken_flattened.sol\":39745:39786  _name.toStringWithFallback(_nameFallback) */\n      tag_121\n        /* \"contracts/SuperToken_flattened.sol\":39745:39750  _name */\n      immutable(\"0xa7cd0fec000bc9bc829eee3f19124c6d92f9bf03bc5604d586b7a9d0b7293aeb\")\n        /* \"contracts/SuperToken_flattened.sol\":39772:39785  _nameFallback */\n      0x06\n        /* \"contracts/SuperToken_flattened.sol\":39745:39771  _name.toStringWithFallback */\n      tag_229\n        /* \"contracts/SuperToken_flattened.sol\":39745:39786  _name.toStringWithFallback(_nameFallback) */\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":40119:40254  function _EIP712Version() internal view returns (string memory) {... */\n    tag_150:\n        /* \"contracts/SuperToken_flattened.sol\":40168:40181  string memory */\n      0x60\n        /* \"contracts/SuperToken_flattened.sol\":40200:40247  _version.toStringWithFallback(_versionFallback) */\n      tag_121\n        /* \"contracts/SuperToken_flattened.sol\":40200:40208  _version */\n      immutable(\"0x2afe76337b531113eeb6984869209602297c0be432194d84882749ead3021a37\")\n        /* \"contracts/SuperToken_flattened.sol\":40230:40246  _versionFallback */\n      0x07\n        /* \"contracts/SuperToken_flattened.sol\":40200:40229  _version.toStringWithFallback */\n      tag_229\n        /* \"contracts/SuperToken_flattened.sol\":40200:40247  _version.toStringWithFallback(_versionFallback) */\n      jump\t// in\n        /* \"contracts/SuperToken_flattened.sol\":38563:38739  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_173:\n        /* \"contracts/SuperToken_flattened.sol\":38640:38647  bytes32 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":38666:38732  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_107\n        /* \"contracts/SuperToken_flattened.sol\":38699:38719  _domainSeparatorV4() */\n      tag_235\n        /* \"contracts/SuperToken_flattened.sol\":38699:38717  _domainSeparatorV4 */\n      tag_122\n        /* \"contracts/SuperToken_flattened.sol\":38699:38719  _domainSeparatorV4() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/SuperToken_flattened.sol\":38721:38731  structHash */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":33584:33588  0x40 */\n      0x40\n        /* \"contracts/SuperToken_flattened.sol\":33578:33589  mload(0x40) */\n      mload\n      shl(0xf0, 0x1901)\n        /* \"contracts/SuperToken_flattened.sol\":33602:33625  mstore(ptr, hex\"19_01\") */\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":33654:33658  0x02 */\n      0x02\n        /* \"contracts/SuperToken_flattened.sol\":33645:33659  add(ptr, 0x02) */\n      dup2\n      add\n        /* \"contracts/SuperToken_flattened.sol\":33638:33677  mstore(add(ptr, 0x02), domainSeparator) */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":33706:33710  0x22 */\n      0x22\n        /* \"contracts/SuperToken_flattened.sol\":33697:33711  add(ptr, 0x22) */\n      dup3\n      add\n        /* \"contracts/SuperToken_flattened.sol\":33690:33724  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":33762:33766  0x42 */\n      0x42\n        /* \"contracts/SuperToken_flattened.sol\":33747:33767  keccak256(ptr, 0x42) */\n      swap1\n      keccak256\n      swap1\n        /* \"contracts/SuperToken_flattened.sol\":33382:33783  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":47093:47353  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_175:\n        /* \"contracts/SuperToken_flattened.sol\":47178:47185  address */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":47198:47215  address recovered */\n      dup1\n        /* \"contracts/SuperToken_flattened.sol\":47217:47235  RecoverError error */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":47237:47253  bytes32 errorArg */\n      dup1\n        /* \"contracts/SuperToken_flattened.sol\":47257:47282  tryRecover(hash, v, r, s) */\n      tag_238\n        /* \"contracts/SuperToken_flattened.sol\":47268:47272  hash */\n      dup9\n        /* \"contracts/SuperToken_flattened.sol\":47274:47275  v */\n      dup9\n        /* \"contracts/SuperToken_flattened.sol\":47277:47278  r */\n      dup9\n        /* \"contracts/SuperToken_flattened.sol\":47280:47281  s */\n      dup9\n        /* \"contracts/SuperToken_flattened.sol\":47257:47267  tryRecover */\n      tag_239\n        /* \"contracts/SuperToken_flattened.sol\":47257:47282  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/SuperToken_flattened.sol\":47197:47282  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":47292:47320  _throwError(error, errorArg) */\n      tag_240\n        /* \"contracts/SuperToken_flattened.sol\":47304:47309  error */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":47311:47319  errorArg */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":47292:47303  _throwError */\n      tag_241\n        /* \"contracts/SuperToken_flattened.sol\":47292:47320  _throwError(error, errorArg) */\n      jump\t// in\n    tag_240:\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":47337:47346  recovered */\n      swap1\n      swap7\n        /* \"contracts/SuperToken_flattened.sol\":47093:47353  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":75654:76086  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":75766:75785  owner == address(0) */\n      dup5\n      and\n        /* \"contracts/SuperToken_flattened.sol\":75762:75851  if (owner == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":75808:75840  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":75837:75838  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":75808:75840  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3968:4019   */\n      mstore\n        /* \"#utility.yul\":3941:3959   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":75808:75840  ERC20InvalidApprover(address(0)) */\n      tag_167\n        /* \"#utility.yul\":3822:4025   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":75762:75851  if (owner == address(0)) {... */\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":75864:75885  spender == address(0) */\n      dup4\n      and\n        /* \"contracts/SuperToken_flattened.sol\":75860:75950  if (spender == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":75908:75939  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":75936:75937  0 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":75908:75939  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3968:4019   */\n      mstore\n        /* \"#utility.yul\":3941:3959   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":75908:75939  ERC20InvalidSpender(address(0)) */\n      tag_167\n        /* \"#utility.yul\":3822:4025   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":75860:75950  if (spender == address(0)) {... */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":75959:75977  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":75959:75970  _allowances */\n      0x01\n        /* \"contracts/SuperToken_flattened.sol\":75959:75977  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SuperToken_flattened.sol\":75959:75986  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"contracts/SuperToken_flattened.sol\":75959:75994  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/SuperToken_flattened.sol\":76004:76080  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":76054:76061  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":76038:76069  Approval(owner, spender, value) */\n      and\n        /* \"contracts/SuperToken_flattened.sol\":76047:76052  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":76038:76069  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/SuperToken_flattened.sol\":76063:76068  value */\n      dup5\n        /* \"contracts/SuperToken_flattened.sol\":76038:76069  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_248\n      swap2\n        /* \"#utility.yul\":1442:1467   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1415:1433   */\n      add\n      swap1\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":76038:76069  Approval(owner, spender, value) */\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SuperToken_flattened.sol\":75654:76086  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":71976:73083  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":72065:72083  from == address(0) */\n      dup4\n      and\n        /* \"contracts/SuperToken_flattened.sol\":72061:72601  if (from == address(0)) {... */\n      tag_250\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":72217:72222  value */\n      dup1\n        /* \"contracts/SuperToken_flattened.sol\":72201:72213  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":72201:72222  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":72061:72601  if (from == address(0)) {... */\n      tag_253\n      swap1\n      pop\n      jump\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":72275:72290  _balances[from] */\n      dup4\n      and\n        /* \"contracts/SuperToken_flattened.sol\":72253:72272  uint256 fromBalance */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":72275:72290  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SuperToken_flattened.sol\":72308:72327  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"contracts/SuperToken_flattened.sol\":72304:72419  if (fromBalance < value) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":72354:72404  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6635:6667   */\n      dup6\n      and\n        /* \"contracts/SuperToken_flattened.sol\":72354:72404  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6617:6668   */\n      mstore\n        /* \"#utility.yul\":6684:6702   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6677:6711   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6727:6745   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6720:6754   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":6590:6608   */\n      0x64\n      add\n        /* \"contracts/SuperToken_flattened.sol\":72354:72404  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_167\n        /* \"#utility.yul\":6415:6760   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":72304:72419  if (fromBalance < value) {... */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":72539:72554  _balances[from] */\n      dup5\n      and\n        /* \"contracts/SuperToken_flattened.sol\":72539:72548  _balances */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":72539:72554  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SuperToken_flattened.sol\":72557:72576  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"contracts/SuperToken_flattened.sol\":72539:72576  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"contracts/SuperToken_flattened.sol\":72061:72601  if (from == address(0)) {... */\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":72615:72631  to == address(0) */\n      dup3\n      and\n        /* \"contracts/SuperToken_flattened.sol\":72611:73036  if (to == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":72778:72790  _totalSupply */\n      0x02\n        /* \"contracts/SuperToken_flattened.sol\":72778:72799  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/SuperToken_flattened.sol\":72611:73036  if (to == address(0)) {... */\n      jump(tag_257)\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":72989:73002  _balances[to] */\n      dup3\n      and\n        /* \"contracts/SuperToken_flattened.sol\":72989:72998  _balances */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":72989:73002  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SuperToken_flattened.sol\":72989:73011  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"contracts/SuperToken_flattened.sol\":72611:73036  if (to == address(0)) {... */\n    tag_257:\n        /* \"contracts/SuperToken_flattened.sol\":73066:73068  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":73051:73076  Transfer(from, to, value) */\n      and\n        /* \"contracts/SuperToken_flattened.sol\":73060:73064  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":73051:73076  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/SuperToken_flattened.sol\":73070:73075  value */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":73051:73076  Transfer(from, to, value) */\n      mload(0x40)\n      tag_258\n      swap2\n        /* \"#utility.yul\":1442:1467   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1430:1432   */\n      0x20\n        /* \"#utility.yul\":1415:1433   */\n      add\n      swap1\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":73051:73076  Transfer(from, to, value) */\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SuperToken_flattened.sol\":71976:73083  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":9631:9898  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_229:\n        /* \"contracts/SuperToken_flattened.sol\":9725:9738  string memory */\n      0x60\n        /* \"contracts/SuperToken_flattened.sol\":7636:7702  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"contracts/SuperToken_flattened.sol\":9754:9800  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      dup4\n      eq\n        /* \"contracts/SuperToken_flattened.sol\":9750:9892  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_263\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":9823:9838  toString(value) */\n      tag_264\n        /* \"contracts/SuperToken_flattened.sol\":9832:9837  value */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":9823:9831  toString */\n      tag_265\n        /* \"contracts/SuperToken_flattened.sol\":9823:9838  toString(value) */\n      jump\t// in\n    tag_264:\n        /* \"contracts/SuperToken_flattened.sol\":9816:9838  return toString(value) */\n      swap1\n      pop\n      jump(tag_107)\n        /* \"contracts/SuperToken_flattened.sol\":9750:9892  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_263:\n        /* \"contracts/SuperToken_flattened.sol\":9876:9881  store */\n      dup2\n        /* \"contracts/SuperToken_flattened.sol\":9869:9881  return store */\n      dup1\n      sload\n      tag_267\n      swap1\n      tag_102\n      jump\t// in\n    tag_267:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_268\n      swap1\n      tag_102\n      jump\t// in\n    tag_268:\n      dup1\n      iszero\n      tag_269\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_270\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_269)\n    tag_270:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_271:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_271\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_269:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      jump(tag_107)\n        /* \"contracts/SuperToken_flattened.sol\":45430:46960  function tryRecover(... */\n    tag_239:\n        /* \"contracts/SuperToken_flattened.sol\":45556:45563  address */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/SuperToken_flattened.sol\":46489:46555  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"contracts/SuperToken_flattened.sol\":46476:46555  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"contracts/SuperToken_flattened.sol\":46472:46636  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_274\n      jumpi\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":46587:46588  0 */\n      0x00\n      swap2\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":46591:46621  RecoverError.InvalidSignatureS */\n      0x03\n      swap1\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":46623:46624  s */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":46571:46625  return (address(0), RecoverError.InvalidSignatureS, s) */\n      jump(tag_273)\n        /* \"contracts/SuperToken_flattened.sol\":46472:46636  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_274:\n        /* \"contracts/SuperToken_flattened.sol\":46747:46771  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/SuperToken_flattened.sol\":46730:46744  address signer */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":46747:46771  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":7713:7738   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":7786:7790   */\n      0xff\n        /* \"#utility.yul\":7774:7791   */\n      dup10\n      and\n        /* \"#utility.yul\":7754:7772   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":7747:7792   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7808:7826   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":7801:7835   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":7851:7869   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":7844:7878   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":46747:46771  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":7685:7704   */\n      0xa0\n      add\n        /* \"contracts/SuperToken_flattened.sol\":46747:46771  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_278:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SuperToken_flattened.sol\":46785:46805  signer == address(0) */\n      dup2\n      and\n        /* \"contracts/SuperToken_flattened.sol\":46781:46894  if (signer == address(0)) {... */\n      tag_279\n      jumpi\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":46837:46838  0 */\n      0x00\n      swap3\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":46841:46870  RecoverError.InvalidSignature */\n      0x01\n      swap2\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":46837:46838  0 */\n      dup3\n      swap1\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":46821:46883  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      jump(tag_273)\n        /* \"contracts/SuperToken_flattened.sol\":46781:46894  if (signer == address(0)) {... */\n    tag_279:\n        /* \"contracts/SuperToken_flattened.sol\":46912:46918  signer */\n      swap3\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":46920:46940  RecoverError.NoError */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":45430:46960  function tryRecover(... */\n    tag_273:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":47486:48018  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_241:\n        /* \"contracts/SuperToken_flattened.sol\":47581:47601  RecoverError.NoError */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":47572:47577  error */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":47572:47601  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_285\n      jumpi\n      tag_285\n      tag_283\n      jump\t// in\n    tag_285:\n      sub\n        /* \"contracts/SuperToken_flattened.sol\":47568:48012  if (error == RecoverError.NoError) {... */\n      tag_286\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":47486:48018  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":47568:48012  if (error == RecoverError.NoError) {... */\n    tag_286:\n        /* \"contracts/SuperToken_flattened.sol\":47677:47706  RecoverError.InvalidSignature */\n      0x01\n        /* \"contracts/SuperToken_flattened.sol\":47668:47673  error */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":47668:47706  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_291\n      jumpi\n      tag_291\n      tag_283\n      jump\t// in\n    tag_291:\n      sub\n        /* \"contracts/SuperToken_flattened.sol\":47664:48012  if (error == RecoverError.InvalidSignature) {... */\n      tag_292\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":47729:47752  ECDSAInvalidSignature() */\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/SuperToken_flattened.sol\":47664:48012  if (error == RecoverError.InvalidSignature) {... */\n    tag_292:\n        /* \"contracts/SuperToken_flattened.sol\":47782:47817  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"contracts/SuperToken_flattened.sol\":47773:47778  error */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":47773:47817  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_297\n      jumpi\n      tag_297\n      tag_283\n      jump\t// in\n    tag_297:\n      sub\n        /* \"contracts/SuperToken_flattened.sol\":47769:48012  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_298\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":47840:47886  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1442:1467   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1415:1433   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":47840:47886  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      tag_167\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":47769:48012  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_298:\n        /* \"contracts/SuperToken_flattened.sol\":47916:47946  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"contracts/SuperToken_flattened.sol\":47907:47912  error */\n      dup3\n        /* \"contracts/SuperToken_flattened.sol\":47907:47946  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_304\n      jumpi\n      tag_304\n      tag_283\n      jump\t// in\n    tag_304:\n      sub\n        /* \"contracts/SuperToken_flattened.sol\":47903:48012  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_127\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":47969:48001  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      shl(0xe2, 0x35e2f383)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1442:1467   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1415:1433   */\n      0x24\n      add\n        /* \"contracts/SuperToken_flattened.sol\":47969:48001  ECDSAInvalidSignatureS(errorArg) */\n      tag_167\n        /* \"#utility.yul\":1296:1473   */\n      jump\n        /* \"contracts/SuperToken_flattened.sol\":8324:8729  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_265:\n        /* \"contracts/SuperToken_flattened.sol\":8383:8396  string memory */\n      0x60\n        /* \"contracts/SuperToken_flattened.sol\":8408:8419  uint256 len */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":8422:8438  byteLength(sstr) */\n      tag_308\n        /* \"contracts/SuperToken_flattened.sol\":8433:8437  sstr */\n      dup4\n        /* \"contracts/SuperToken_flattened.sol\":8422:8432  byteLength */\n      tag_309\n        /* \"contracts/SuperToken_flattened.sol\":8422:8438  byteLength(sstr) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/SuperToken_flattened.sol\":8546:8560  new string(32) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/SuperToken_flattened.sol\":8557:8559  32 */\n      0x20\n        /* \"contracts/SuperToken_flattened.sol\":8546:8560  new string(32) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/SuperToken_flattened.sol\":8408:8438  uint256 len = byteLength(sstr) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":8526:8543  string memory str */\n      0x00\n      swap2\n        /* \"contracts/SuperToken_flattened.sol\":8546:8560  new string(32) */\n      swap1\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":8636:8652  mstore(str, len) */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":8681:8685  0x20 */\n      0x20\n        /* \"contracts/SuperToken_flattened.sol\":8672:8686  add(str, 0x20) */\n      dup2\n      add\n        /* \"contracts/SuperToken_flattened.sol\":8665:8693  mstore(add(str, 0x20), sstr) */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"contracts/SuperToken_flattened.sol\":8636:8652  mstore(str, len) */\n      swap1\n        /* \"contracts/SuperToken_flattened.sol\":8324:8729  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"contracts/SuperToken_flattened.sol\":8801:9046  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_309:\n        /* \"contracts/SuperToken_flattened.sol\":8862:8869  uint256 */\n      0x00\n        /* \"contracts/SuperToken_flattened.sol\":8934:8938  0xFF */\n      0xff\n        /* \"contracts/SuperToken_flattened.sol\":8898:8938  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      dup3\n      and\n        /* \"contracts/SuperToken_flattened.sol\":8961:8963  31 */\n      0x1f\n        /* \"contracts/SuperToken_flattened.sol\":8952:8963  result > 31 */\n      dup2\n      gt\n        /* \"contracts/SuperToken_flattened.sol\":8948:9017  if (result > 31) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"contracts/SuperToken_flattened.sol\":8986:9006  InvalidShortString() */\n      mload(0x40)\n      shl(0xe2, 0x2cd44ac3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:437   */\n    tag_315:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":146:147   */\n      0x00\n        /* \"#utility.yul\":156:318   */\n    tag_319:\n        /* \"#utility.yul\":170:176   */\n      dup2\n        /* \"#utility.yul\":167:168   */\n      dup2\n        /* \"#utility.yul\":164:177   */\n      lt\n        /* \"#utility.yul\":156:318   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":232:236   */\n      0x20\n        /* \"#utility.yul\":288:301   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":284:306   */\n      dup2\n      add\n        /* \"#utility.yul\":278:307   */\n      mload\n        /* \"#utility.yul\":260:271   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":256:276   */\n      dup3\n      add\n        /* \"#utility.yul\":249:308   */\n      mstore\n        /* \"#utility.yul\":185:197   */\n      add\n        /* \"#utility.yul\":156:318   */\n      jump(tag_319)\n    tag_321:\n        /* \"#utility.yul\":160:163   */\n      pop\n        /* \"#utility.yul\":363:364   */\n      0x00\n        /* \"#utility.yul\":356:360   */\n      0x20\n        /* \"#utility.yul\":347:353   */\n      dup3\n        /* \"#utility.yul\":342:345   */\n      dup7\n        /* \"#utility.yul\":338:354   */\n      add\n        /* \"#utility.yul\":334:361   */\n      add\n        /* \"#utility.yul\":327:365   */\n      mstore\n        /* \"#utility.yul\":426:430   */\n      0x20\n        /* \"#utility.yul\":419:421   */\n      0x1f\n        /* \"#utility.yul\":415:422   */\n      not\n        /* \"#utility.yul\":410:412   */\n      0x1f\n        /* \"#utility.yul\":402:408   */\n      dup4\n        /* \"#utility.yul\":398:413   */\n      add\n        /* \"#utility.yul\":394:423   */\n      and\n        /* \"#utility.yul\":389:392   */\n      dup6\n        /* \"#utility.yul\":385:424   */\n      add\n        /* \"#utility.yul\":381:431   */\n      add\n        /* \"#utility.yul\":374:431   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:437   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:662   */\n    tag_28:\n        /* \"#utility.yul\":591:593   */\n      0x20\n        /* \"#utility.yul\":580:589   */\n      dup2\n        /* \"#utility.yul\":573:594   */\n      mstore\n        /* \"#utility.yul\":554:558   */\n      0x00\n        /* \"#utility.yul\":611:656   */\n      tag_323\n        /* \"#utility.yul\":652:654   */\n      0x20\n        /* \"#utility.yul\":641:650   */\n      dup4\n        /* \"#utility.yul\":637:655   */\n      add\n        /* \"#utility.yul\":629:635   */\n      dup5\n        /* \"#utility.yul\":611:656   */\n      tag_315\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":603:656   */\n      swap4\n        /* \"#utility.yul\":442:662   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":667:840   */\n    tag_316:\n        /* \"#utility.yul\":735:755   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":784:815   */\n      dup2\n      and\n        /* \"#utility.yul\":774:816   */\n      dup2\n      eq\n        /* \"#utility.yul\":764:834   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":830:831   */\n      0x00\n        /* \"#utility.yul\":827:828   */\n      dup1\n        /* \"#utility.yul\":820:832   */\n      revert\n        /* \"#utility.yul\":764:834   */\n    tag_325:\n        /* \"#utility.yul\":667:840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":845:1099   */\n    tag_31:\n        /* \"#utility.yul\":913:919   */\n      0x00\n        /* \"#utility.yul\":921:927   */\n      dup1\n        /* \"#utility.yul\":974:976   */\n      0x40\n        /* \"#utility.yul\":962:971   */\n      dup4\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":949:972   */\n      sub\n        /* \"#utility.yul\":945:977   */\n      slt\n        /* \"#utility.yul\":942:994   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":990:991   */\n      0x00\n        /* \"#utility.yul\":987:988   */\n      dup1\n        /* \"#utility.yul\":980:992   */\n      revert\n        /* \"#utility.yul\":942:994   */\n    tag_327:\n        /* \"#utility.yul\":1013:1042   */\n      tag_328\n        /* \"#utility.yul\":1032:1041   */\n      dup4\n        /* \"#utility.yul\":1013:1042   */\n      tag_316\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":1003:1042   */\n      swap5\n        /* \"#utility.yul\":1089:1091   */\n      0x20\n        /* \"#utility.yul\":1074:1092   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1061:1093   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":845:1099   */\n      jump\t// out\n        /* \"#utility.yul\":1478:1806   */\n    tag_41:\n        /* \"#utility.yul\":1555:1561   */\n      0x00\n        /* \"#utility.yul\":1563:1569   */\n      dup1\n        /* \"#utility.yul\":1571:1577   */\n      0x00\n        /* \"#utility.yul\":1624:1626   */\n      0x60\n        /* \"#utility.yul\":1612:1621   */\n      dup5\n        /* \"#utility.yul\":1603:1610   */\n      dup7\n        /* \"#utility.yul\":1599:1622   */\n      sub\n        /* \"#utility.yul\":1595:1627   */\n      slt\n        /* \"#utility.yul\":1592:1644   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":1640:1641   */\n      0x00\n        /* \"#utility.yul\":1637:1638   */\n      dup1\n        /* \"#utility.yul\":1630:1642   */\n      revert\n        /* \"#utility.yul\":1592:1644   */\n    tag_332:\n        /* \"#utility.yul\":1663:1692   */\n      tag_333\n        /* \"#utility.yul\":1682:1691   */\n      dup5\n        /* \"#utility.yul\":1663:1692   */\n      tag_316\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1653:1692   */\n      swap3\n      pop\n        /* \"#utility.yul\":1711:1749   */\n      tag_334\n        /* \"#utility.yul\":1745:1747   */\n      0x20\n        /* \"#utility.yul\":1734:1743   */\n      dup6\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1711:1749   */\n      tag_316\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1701:1749   */\n      swap2\n      pop\n        /* \"#utility.yul\":1796:1798   */\n      0x40\n        /* \"#utility.yul\":1785:1794   */\n      dup5\n        /* \"#utility.yul\":1781:1799   */\n      add\n        /* \"#utility.yul\":1768:1800   */\n      calldataload\n        /* \"#utility.yul\":1758:1800   */\n      swap1\n      pop\n        /* \"#utility.yul\":1478:1806   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2182:2362   */\n    tag_57:\n        /* \"#utility.yul\":2241:2247   */\n      0x00\n        /* \"#utility.yul\":2294:2296   */\n      0x20\n        /* \"#utility.yul\":2282:2291   */\n      dup3\n        /* \"#utility.yul\":2273:2280   */\n      dup5\n        /* \"#utility.yul\":2269:2292   */\n      sub\n        /* \"#utility.yul\":2265:2297   */\n      slt\n        /* \"#utility.yul\":2262:2314   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":2310:2311   */\n      0x00\n        /* \"#utility.yul\":2307:2308   */\n      dup1\n        /* \"#utility.yul\":2300:2312   */\n      revert\n        /* \"#utility.yul\":2262:2314   */\n    tag_338:\n      pop\n        /* \"#utility.yul\":2333:2356   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2182:2362   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2367:2553   */\n    tag_61:\n        /* \"#utility.yul\":2426:2432   */\n      0x00\n        /* \"#utility.yul\":2479:2481   */\n      0x20\n        /* \"#utility.yul\":2467:2476   */\n      dup3\n        /* \"#utility.yul\":2458:2465   */\n      dup5\n        /* \"#utility.yul\":2454:2477   */\n      sub\n        /* \"#utility.yul\":2450:2482   */\n      slt\n        /* \"#utility.yul\":2447:2499   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":2495:2496   */\n      0x00\n        /* \"#utility.yul\":2492:2493   */\n      dup1\n        /* \"#utility.yul\":2485:2497   */\n      revert\n        /* \"#utility.yul\":2447:2499   */\n    tag_340:\n        /* \"#utility.yul\":2518:2547   */\n      tag_323\n        /* \"#utility.yul\":2537:2546   */\n      dup3\n        /* \"#utility.yul\":2518:2547   */\n      tag_316\n      jump\t// in\n        /* \"#utility.yul\":2558:3817   */\n    tag_76:\n        /* \"#utility.yul\":2964:2967   */\n      0xff\n        /* \"#utility.yul\":2959:2962   */\n      0xf8\n        /* \"#utility.yul\":2955:2968   */\n      shl\n        /* \"#utility.yul\":2947:2953   */\n      dup9\n        /* \"#utility.yul\":2943:2969   */\n      and\n        /* \"#utility.yul\":2932:2941   */\n      dup2\n        /* \"#utility.yul\":2925:2970   */\n      mstore\n        /* \"#utility.yul\":2906:2910   */\n      0x00\n        /* \"#utility.yul\":2989:2991   */\n      0x20\n        /* \"#utility.yul\":3027:3030   */\n      0xe0\n        /* \"#utility.yul\":3022:3024   */\n      0x20\n        /* \"#utility.yul\":3011:3020   */\n      dup5\n        /* \"#utility.yul\":3007:3025   */\n      add\n        /* \"#utility.yul\":3000:3031   */\n      mstore\n        /* \"#utility.yul\":3054:3100   */\n      tag_343\n        /* \"#utility.yul\":3095:3098   */\n      0xe0\n        /* \"#utility.yul\":3084:3093   */\n      dup5\n        /* \"#utility.yul\":3080:3099   */\n      add\n        /* \"#utility.yul\":3072:3078   */\n      dup11\n        /* \"#utility.yul\":3054:3100   */\n      tag_315\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3148:3157   */\n      dup4\n        /* \"#utility.yul\":3140:3146   */\n      dup2\n        /* \"#utility.yul\":3136:3158   */\n      sub\n        /* \"#utility.yul\":3131:3133   */\n      0x40\n        /* \"#utility.yul\":3120:3129   */\n      dup6\n        /* \"#utility.yul\":3116:3134   */\n      add\n        /* \"#utility.yul\":3109:3159   */\n      mstore\n        /* \"#utility.yul\":3182:3215   */\n      tag_344\n        /* \"#utility.yul\":3208:3214   */\n      dup2\n        /* \"#utility.yul\":3200:3206   */\n      dup11\n        /* \"#utility.yul\":3182:3215   */\n      tag_315\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3246:3248   */\n      0x60\n        /* \"#utility.yul\":3231:3249   */\n      dup6\n      add\n        /* \"#utility.yul\":3224:3258   */\n      dup10\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3295:3327   */\n      dup9\n      and\n        /* \"#utility.yul\":3289:3292   */\n      0x80\n        /* \"#utility.yul\":3274:3293   */\n      dup7\n      add\n        /* \"#utility.yul\":3267:3328   */\n      mstore\n        /* \"#utility.yul\":3315:3318   */\n      0xa0\n        /* \"#utility.yul\":3344:3363   */\n      dup6\n      add\n        /* \"#utility.yul\":3337:3372   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":3409:3431   */\n      dup5\n      dup2\n      sub\n        /* \"#utility.yul\":3403:3406   */\n      0xc0\n        /* \"#utility.yul\":3388:3407   */\n      dup7\n      add\n        /* \"#utility.yul\":3381:3432   */\n      mstore\n        /* \"#utility.yul\":3481:3494   */\n      dup6\n      mload\n        /* \"#utility.yul\":3503:3525   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3553:3555   */\n      0x20\n        /* \"#utility.yul\":3579:3594   */\n      dup1\n      dup9\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":3541:3556   */\n      swap1\n      swap2\n      add\n      swap1\n      0x00\n        /* \"#utility.yul\":3622:3791   */\n    tag_345:\n        /* \"#utility.yul\":3636:3642   */\n      dup2\n        /* \"#utility.yul\":3633:3634   */\n      dup2\n        /* \"#utility.yul\":3630:3643   */\n      lt\n        /* \"#utility.yul\":3622:3791   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":3697:3710   */\n      dup4\n      mload\n        /* \"#utility.yul\":3685:3711   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3766:3781   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3731:3743   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3658:3659   */\n      0x01\n        /* \"#utility.yul\":3651:3660   */\n      add\n        /* \"#utility.yul\":3622:3791   */\n      jump(tag_345)\n    tag_347:\n      pop\n        /* \"#utility.yul\":3808:3811   */\n      swap1\n      swap13\n        /* \"#utility.yul\":2558:3817   */\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4723   */\n    tag_90:\n        /* \"#utility.yul\":4141:4147   */\n      0x00\n        /* \"#utility.yul\":4149:4155   */\n      dup1\n        /* \"#utility.yul\":4157:4163   */\n      0x00\n        /* \"#utility.yul\":4165:4171   */\n      dup1\n        /* \"#utility.yul\":4173:4179   */\n      0x00\n        /* \"#utility.yul\":4181:4187   */\n      dup1\n        /* \"#utility.yul\":4189:4195   */\n      0x00\n        /* \"#utility.yul\":4242:4245   */\n      0xe0\n        /* \"#utility.yul\":4230:4239   */\n      dup9\n        /* \"#utility.yul\":4221:4228   */\n      dup11\n        /* \"#utility.yul\":4217:4240   */\n      sub\n        /* \"#utility.yul\":4213:4246   */\n      slt\n        /* \"#utility.yul\":4210:4263   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":4259:4260   */\n      0x00\n        /* \"#utility.yul\":4256:4257   */\n      dup1\n        /* \"#utility.yul\":4249:4261   */\n      revert\n        /* \"#utility.yul\":4210:4263   */\n    tag_350:\n        /* \"#utility.yul\":4282:4311   */\n      tag_351\n        /* \"#utility.yul\":4301:4310   */\n      dup9\n        /* \"#utility.yul\":4282:4311   */\n      tag_316\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4272:4311   */\n      swap7\n      pop\n        /* \"#utility.yul\":4330:4368   */\n      tag_352\n        /* \"#utility.yul\":4364:4366   */\n      0x20\n        /* \"#utility.yul\":4353:4362   */\n      dup10\n        /* \"#utility.yul\":4349:4367   */\n      add\n        /* \"#utility.yul\":4330:4368   */\n      tag_316\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4320:4368   */\n      swap6\n      pop\n        /* \"#utility.yul\":4415:4417   */\n      0x40\n        /* \"#utility.yul\":4404:4413   */\n      dup9\n        /* \"#utility.yul\":4400:4418   */\n      add\n        /* \"#utility.yul\":4387:4419   */\n      calldataload\n        /* \"#utility.yul\":4377:4419   */\n      swap5\n      pop\n        /* \"#utility.yul\":4466:4468   */\n      0x60\n        /* \"#utility.yul\":4455:4464   */\n      dup9\n        /* \"#utility.yul\":4451:4469   */\n      add\n        /* \"#utility.yul\":4438:4470   */\n      calldataload\n        /* \"#utility.yul\":4428:4470   */\n      swap4\n      pop\n        /* \"#utility.yul\":4520:4523   */\n      0x80\n        /* \"#utility.yul\":4509:4518   */\n      dup9\n        /* \"#utility.yul\":4505:4524   */\n      add\n        /* \"#utility.yul\":4492:4525   */\n      calldataload\n        /* \"#utility.yul\":4565:4569   */\n      0xff\n        /* \"#utility.yul\":4558:4563   */\n      dup2\n        /* \"#utility.yul\":4554:4570   */\n      and\n        /* \"#utility.yul\":4547:4552   */\n      dup2\n        /* \"#utility.yul\":4544:4571   */\n      eq\n        /* \"#utility.yul\":4534:4589   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":4585:4586   */\n      0x00\n        /* \"#utility.yul\":4582:4583   */\n      dup1\n        /* \"#utility.yul\":4575:4587   */\n      revert\n        /* \"#utility.yul\":4534:4589   */\n    tag_353:\n        /* \"#utility.yul\":4030:4723   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":4608:4613   */\n      swap5\n        /* \"#utility.yul\":4660:4663   */\n      0xa0\n        /* \"#utility.yul\":4645:4664   */\n      dup5\n      add\n        /* \"#utility.yul\":4632:4665   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4712:4715   */\n      0xc0\n        /* \"#utility.yul\":4697:4716   */\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":4684:4717   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":4030:4723   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4728:4988   */\n    tag_94:\n        /* \"#utility.yul\":4796:4802   */\n      0x00\n        /* \"#utility.yul\":4804:4810   */\n      dup1\n        /* \"#utility.yul\":4857:4859   */\n      0x40\n        /* \"#utility.yul\":4845:4854   */\n      dup4\n        /* \"#utility.yul\":4836:4843   */\n      dup6\n        /* \"#utility.yul\":4832:4855   */\n      sub\n        /* \"#utility.yul\":4828:4860   */\n      slt\n        /* \"#utility.yul\":4825:4877   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":4873:4874   */\n      0x00\n        /* \"#utility.yul\":4870:4871   */\n      dup1\n        /* \"#utility.yul\":4863:4875   */\n      revert\n        /* \"#utility.yul\":4825:4877   */\n    tag_355:\n        /* \"#utility.yul\":4896:4925   */\n      tag_356\n        /* \"#utility.yul\":4915:4924   */\n      dup4\n        /* \"#utility.yul\":4896:4925   */\n      tag_316\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4886:4925   */\n      swap2\n      pop\n        /* \"#utility.yul\":4944:4982   */\n      tag_357\n        /* \"#utility.yul\":4978:4980   */\n      0x20\n        /* \"#utility.yul\":4967:4976   */\n      dup5\n        /* \"#utility.yul\":4963:4981   */\n      add\n        /* \"#utility.yul\":4944:4982   */\n      tag_316\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4934:4982   */\n      swap1\n      pop\n        /* \"#utility.yul\":4728:4988   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4993:5373   */\n    tag_102:\n        /* \"#utility.yul\":5072:5073   */\n      0x01\n        /* \"#utility.yul\":5068:5080   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5115:5127   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5136:5197   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":5190:5194   */\n      0x7f\n        /* \"#utility.yul\":5182:5188   */\n      dup3\n        /* \"#utility.yul\":5178:5195   */\n      and\n        /* \"#utility.yul\":5168:5195   */\n      swap2\n      pop\n        /* \"#utility.yul\":5136:5197   */\n    tag_359:\n        /* \"#utility.yul\":5243:5245   */\n      0x20\n        /* \"#utility.yul\":5235:5241   */\n      dup3\n        /* \"#utility.yul\":5232:5246   */\n      lt\n        /* \"#utility.yul\":5212:5230   */\n      dup2\n        /* \"#utility.yul\":5209:5247   */\n      sub\n        /* \"#utility.yul\":5206:5367   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":5289:5299   */\n      0x4e487b71\n        /* \"#utility.yul\":5284:5287   */\n      0xe0\n        /* \"#utility.yul\":5280:5300   */\n      shl\n        /* \"#utility.yul\":5277:5278   */\n      0x00\n        /* \"#utility.yul\":5270:5301   */\n      mstore\n        /* \"#utility.yul\":5324:5328   */\n      0x22\n        /* \"#utility.yul\":5321:5322   */\n      0x04\n        /* \"#utility.yul\":5314:5329   */\n      mstore\n        /* \"#utility.yul\":5352:5356   */\n      0x24\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5342:5357   */\n      revert\n        /* \"#utility.yul\":5206:5367   */\n    tag_360:\n      pop\n        /* \"#utility.yul\":4993:5373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6765:6987   */\n    tag_252:\n        /* \"#utility.yul\":6830:6839   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6851:6861   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6848:6981   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":6903:6913   */\n      0x4e487b71\n        /* \"#utility.yul\":6898:6901   */\n      0xe0\n        /* \"#utility.yul\":6894:6914   */\n      shl\n        /* \"#utility.yul\":6891:6892   */\n      0x00\n        /* \"#utility.yul\":6884:6915   */\n      mstore\n        /* \"#utility.yul\":6938:6942   */\n      0x11\n        /* \"#utility.yul\":6935:6936   */\n      0x04\n        /* \"#utility.yul\":6928:6943   */\n      mstore\n        /* \"#utility.yul\":6966:6970   */\n      0x24\n        /* \"#utility.yul\":6963:6964   */\n      0x00\n        /* \"#utility.yul\":6956:6971   */\n      revert\n        /* \"#utility.yul\":7889:8016   */\n    tag_283:\n        /* \"#utility.yul\":7950:7960   */\n      0x4e487b71\n        /* \"#utility.yul\":7945:7948   */\n      0xe0\n        /* \"#utility.yul\":7941:7961   */\n      shl\n        /* \"#utility.yul\":7938:7939   */\n      0x00\n        /* \"#utility.yul\":7931:7962   */\n      mstore\n        /* \"#utility.yul\":7981:7985   */\n      0x21\n        /* \"#utility.yul\":7978:7979   */\n      0x04\n        /* \"#utility.yul\":7971:7986   */\n      mstore\n        /* \"#utility.yul\":8005:8009   */\n      0x24\n        /* \"#utility.yul\":8002:8003   */\n      0x00\n        /* \"#utility.yul\":7995:8010   */\n      revert\n\n    auxdata: 0xa2646970667358221220cc57e232febfc0c5ff6bfc478c921b49f028b850d3aa8ecebc27549a83bc1fcb64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1981": {
									"entryPoint": null,
									"id": 1981,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2698": {
									"entryPoint": null,
									"id": 2698,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2938": {
									"entryPoint": null,
									"id": 2938,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3439": {
									"entryPoint": null,
									"id": 3439,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3622": {
									"entryPoint": null,
									"id": 3622,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2028": {
									"entryPoint": null,
									"id": 2028,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_3241": {
									"entryPoint": 639,
									"id": 3241,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_2794": {
									"entryPoint": 502,
									"id": 2794,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_3208": {
									"entryPoint": 765,
									"id": 3208,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_2965": {
									"entryPoint": null,
									"id": 2965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_177": {
									"entryPoint": null,
									"id": 177,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_355": {
									"entryPoint": 583,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_257": {
									"entryPoint": 699,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1193,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6894:1",
										"nodeType": "YulBlock",
										"src": "0:6894:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:1",
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:1",
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:1",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nativeSrc": "143:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nativeSrc": "143:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nativeSrc": "112:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nativeSrc": "108:32:1",
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nativeSrc": "105:52:1",
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nativeSrc": "166:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nativeSrc": "179:16:1",
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:1",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:1",
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:1",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:1",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nativeSrc": "260:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nativeSrc": "260:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:1",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:1",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nativeSrc": "239:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:1",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nativeSrc": "235:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nativeSrc": "224:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nativeSrc": "214:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nativeSrc": "207:50:1",
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nativeSrc": "204:70:1",
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nativeSrc": "283:15:1",
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:1",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:1",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:1",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:1",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nativeSrc": "341:95:1",
													"nodeType": "YulBlock",
													"src": "341:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:1",
																		"nodeType": "YulLiteral",
																		"src": "358:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:1",
																				"nodeType": "YulLiteral",
																				"src": "365:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:1",
																				"nodeType": "YulLiteral",
																				"src": "370:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:1"
																		},
																		"nativeSrc": "361:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:1"
																},
																"nativeSrc": "351:31:1",
																"nodeType": "YulFunctionCall",
																"src": "351:31:1"
															},
															"nativeSrc": "351:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:1",
																		"nodeType": "YulLiteral",
																		"src": "398:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:1",
																		"nodeType": "YulLiteral",
																		"src": "401:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:1"
																},
																"nativeSrc": "391:15:1",
																"nodeType": "YulFunctionCall",
																"src": "391:15:1"
															},
															"nativeSrc": "391:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:1",
																		"nodeType": "YulLiteral",
																		"src": "422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:1",
																		"nodeType": "YulLiteral",
																		"src": "425:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:1"
																},
																"nativeSrc": "415:15:1",
																"nodeType": "YulFunctionCall",
																"src": "415:15:1"
															},
															"nativeSrc": "415:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:1"
											},
											{
												"body": {
													"nativeSrc": "496:325:1",
													"nodeType": "YulBlock",
													"src": "496:325:1",
													"statements": [
														{
															"nativeSrc": "506:22:1",
															"nodeType": "YulAssignment",
															"src": "506:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:1",
																		"nodeType": "YulLiteral",
																		"src": "520:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:1"
																},
																"nativeSrc": "516:12:1",
																"nodeType": "YulFunctionCall",
																"src": "516:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:1"
																}
															]
														},
														{
															"nativeSrc": "537:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:1",
																		"nodeType": "YulLiteral",
																		"src": "573:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																},
																"nativeSrc": "563:12:1",
																"nodeType": "YulFunctionCall",
																"src": "563:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:1",
																	"nodeType": "YulTypedName",
																	"src": "541:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:1",
																"nodeType": "YulBlock",
																"src": "614:31:1",
																"statements": [
																	{
																		"nativeSrc": "616:27:1",
																		"nodeType": "YulAssignment",
																		"src": "616:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:1",
																					"nodeType": "YulLiteral",
																					"src": "638:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:1"
																			},
																			"nativeSrc": "626:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:1"
																},
																"nativeSrc": "587:26:1",
																"nodeType": "YulFunctionCall",
																"src": "587:26:1"
															},
															"nativeSrc": "584:61:1",
															"nodeType": "YulIf",
															"src": "584:61:1"
														},
														{
															"body": {
																"nativeSrc": "704:111:1",
																"nodeType": "YulBlock",
																"src": "704:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:1",
																					"nodeType": "YulLiteral",
																					"src": "725:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:1",
																							"nodeType": "YulLiteral",
																							"src": "732:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:1",
																							"nodeType": "YulLiteral",
																							"src": "737:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:1"
																					},
																					"nativeSrc": "728:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:1"
																			},
																			"nativeSrc": "718:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:1"
																		},
																		"nativeSrc": "718:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:1",
																					"nodeType": "YulLiteral",
																					"src": "769:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:1",
																					"nodeType": "YulLiteral",
																					"src": "772:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:1"
																			},
																			"nativeSrc": "762:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:1"
																		},
																		"nativeSrc": "762:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:1",
																					"nodeType": "YulLiteral",
																					"src": "797:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:1",
																					"nodeType": "YulLiteral",
																					"src": "800:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:1"
																			},
																			"nativeSrc": "790:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:1"
																		},
																		"nativeSrc": "790:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:1",
																				"nodeType": "YulLiteral",
																				"src": "691:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:1"
																		},
																		"nativeSrc": "680:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:1"
																},
																"nativeSrc": "657:38:1",
																"nodeType": "YulFunctionCall",
																"src": "657:38:1"
															},
															"nativeSrc": "654:161:1",
															"nodeType": "YulIf",
															"src": "654:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:1",
														"nodeType": "YulTypedName",
														"src": "476:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:1",
														"nodeType": "YulTypedName",
														"src": "485:6:1",
														"type": ""
													}
												],
												"src": "441:380:1"
											},
											{
												"body": {
													"nativeSrc": "882:65:1",
													"nodeType": "YulBlock",
													"src": "882:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:1",
																		"nodeType": "YulLiteral",
																		"src": "899:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nativeSrc": "892:14:1",
																"nodeType": "YulFunctionCall",
																"src": "892:14:1"
															},
															"nativeSrc": "892:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:1"
														},
														{
															"nativeSrc": "915:26:1",
															"nodeType": "YulAssignment",
															"src": "915:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:1",
																		"nodeType": "YulLiteral",
																		"src": "933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:1",
																		"nodeType": "YulLiteral",
																		"src": "936:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:1"
																},
																"nativeSrc": "923:18:1",
																"nodeType": "YulFunctionCall",
																"src": "923:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:1",
														"nodeType": "YulTypedName",
														"src": "865:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:1",
														"nodeType": "YulTypedName",
														"src": "873:4:1",
														"type": ""
													}
												],
												"src": "826:121:1"
											},
											{
												"body": {
													"nativeSrc": "1033:437:1",
													"nodeType": "YulBlock",
													"src": "1033:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:1",
																"nodeType": "YulBlock",
																"src": "1066:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:1"
																			},
																			"nativeSrc": "1080:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:1"
																		},
																		"nativeSrc": "1080:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:1"
																	},
																	{
																		"nativeSrc": "1109:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:1"
																			},
																			"nativeSrc": "1121:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:1",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:1"
																							},
																							"nativeSrc": "1188:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:1"
																					},
																					"nativeSrc": "1181:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:1"
																			},
																			"nativeSrc": "1171:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:1",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:1",
																			"nodeType": "YulBlock",
																			"src": "1246:23:1",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:1",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:1"
																			},
																			"nativeSrc": "1225:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:1"
																		},
																		"nativeSrc": "1222:47:1",
																		"nodeType": "YulIf",
																		"src": "1222:47:1"
																	},
																	{
																		"nativeSrc": "1282:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:1"
																							},
																							"nativeSrc": "1309:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:1"
																					},
																					"nativeSrc": "1302:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:1"
																			},
																			"nativeSrc": "1292:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:1",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:1",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:1",
																			"nodeType": "YulBlock",
																			"src": "1434:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:1"
																						},
																						"nativeSrc": "1436:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:1"
																					},
																					"nativeSrc": "1436:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:1"
																			},
																			"nativeSrc": "1381:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:1"
																		},
																		"nativeSrc": "1373:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:1",
																			"nodeType": "YulBlock",
																			"src": "1395:26:1",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:1",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:1"
																						},
																						"nativeSrc": "1406:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:1",
																			"nodeType": "YulBlock",
																			"src": "1377:3:1",
																			"statements": []
																		},
																		"src": "1373:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:1"
																},
																"nativeSrc": "1046:11:1",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:1"
															},
															"nativeSrc": "1043:421:1",
															"nodeType": "YulIf",
															"src": "1043:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:1",
														"nodeType": "YulTypedName",
														"src": "1005:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:1",
														"nodeType": "YulTypedName",
														"src": "1012:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:1",
														"nodeType": "YulTypedName",
														"src": "1017:10:1",
														"type": ""
													}
												],
												"src": "952:518:1"
											},
											{
												"body": {
													"nativeSrc": "1560:81:1",
													"nodeType": "YulBlock",
													"src": "1560:81:1",
													"statements": [
														{
															"nativeSrc": "1570:65:1",
															"nodeType": "YulAssignment",
															"src": "1570:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:1"
																								},
																								"nativeSrc": "1599:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:1",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:1"
																								},
																								"nativeSrc": "1612:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:1"
																						},
																						"nativeSrc": "1595:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:1"
																				},
																				"nativeSrc": "1591:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:1"
																		},
																		"nativeSrc": "1581:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:1"
																		},
																		"nativeSrc": "1623:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:1"
																},
																"nativeSrc": "1578:57:1",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:1",
														"nodeType": "YulTypedName",
														"src": "1537:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:1",
														"nodeType": "YulTypedName",
														"src": "1543:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:1",
														"nodeType": "YulTypedName",
														"src": "1551:4:1",
														"type": ""
													}
												],
												"src": "1475:166:1"
											},
											{
												"body": {
													"nativeSrc": "1742:1249:1",
													"nodeType": "YulBlock",
													"src": "1742:1249:1",
													"statements": [
														{
															"nativeSrc": "1752:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:1"
																},
																"nativeSrc": "1766:10:1",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:1",
																"nodeType": "YulBlock",
																"src": "1819:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:1"
																			},
																			"nativeSrc": "1821:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:1"
																		},
																		"nativeSrc": "1821:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:1"
																				},
																				"nativeSrc": "1803:10:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:1"
																		},
																		"nativeSrc": "1799:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:1"
																},
																"nativeSrc": "1788:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:1"
															},
															"nativeSrc": "1785:56:1",
															"nodeType": "YulIf",
															"src": "1785:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:1"
																				},
																				"nativeSrc": "1926:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:1"
																		},
																		"nativeSrc": "1900:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:1"
																},
																"nativeSrc": "1850:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:1"
															},
															"nativeSrc": "1850:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:1"
														},
														{
															"nativeSrc": "1956:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:1",
																"nodeType": "YulLiteral",
																"src": "1973:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:23:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1983:23:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2002:4:1",
																"nodeType": "YulLiteral",
																"src": "2002:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1987:11:1",
																	"nodeType": "YulTypedName",
																	"src": "1987:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2015:17:1",
															"nodeType": "YulAssignment",
															"src": "2015:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2028:4:1",
																"nodeType": "YulLiteral",
																"src": "2028:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2015:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2015:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2078:656:1",
																		"nodeType": "YulBlock",
																		"src": "2078:656:1",
																		"statements": [
																			{
																				"nativeSrc": "2092:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2092:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2111:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2111:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2123:2:1",
																									"nodeType": "YulLiteral",
																									"src": "2123:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2119:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:1"
																							},
																							"nativeSrc": "2119:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2119:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2107:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2107:3:1"
																					},
																					"nativeSrc": "2107:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2107:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2096:7:1",
																						"nodeType": "YulTypedName",
																						"src": "2096:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2140:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2140:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2184:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2184:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2154:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "2154:29:1"
																					},
																					"nativeSrc": "2154:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2154:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2144:6:1",
																						"nodeType": "YulTypedName",
																						"src": "2144:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2202:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2202:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2211:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2206:1:1",
																						"nodeType": "YulTypedName",
																						"src": "2206:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2289:172:1",
																					"nodeType": "YulBlock",
																					"src": "2289:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2314:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2314:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2332:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "2332:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2337:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "2337:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2328:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2328:3:1"
																												},
																												"nativeSrc": "2328:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2328:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2322:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2322:5:1"
																										},
																										"nativeSrc": "2322:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2322:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2307:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2307:6:1"
																								},
																								"nativeSrc": "2307:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2307:42:1"
																							},
																							"nativeSrc": "2307:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2307:42:1"
																						},
																						{
																							"nativeSrc": "2366:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2366:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2380:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2380:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2388:1:1",
																										"nodeType": "YulLiteral",
																										"src": "2388:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2376:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2376:3:1"
																								},
																								"nativeSrc": "2376:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2376:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2366:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2366:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2407:40:1",
																							"nodeType": "YulAssignment",
																							"src": "2407:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2424:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "2424:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2435:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "2435:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2420:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2420:3:1"
																								},
																								"nativeSrc": "2420:27:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2420:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2407:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "2407:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2236:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2236:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2239:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2239:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2233:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2233:2:1"
																					},
																					"nativeSrc": "2233:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2233:14:1"
																				},
																				"nativeSrc": "2225:236:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2248:28:1",
																					"nodeType": "YulBlock",
																					"src": "2248:28:1",
																					"statements": [
																						{
																							"nativeSrc": "2250:24:1",
																							"nodeType": "YulAssignment",
																							"src": "2250:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2259:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "2259:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2262:11:1",
																										"nodeType": "YulIdentifier",
																										"src": "2262:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2255:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2255:3:1"
																								},
																								"nativeSrc": "2255:19:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2255:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2250:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "2250:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2229:3:1",
																					"nodeType": "YulBlock",
																					"src": "2229:3:1",
																					"statements": []
																				},
																				"src": "2225:236:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "2509:166:1",
																					"nodeType": "YulBlock",
																					"src": "2509:166:1",
																					"statements": [
																						{
																							"nativeSrc": "2527:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2527:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2554:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2554:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2559:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2559:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2550:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2550:3:1"
																										},
																										"nativeSrc": "2550:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2550:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2544:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2544:5:1"
																								},
																								"nativeSrc": "2544:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2544:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2531:9:1",
																									"nodeType": "YulTypedName",
																									"src": "2531:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "2594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2606:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2606:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2633:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "2633:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2636:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "2636:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2629:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "2629:3:1"
																																		},
																																		"nativeSrc": "2629:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2629:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2645:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2645:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2625:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2625:3:1"
																																},
																																"nativeSrc": "2625:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2625:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2655:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "2655:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2651:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "2651:3:1"
																																},
																																"nativeSrc": "2651:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "2651:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2621:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2621:3:1"
																														},
																														"nativeSrc": "2621:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2621:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2617:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2617:3:1"
																												},
																												"nativeSrc": "2617:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2617:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2602:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2602:3:1"
																										},
																										"nativeSrc": "2602:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2602:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2587:6:1"
																								},
																								"nativeSrc": "2587:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2587:74:1"
																							},
																							"nativeSrc": "2587:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "2587:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2480:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "2480:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2489:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2489:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2477:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "2477:2:1"
																					},
																					"nativeSrc": "2477:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2477:19:1"
																				},
																				"nativeSrc": "2474:201:1",
																				"nodeType": "YulIf",
																				"src": "2474:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2695:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2695:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2709:1:1",
																											"nodeType": "YulLiteral",
																											"src": "2709:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2712:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "2712:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2705:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2705:3:1"
																									},
																									"nativeSrc": "2705:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2705:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2721:1:1",
																									"nodeType": "YulLiteral",
																									"src": "2721:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2701:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2701:3:1"
																							},
																							"nativeSrc": "2701:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2701:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2688:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2688:6:1"
																					},
																					"nativeSrc": "2688:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2688:36:1"
																				},
																				"nativeSrc": "2688:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2688:36:1"
																			}
																		]
																	},
																	"nativeSrc": "2071:663:1",
																	"nodeType": "YulCase",
																	"src": "2071:663:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2076:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2076:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2751:234:1",
																		"nodeType": "YulBlock",
																		"src": "2751:234:1",
																		"statements": [
																			{
																				"nativeSrc": "2765:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2765:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2778:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2769:5:1",
																						"nodeType": "YulTypedName",
																						"src": "2769:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2814:67:1",
																					"nodeType": "YulBlock",
																					"src": "2814:67:1",
																					"statements": [
																						{
																							"nativeSrc": "2832:35:1",
																							"nodeType": "YulAssignment",
																							"src": "2832:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2851:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2851:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2856:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "2856:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2847:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2847:3:1"
																										},
																										"nativeSrc": "2847:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2847:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2841:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2841:5:1"
																								},
																								"nativeSrc": "2841:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2841:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2832:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2832:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2795:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2795:6:1"
																				},
																				"nativeSrc": "2792:89:1",
																				"nodeType": "YulIf",
																				"src": "2792:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2901:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2901:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2960:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "2960:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2967:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "2967:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2907:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "2907:52:1"
																							},
																							"nativeSrc": "2907:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2907:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2894:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2894:6:1"
																					},
																					"nativeSrc": "2894:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2894:81:1"
																				},
																				"nativeSrc": "2894:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2894:81:1"
																			}
																		]
																	},
																	"nativeSrc": "2743:242:1",
																	"nodeType": "YulCase",
																	"src": "2743:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2051:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2051:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2059:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2048:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2048:2:1"
																},
																"nativeSrc": "2048:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2048:14:1"
															},
															"nativeSrc": "2041:944:1",
															"nodeType": "YulSwitch",
															"src": "2041:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:1",
														"nodeType": "YulTypedName",
														"src": "1727:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:1",
														"nodeType": "YulTypedName",
														"src": "1733:3:1",
														"type": ""
													}
												],
												"src": "1646:1345:1"
											},
											{
												"body": {
													"nativeSrc": "3097:102:1",
													"nodeType": "YulBlock",
													"src": "3097:102:1",
													"statements": [
														{
															"nativeSrc": "3107:26:1",
															"nodeType": "YulAssignment",
															"src": "3107:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3119:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3119:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3130:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3130:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3115:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3115:3:1"
																},
																"nativeSrc": "3115:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3115:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3107:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3107:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3149:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3149:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3164:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3164:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3180:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3180:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3185:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3185:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3176:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3176:3:1"
																						},
																						"nativeSrc": "3176:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3176:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3189:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3189:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3172:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3172:3:1"
																				},
																				"nativeSrc": "3172:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3172:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3160:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3160:3:1"
																		},
																		"nativeSrc": "3160:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3160:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:1"
																},
																"nativeSrc": "3142:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3142:51:1"
															},
															"nativeSrc": "3142:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3142:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2996:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3066:9:1",
														"nodeType": "YulTypedName",
														"src": "3066:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3077:6:1",
														"nodeType": "YulTypedName",
														"src": "3077:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3088:4:1",
														"nodeType": "YulTypedName",
														"src": "3088:4:1",
														"type": ""
													}
												],
												"src": "2996:203:1"
											},
											{
												"body": {
													"nativeSrc": "3236:95:1",
													"nodeType": "YulBlock",
													"src": "3236:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3253:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3253:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3260:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3260:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3265:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3265:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3256:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3256:3:1"
																		},
																		"nativeSrc": "3256:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3246:6:1"
																},
																"nativeSrc": "3246:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3246:31:1"
															},
															"nativeSrc": "3246:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3246:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3293:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3293:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3296:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3296:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3286:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:1"
																},
																"nativeSrc": "3286:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3286:15:1"
															},
															"nativeSrc": "3286:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3286:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3320:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3320:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:1"
																},
																"nativeSrc": "3310:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3310:15:1"
															},
															"nativeSrc": "3310:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3310:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3204:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3204:127:1"
											},
											{
												"body": {
													"nativeSrc": "3400:352:1",
													"nodeType": "YulBlock",
													"src": "3400:352:1",
													"statements": [
														{
															"nativeSrc": "3410:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3410:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3425:1:1",
																"nodeType": "YulLiteral",
																"src": "3425:1:1",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3414:7:1",
																	"nodeType": "YulTypedName",
																	"src": "3414:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3435:10:1",
															"nodeType": "YulAssignment",
															"src": "3435:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3444:1:1",
																"nodeType": "YulLiteral",
																"src": "3444:1:1",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3435:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3435:5:1"
																}
															]
														},
														{
															"nativeSrc": "3454:13:1",
															"nodeType": "YulAssignment",
															"src": "3454:13:1",
															"value": {
																"name": "_base",
																"nativeSrc": "3462:5:1",
																"nodeType": "YulIdentifier",
																"src": "3462:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3454:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3454:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3518:228:1",
																"nodeType": "YulBlock",
																"src": "3518:228:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3563:22:1",
																			"nodeType": "YulBlock",
																			"src": "3563:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3565:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "3565:16:1"
																						},
																						"nativeSrc": "3565:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3565:18:1"
																					},
																					"nativeSrc": "3565:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "3565:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3538:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3538:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3552:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3552:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3548:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3548:3:1"
																							},
																							"nativeSrc": "3548:6:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3548:6:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3556:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "3556:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3544:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3544:3:1"
																					},
																					"nativeSrc": "3544:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3544:17:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3535:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3535:2:1"
																			},
																			"nativeSrc": "3535:27:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3535:27:1"
																		},
																		"nativeSrc": "3532:53:1",
																		"nodeType": "YulIf",
																		"src": "3532:53:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "3624:29:1",
																			"nodeType": "YulBlock",
																			"src": "3624:29:1",
																			"statements": [
																				{
																					"nativeSrc": "3626:25:1",
																					"nodeType": "YulAssignment",
																					"src": "3626:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3639:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "3639:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3646:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "3646:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3635:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3635:3:1"
																						},
																						"nativeSrc": "3635:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3635:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3626:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "3626:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3605:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3605:8:1"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3615:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "3615:7:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3601:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3601:3:1"
																			},
																			"nativeSrc": "3601:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3601:22:1"
																		},
																		"nativeSrc": "3598:55:1",
																		"nodeType": "YulIf",
																		"src": "3598:55:1"
																	},
																	{
																		"nativeSrc": "3666:23:1",
																		"nodeType": "YulAssignment",
																		"src": "3666:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3678:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3678:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3684:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "3684:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3674:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3674:3:1"
																			},
																			"nativeSrc": "3674:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3674:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3666:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3666:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3702:34:1",
																		"nodeType": "YulAssignment",
																		"src": "3702:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3718:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "3718:7:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3727:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3727:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3714:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3714:3:1"
																			},
																			"nativeSrc": "3714:22:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3714:22:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3702:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "3702:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3487:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3487:8:1"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "3497:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3497:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3484:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3484:2:1"
																},
																"nativeSrc": "3484:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3484:21:1"
															},
															"nativeSrc": "3476:270:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3506:3:1",
																"nodeType": "YulBlock",
																"src": "3506:3:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3480:3:1",
																"nodeType": "YulBlock",
																"src": "3480:3:1",
																"statements": []
															},
															"src": "3476:270:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3336:416:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3364:5:1",
														"nodeType": "YulTypedName",
														"src": "3364:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3371:8:1",
														"nodeType": "YulTypedName",
														"src": "3371:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3384:5:1",
														"nodeType": "YulTypedName",
														"src": "3384:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3391:4:1",
														"nodeType": "YulTypedName",
														"src": "3391:4:1",
														"type": ""
													}
												],
												"src": "3336:416:1"
											},
											{
												"body": {
													"nativeSrc": "3816:747:1",
													"nodeType": "YulBlock",
													"src": "3816:747:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3854:52:1",
																"nodeType": "YulBlock",
																"src": "3854:52:1",
																"statements": [
																	{
																		"nativeSrc": "3868:10:1",
																		"nodeType": "YulAssignment",
																		"src": "3868:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3877:1:1",
																			"nodeType": "YulLiteral",
																			"src": "3877:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3868:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3868:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3891:5:1",
																		"nodeType": "YulLeave",
																		"src": "3891:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3836:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3836:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:1"
																},
																"nativeSrc": "3829:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3829:16:1"
															},
															"nativeSrc": "3826:80:1",
															"nodeType": "YulIf",
															"src": "3826:80:1"
														},
														{
															"body": {
																"nativeSrc": "3939:52:1",
																"nodeType": "YulBlock",
																"src": "3939:52:1",
																"statements": [
																	{
																		"nativeSrc": "3953:10:1",
																		"nodeType": "YulAssignment",
																		"src": "3953:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3962:1:1",
																			"nodeType": "YulLiteral",
																			"src": "3962:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3953:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3953:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3976:5:1",
																		"nodeType": "YulLeave",
																		"src": "3976:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3925:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3925:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3918:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3918:6:1"
																},
																"nativeSrc": "3918:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3918:12:1"
															},
															"nativeSrc": "3915:76:1",
															"nodeType": "YulIf",
															"src": "3915:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4027:52:1",
																		"nodeType": "YulBlock",
																		"src": "4027:52:1",
																		"statements": [
																			{
																				"nativeSrc": "4041:10:1",
																				"nodeType": "YulAssignment",
																				"src": "4041:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4050:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4050:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4041:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4041:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4064:5:1",
																				"nodeType": "YulLeave",
																				"src": "4064:5:1"
																			}
																		]
																	},
																	"nativeSrc": "4020:59:1",
																	"nodeType": "YulCase",
																	"src": "4020:59:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4025:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4025:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4095:123:1",
																		"nodeType": "YulBlock",
																		"src": "4095:123:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4130:22:1",
																					"nodeType": "YulBlock",
																					"src": "4130:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4132:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "4132:16:1"
																								},
																								"nativeSrc": "4132:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4132:18:1"
																							},
																							"nativeSrc": "4132:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4132:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4115:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4115:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4125:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4125:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4112:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4112:2:1"
																					},
																					"nativeSrc": "4112:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4112:17:1"
																				},
																				"nativeSrc": "4109:43:1",
																				"nodeType": "YulIf",
																				"src": "4109:43:1"
																			},
																			{
																				"nativeSrc": "4165:25:1",
																				"nodeType": "YulAssignment",
																				"src": "4165:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4178:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4178:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4188:1:1",
																							"nodeType": "YulLiteral",
																							"src": "4188:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4174:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4174:3:1"
																					},
																					"nativeSrc": "4174:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4174:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4165:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4165:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4203:5:1",
																				"nodeType": "YulLeave",
																				"src": "4203:5:1"
																			}
																		]
																	},
																	"nativeSrc": "4088:130:1",
																	"nodeType": "YulCase",
																	"src": "4088:130:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4093:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4093:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4007:4:1",
																"nodeType": "YulIdentifier",
																"src": "4007:4:1"
															},
															"nativeSrc": "4000:218:1",
															"nodeType": "YulSwitch",
															"src": "4000:218:1"
														},
														{
															"body": {
																"nativeSrc": "4316:70:1",
																"nodeType": "YulBlock",
																"src": "4316:70:1",
																"statements": [
																	{
																		"nativeSrc": "4330:28:1",
																		"nodeType": "YulAssignment",
																		"src": "4330:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4343:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "4343:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4349:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4349:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4339:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4339:3:1"
																			},
																			"nativeSrc": "4339:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4339:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4330:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4330:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4371:5:1",
																		"nodeType": "YulLeave",
																		"src": "4371:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4240:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "4240:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4246:2:1",
																						"nodeType": "YulLiteral",
																						"src": "4246:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4237:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4237:2:1"
																				},
																				"nativeSrc": "4237:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4237:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4254:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4254:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4264:2:1",
																						"nodeType": "YulLiteral",
																						"src": "4264:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4251:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4251:2:1"
																				},
																				"nativeSrc": "4251:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4251:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4233:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4233:3:1"
																		},
																		"nativeSrc": "4233:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4233:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4277:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "4277:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4283:3:1",
																						"nodeType": "YulLiteral",
																						"src": "4283:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4274:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4274:2:1"
																				},
																				"nativeSrc": "4274:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4274:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4292:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4292:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4302:2:1",
																						"nodeType": "YulLiteral",
																						"src": "4302:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4289:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4289:2:1"
																				},
																				"nativeSrc": "4289:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4289:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4270:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:1"
																		},
																		"nativeSrc": "4270:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4270:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4230:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4230:2:1"
																},
																"nativeSrc": "4230:77:1",
																"nodeType": "YulFunctionCall",
																"src": "4230:77:1"
															},
															"nativeSrc": "4227:159:1",
															"nodeType": "YulIf",
															"src": "4227:159:1"
														},
														{
															"nativeSrc": "4395:57:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4395:57:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4437:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4437:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4443:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4443:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4418:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4418:18:1"
																},
																"nativeSrc": "4418:34:1",
																"nodeType": "YulFunctionCall",
																"src": "4418:34:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4399:7:1",
																	"nodeType": "YulTypedName",
																	"src": "4399:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4408:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4408:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4497:22:1",
																"nodeType": "YulBlock",
																"src": "4497:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4499:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4499:16:1"
																			},
																			"nativeSrc": "4499:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4499:18:1"
																		},
																		"nativeSrc": "4499:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4499:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4467:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4467:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4480:3:1"
																				},
																				"nativeSrc": "4480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4480:6:1"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4488:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4488:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4476:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4476:3:1"
																		},
																		"nativeSrc": "4476:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4476:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4464:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4464:2:1"
																},
																"nativeSrc": "4464:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4464:32:1"
															},
															"nativeSrc": "4461:58:1",
															"nodeType": "YulIf",
															"src": "4461:58:1"
														},
														{
															"nativeSrc": "4528:29:1",
															"nodeType": "YulAssignment",
															"src": "4528:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4541:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4541:7:1"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4550:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4550:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4537:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4537:3:1"
																},
																"nativeSrc": "4537:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4537:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4528:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4528:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3757:806:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3787:4:1",
														"nodeType": "YulTypedName",
														"src": "3787:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3793:8:1",
														"nodeType": "YulTypedName",
														"src": "3793:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3806:5:1",
														"nodeType": "YulTypedName",
														"src": "3806:5:1",
														"type": ""
													}
												],
												"src": "3757:806:1"
											},
											{
												"body": {
													"nativeSrc": "4636:72:1",
													"nodeType": "YulBlock",
													"src": "4636:72:1",
													"statements": [
														{
															"nativeSrc": "4646:56:1",
															"nodeType": "YulAssignment",
															"src": "4646:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4676:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4676:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4686:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "4686:8:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4696:4:1",
																				"nodeType": "YulLiteral",
																				"src": "4696:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4682:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:1"
																		},
																		"nativeSrc": "4682:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4682:19:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4655:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "4655:20:1"
																},
																"nativeSrc": "4655:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4655:47:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4646:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4646:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4568:140:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4607:4:1",
														"nodeType": "YulTypedName",
														"src": "4607:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4613:8:1",
														"nodeType": "YulTypedName",
														"src": "4613:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4626:5:1",
														"nodeType": "YulTypedName",
														"src": "4626:5:1",
														"type": ""
													}
												],
												"src": "4568:140:1"
											},
											{
												"body": {
													"nativeSrc": "4765:116:1",
													"nodeType": "YulBlock",
													"src": "4765:116:1",
													"statements": [
														{
															"nativeSrc": "4775:20:1",
															"nodeType": "YulAssignment",
															"src": "4775:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4790:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4790:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4793:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4793:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4786:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4786:3:1"
																},
																"nativeSrc": "4786:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4786:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4775:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4775:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4853:22:1",
																"nodeType": "YulBlock",
																"src": "4853:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4855:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4855:16:1"
																			},
																			"nativeSrc": "4855:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4855:18:1"
																		},
																		"nativeSrc": "4855:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4855:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4824:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4824:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4817:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4817:6:1"
																				},
																				"nativeSrc": "4817:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4817:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4831:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "4831:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4838:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "4838:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4847:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "4847:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4834:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4834:3:1"
																						},
																						"nativeSrc": "4834:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4834:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4828:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4828:2:1"
																				},
																				"nativeSrc": "4828:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4828:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4814:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4814:2:1"
																		},
																		"nativeSrc": "4814:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4807:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4807:6:1"
																},
																"nativeSrc": "4807:45:1",
																"nodeType": "YulFunctionCall",
																"src": "4807:45:1"
															},
															"nativeSrc": "4804:71:1",
															"nodeType": "YulIf",
															"src": "4804:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4713:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4744:1:1",
														"nodeType": "YulTypedName",
														"src": "4744:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4747:1:1",
														"nodeType": "YulTypedName",
														"src": "4747:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4753:7:1",
														"nodeType": "YulTypedName",
														"src": "4753:7:1",
														"type": ""
													}
												],
												"src": "4713:168:1"
											},
											{
												"body": {
													"nativeSrc": "5099:276:1",
													"nodeType": "YulBlock",
													"src": "5099:276:1",
													"statements": [
														{
															"nativeSrc": "5109:27:1",
															"nodeType": "YulAssignment",
															"src": "5109:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5132:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5132:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:1"
																},
																"nativeSrc": "5117:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5117:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5109:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5152:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5163:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5163:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5145:6:1"
																},
																"nativeSrc": "5145:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5145:25:1"
															},
															"nativeSrc": "5145:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5145:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5190:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5190:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5201:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5201:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5186:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5186:3:1"
																		},
																		"nativeSrc": "5186:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5186:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5206:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5179:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5179:6:1"
																},
																"nativeSrc": "5179:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5179:34:1"
															},
															"nativeSrc": "5179:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5179:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5233:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5233:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5244:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5244:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5229:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5229:3:1"
																		},
																		"nativeSrc": "5229:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5229:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5249:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5249:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5222:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5222:6:1"
																},
																"nativeSrc": "5222:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5222:34:1"
															},
															"nativeSrc": "5222:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5222:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5276:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5276:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5287:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5287:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5272:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5272:3:1"
																		},
																		"nativeSrc": "5272:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5272:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "5292:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5292:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5265:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:1"
																},
																"nativeSrc": "5265:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5265:34:1"
															},
															"nativeSrc": "5265:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5265:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5319:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5319:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5330:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5330:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5315:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5315:3:1"
																		},
																		"nativeSrc": "5315:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5315:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "5340:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5340:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5356:3:1",
																								"nodeType": "YulLiteral",
																								"src": "5356:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5361:1:1",
																								"nodeType": "YulLiteral",
																								"src": "5361:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5352:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5352:3:1"
																						},
																						"nativeSrc": "5352:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5352:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5365:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5365:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5348:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5348:3:1"
																				},
																				"nativeSrc": "5348:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5348:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5336:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5336:3:1"
																		},
																		"nativeSrc": "5336:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5336:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5308:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:1"
																},
																"nativeSrc": "5308:61:1",
																"nodeType": "YulFunctionCall",
																"src": "5308:61:1"
															},
															"nativeSrc": "5308:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "5308:61:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "4886:489:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5036:9:1",
														"nodeType": "YulTypedName",
														"src": "5036:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5047:6:1",
														"nodeType": "YulTypedName",
														"src": "5047:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5055:6:1",
														"nodeType": "YulTypedName",
														"src": "5055:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5063:6:1",
														"nodeType": "YulTypedName",
														"src": "5063:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5071:6:1",
														"nodeType": "YulTypedName",
														"src": "5071:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5079:6:1",
														"nodeType": "YulTypedName",
														"src": "5079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5090:4:1",
														"nodeType": "YulTypedName",
														"src": "5090:4:1",
														"type": ""
													}
												],
												"src": "4886:489:1"
											},
											{
												"body": {
													"nativeSrc": "5501:427:1",
													"nodeType": "YulBlock",
													"src": "5501:427:1",
													"statements": [
														{
															"nativeSrc": "5511:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5511:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5521:2:1",
																"nodeType": "YulLiteral",
																"src": "5521:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5515:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5515:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5539:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5539:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5550:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5550:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5532:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5532:6:1"
																},
																"nativeSrc": "5532:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5532:21:1"
															},
															"nativeSrc": "5532:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5532:21:1"
														},
														{
															"nativeSrc": "5562:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5562:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5582:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5582:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5576:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5576:5:1"
																},
																"nativeSrc": "5576:13:1",
																"nodeType": "YulFunctionCall",
																"src": "5576:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5566:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5566:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5609:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5609:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5620:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5620:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5605:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5605:3:1"
																		},
																		"nativeSrc": "5605:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5605:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5625:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5625:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5598:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:1"
																},
																"nativeSrc": "5598:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5598:34:1"
															},
															"nativeSrc": "5598:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5598:34:1"
														},
														{
															"nativeSrc": "5641:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5641:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5650:1:1",
																"nodeType": "YulLiteral",
																"src": "5650:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5645:1:1",
																	"nodeType": "YulTypedName",
																	"src": "5645:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5710:90:1",
																"nodeType": "YulBlock",
																"src": "5710:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "5739:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5739:9:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "5750:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5750:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5735:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5735:3:1"
																							},
																							"nativeSrc": "5735:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5735:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5754:2:1",
																							"nodeType": "YulLiteral",
																							"src": "5754:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5731:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5731:3:1"
																					},
																					"nativeSrc": "5731:26:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5731:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "5773:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "5773:6:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "5781:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "5781:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "5769:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "5769:3:1"
																									},
																									"nativeSrc": "5769:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "5769:14:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "5785:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "5785:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5765:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5765:3:1"
																							},
																							"nativeSrc": "5765:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5765:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5759:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5759:5:1"
																					},
																					"nativeSrc": "5759:30:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5759:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5724:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5724:6:1"
																			},
																			"nativeSrc": "5724:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5724:66:1"
																		},
																		"nativeSrc": "5724:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5724:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5671:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5671:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5674:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5674:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5668:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5668:2:1"
																},
																"nativeSrc": "5668:13:1",
																"nodeType": "YulFunctionCall",
																"src": "5668:13:1"
															},
															"nativeSrc": "5660:140:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5682:19:1",
																"nodeType": "YulBlock",
																"src": "5682:19:1",
																"statements": [
																	{
																		"nativeSrc": "5684:15:1",
																		"nodeType": "YulAssignment",
																		"src": "5684:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5693:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "5693:1:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "5696:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5696:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5689:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5689:3:1"
																			},
																			"nativeSrc": "5689:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5689:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5684:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5684:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5664:3:1",
																"nodeType": "YulBlock",
																"src": "5664:3:1",
																"statements": []
															},
															"src": "5660:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5824:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5824:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5835:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5835:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5820:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5820:3:1"
																				},
																				"nativeSrc": "5820:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5820:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5844:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5844:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5816:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5816:3:1"
																		},
																		"nativeSrc": "5816:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5816:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5849:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5849:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5809:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5809:6:1"
																},
																"nativeSrc": "5809:42:1",
																"nodeType": "YulFunctionCall",
																"src": "5809:42:1"
															},
															"nativeSrc": "5809:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "5809:42:1"
														},
														{
															"nativeSrc": "5860:62:1",
															"nodeType": "YulAssignment",
															"src": "5860:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5876:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5876:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5895:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "5895:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5903:2:1",
																								"nodeType": "YulLiteral",
																								"src": "5903:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5891:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5891:3:1"
																						},
																						"nativeSrc": "5891:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5891:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5912:2:1",
																								"nodeType": "YulLiteral",
																								"src": "5912:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5908:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5908:3:1"
																						},
																						"nativeSrc": "5908:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5908:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5887:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5887:3:1"
																				},
																				"nativeSrc": "5887:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5887:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5872:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5872:3:1"
																		},
																		"nativeSrc": "5872:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5872:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5919:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5919:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5868:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5868:3:1"
																},
																"nativeSrc": "5868:54:1",
																"nodeType": "YulFunctionCall",
																"src": "5868:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5860:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5860:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5380:548:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5470:9:1",
														"nodeType": "YulTypedName",
														"src": "5470:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5481:6:1",
														"nodeType": "YulTypedName",
														"src": "5481:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5492:4:1",
														"nodeType": "YulTypedName",
														"src": "5492:4:1",
														"type": ""
													}
												],
												"src": "5380:548:1"
											},
											{
												"body": {
													"nativeSrc": "6027:203:1",
													"nodeType": "YulBlock",
													"src": "6027:203:1",
													"statements": [
														{
															"nativeSrc": "6037:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6037:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6057:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6057:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6051:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6051:5:1"
																},
																"nativeSrc": "6051:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6051:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6041:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6041:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6072:32:1",
															"nodeType": "YulAssignment",
															"src": "6072:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "6091:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6091:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6098:4:1",
																				"nodeType": "YulLiteral",
																				"src": "6098:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6087:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6087:3:1"
																		},
																		"nativeSrc": "6087:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6087:16:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6081:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6081:5:1"
																},
																"nativeSrc": "6081:23:1",
																"nodeType": "YulFunctionCall",
																"src": "6081:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6072:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6072:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6141:83:1",
																"nodeType": "YulBlock",
																"src": "6141:83:1",
																"statements": [
																	{
																		"nativeSrc": "6155:59:1",
																		"nodeType": "YulAssignment",
																		"src": "6155:59:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "6168:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6168:5:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6183:1:1",
																									"nodeType": "YulLiteral",
																									"src": "6183:1:1",
																									"type": "",
																									"value": "3"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "6190:4:1",
																											"nodeType": "YulLiteral",
																											"src": "6190:4:1",
																											"type": "",
																											"value": "0x20"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "6196:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "6196:6:1"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "6186:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "6186:3:1"
																									},
																									"nativeSrc": "6186:17:1",
																									"nodeType": "YulFunctionCall",
																									"src": "6186:17:1"
																								}
																							],
																							"functionName": {
																								"name": "shl",
																								"nativeSrc": "6179:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6179:3:1"
																							},
																							"nativeSrc": "6179:25:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6179:25:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6210:1:1",
																									"nodeType": "YulLiteral",
																									"src": "6210:1:1",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6206:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6206:3:1"
																							},
																							"nativeSrc": "6206:6:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6206:6:1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6175:3:1"
																					},
																					"nativeSrc": "6175:38:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6175:38:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6164:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6164:3:1"
																			},
																			"nativeSrc": "6164:50:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6164:50:1"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "6155:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6155:5:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6119:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6119:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6127:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6127:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6116:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6116:2:1"
																},
																"nativeSrc": "6116:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6116:16:1"
															},
															"nativeSrc": "6113:111:1",
															"nodeType": "YulIf",
															"src": "6113:111:1"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "5933:297:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6007:5:1",
														"nodeType": "YulTypedName",
														"src": "6007:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6017:5:1",
														"nodeType": "YulTypedName",
														"src": "6017:5:1",
														"type": ""
													}
												],
												"src": "5933:297:1"
											},
											{
												"body": {
													"nativeSrc": "6283:77:1",
													"nodeType": "YulBlock",
													"src": "6283:77:1",
													"statements": [
														{
															"nativeSrc": "6293:16:1",
															"nodeType": "YulAssignment",
															"src": "6293:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6304:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6304:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6307:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6307:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6300:3:1"
																},
																"nativeSrc": "6300:9:1",
																"nodeType": "YulFunctionCall",
																"src": "6300:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6293:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6293:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6332:22:1",
																"nodeType": "YulBlock",
																"src": "6332:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6334:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "6334:16:1"
																			},
																			"nativeSrc": "6334:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6334:18:1"
																		},
																		"nativeSrc": "6334:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6334:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6324:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6324:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6327:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6327:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6321:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6321:2:1"
																},
																"nativeSrc": "6321:10:1",
																"nodeType": "YulFunctionCall",
																"src": "6321:10:1"
															},
															"nativeSrc": "6318:36:1",
															"nodeType": "YulIf",
															"src": "6318:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6235:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6266:1:1",
														"nodeType": "YulTypedName",
														"src": "6266:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6269:1:1",
														"nodeType": "YulTypedName",
														"src": "6269:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6275:3:1",
														"nodeType": "YulTypedName",
														"src": "6275:3:1",
														"type": ""
													}
												],
												"src": "6235:125:1"
											},
											{
												"body": {
													"nativeSrc": "6522:188:1",
													"nodeType": "YulBlock",
													"src": "6522:188:1",
													"statements": [
														{
															"nativeSrc": "6532:26:1",
															"nodeType": "YulAssignment",
															"src": "6532:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6544:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6544:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6555:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6555:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6540:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6540:3:1"
																},
																"nativeSrc": "6540:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6540:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6532:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6532:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6574:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6574:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6589:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6589:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6605:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6605:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6610:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6610:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6601:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6601:3:1"
																						},
																						"nativeSrc": "6601:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6601:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6614:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6614:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6597:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6597:3:1"
																				},
																				"nativeSrc": "6597:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6597:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6585:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6585:3:1"
																		},
																		"nativeSrc": "6585:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6585:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6567:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6567:6:1"
																},
																"nativeSrc": "6567:51:1",
																"nodeType": "YulFunctionCall",
																"src": "6567:51:1"
															},
															"nativeSrc": "6567:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "6567:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6638:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6638:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6649:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6649:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6634:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:1"
																		},
																		"nativeSrc": "6634:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6634:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6654:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6654:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6627:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6627:6:1"
																},
																"nativeSrc": "6627:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6627:34:1"
															},
															"nativeSrc": "6627:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6627:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6681:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6681:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6692:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6692:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6677:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6677:3:1"
																		},
																		"nativeSrc": "6677:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6677:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6697:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6697:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6670:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6670:6:1"
																},
																"nativeSrc": "6670:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6670:34:1"
															},
															"nativeSrc": "6670:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6670:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6365:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6475:9:1",
														"nodeType": "YulTypedName",
														"src": "6475:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6486:6:1",
														"nodeType": "YulTypedName",
														"src": "6486:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6494:6:1",
														"nodeType": "YulTypedName",
														"src": "6494:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6502:6:1",
														"nodeType": "YulTypedName",
														"src": "6502:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6513:4:1",
														"nodeType": "YulTypedName",
														"src": "6513:4:1",
														"type": ""
													}
												],
												"src": "6365:345:1"
											},
											{
												"body": {
													"nativeSrc": "6816:76:1",
													"nodeType": "YulBlock",
													"src": "6816:76:1",
													"statements": [
														{
															"nativeSrc": "6826:26:1",
															"nodeType": "YulAssignment",
															"src": "6826:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6838:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6838:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6849:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6849:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6834:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6834:3:1"
																},
																"nativeSrc": "6834:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6834:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6826:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6826:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6868:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6868:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6879:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6879:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6861:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6861:6:1"
																},
																"nativeSrc": "6861:25:1",
																"nodeType": "YulFunctionCall",
																"src": "6861:25:1"
															},
															"nativeSrc": "6861:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "6861:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6715:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6785:9:1",
														"nodeType": "YulTypedName",
														"src": "6785:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6796:6:1",
														"nodeType": "YulTypedName",
														"src": "6796:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6807:4:1",
														"nodeType": "YulTypedName",
														"src": "6807:4:1",
														"type": ""
													}
												],
												"src": "6715:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61016060405234801562000011575f80fd5b50604051620018c3380380620018c383398101604081905262000034916200042c565b6040518060400160405280600b81526020016a29bab832b9102a37b5b2b760a91b81525080604051806040016040528060018152602001603160f81b815250836040518060400160405280600b81526020016a29bab832b9102a37b5b2b760a91b8152506040518060400160405280600381526020016253544b60e81b8152508160039081620000c59190620004f9565b506004620000d48282620004f9565b5050506001600160a01b0381166200010657604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6200011181620001f6565b506200011f82600662000247565b610120526200013081600762000247565b61014052815160208084019190912060e052815190820120610100524660a052620001bd60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250620001ef33620001da6012600a620006d2565b620001e990620f4240620006e2565b6200027f565b5062000784565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f60208351101562000266576200025e83620002bb565b905062000279565b81620002738482620004f9565b5060ff90505b92915050565b6001600160a01b038216620002aa5760405163ec442f0560e01b81525f6004820152602401620000fd565b620002b75f8383620002fd565b5050565b5f80829050601f81511115620002e8578260405163305a27a960e01b8152600401620000fd9190620006fc565b8051620002f5826200074a565b179392505050565b6001600160a01b0383166200032b578060025f8282546200031f91906200076e565b909155506200039d9050565b6001600160a01b0383165f90815260208190526040902054818110156200037f5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000fd565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216620003bb57600280548290039055620003d9565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200041f91815260200190565b60405180910390a3505050565b5f602082840312156200043d575f80fd5b81516001600160a01b038116811462000454575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200048457607f821691505b602082108103620004a357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620004f457805f5260205f20601f840160051c81016020851015620004d05750805b601f840160051c820191505b81811015620004f1575f8155600101620004dc565b50505b505050565b81516001600160401b038111156200051557620005156200045b565b6200052d816200052684546200046f565b84620004a9565b602080601f83116001811462000563575f84156200054b5750858301515b5f19600386901b1c1916600185901b178555620005bd565b5f85815260208120601f198616915b82811015620005935788860151825594840194600190910190840162000572565b5085821015620005b157878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156200061957815f1904821115620005fd57620005fd620005c5565b808516156200060b57918102915b93841c9390800290620005de565b509250929050565b5f82620006315750600162000279565b816200063f57505f62000279565b8160018114620006585760028114620006635762000683565b600191505062000279565b60ff841115620006775762000677620005c5565b50506001821b62000279565b5060208310610133831016604e8410600b8410161715620006a8575081810a62000279565b620006b48383620005d9565b805f1904821115620006ca57620006ca620005c5565b029392505050565b5f6200045460ff84168362000621565b8082028115828204841417620002795762000279620005c5565b5f602080835283518060208501525f5b818110156200072a578581018301518582016040015282016200070c565b505f604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620004a3575f1960209190910360031b1b16919050565b80820180821115620002795762000279620005c5565b60805160a05160c05160e0516101005161012051610140516110ed620007d65f395f61090c01525f6108df01525f6107a201525f61077a01525f6106d501525f6106ff01525f61072901526110ed5ff3fe608060405234801561000f575f80fd5b506004361061011c575f3560e01c8063715018a6116100a957806395d89b411161006e57806395d89b4114610251578063a9059cbb14610259578063d505accf1461026c578063dd62ed3e1461027f578063f2fde38b146102b7575f80fd5b8063715018a6146101ed57806379cc6790146101f55780637ecebe001461020857806384b0196e1461021b5780638da5cb5b14610236575f80fd5b8063313ce567116100ef578063313ce567146101865780633644e5151461019557806340c10f191461019d57806342966c68146101b257806370a08231146101c5575f80fd5b806306fdde0314610120578063095ea7b31461013e57806318160ddd1461016157806323b872dd14610173575b5f80fd5b6101286102ca565b6040516101359190610e52565b60405180910390f35b61015161014c366004610e86565b61035a565b6040519015158152602001610135565b6002545b604051908152602001610135565b610151610181366004610eae565b610373565b60405160128152602001610135565b610165610396565b6101b06101ab366004610e86565b6103a4565b005b6101b06101c0366004610ee7565b6103ba565b6101656101d3366004610efe565b6001600160a01b03165f9081526020819052604090205490565b6101b06103c7565b6101b0610203366004610e86565b6103da565b610165610216366004610efe565b6103ef565b61022361040c565b6040516101359796959493929190610f17565b6005546040516001600160a01b039091168152602001610135565b61012861044e565b610151610267366004610e86565b61045d565b6101b061027a366004610fae565b61046a565b61016561028d36600461101b565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101b06102c5366004610efe565b6105a5565b6060600380546102d99061104c565b80601f01602080910402602001604051908101604052809291908181526020018280546103059061104c565b80156103505780601f1061032757610100808354040283529160200191610350565b820191905f5260205f20905b81548152906001019060200180831161033357829003601f168201915b5050505050905090565b5f336103678185856105df565b60019150505b92915050565b5f336103808582856105f1565b61038b85858561066c565b506001949350505050565b5f61039f6106c9565b905090565b6103ac6107f2565b6103b6828261081f565b5050565b6103c43382610853565b50565b6103cf6107f2565b6103d85f610887565b565b6103e58233836105f1565b6103b68282610853565b6001600160a01b0381165f9081526008602052604081205461036d565b5f6060805f805f606061041d6108d8565b610425610905565b604080515f80825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102d99061104c565b5f3361036781858561066c565b834211156104935760405163313c898160e11b8152600481018590526024015b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104de8c6001600160a01b03165f90815260086020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f61053882610932565b90505f6105478287878761095e565b9050896001600160a01b0316816001600160a01b03161461058e576040516325c0072360e11b81526001600160a01b0380831660048301528b16602482015260440161048a565b6105998a8a8a6105df565b50505050505050505050565b6105ad6107f2565b6001600160a01b0381166105d657604051631e4fbdf760e01b81525f600482015260240161048a565b6103c481610887565b6105ec838383600161098a565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f198114610666578181101561065857604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161048a565b61066684848484035f61098a565b50505050565b6001600160a01b03831661069557604051634b637e8f60e11b81525f600482015260240161048a565b6001600160a01b0382166106be5760405163ec442f0560e01b81525f600482015260240161048a565b6105ec838383610a5c565b5f306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561072157507f000000000000000000000000000000000000000000000000000000000000000046145b1561074b57507f000000000000000000000000000000000000000000000000000000000000000090565b61039f604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a08201525f9060c00160405160208183030381529060405280519060200120905090565b6005546001600160a01b031633146103d85760405163118cdaa760e01b815233600482015260240161048a565b6001600160a01b0382166108485760405163ec442f0560e01b81525f600482015260240161048a565b6103b65f8383610a5c565b6001600160a01b03821661087c57604051634b637e8f60e11b81525f600482015260240161048a565b6103b6825f83610a5c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b606061039f7f00000000000000000000000000000000000000000000000000000000000000006006610b82565b606061039f7f00000000000000000000000000000000000000000000000000000000000000006007610b82565b5f61036d61093e6106c9565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f8061096e88888888610c2b565b92509250925061097e8282610cf3565b50909695505050505050565b6001600160a01b0384166109b35760405163e602df0560e01b81525f600482015260240161048a565b6001600160a01b0383166109dc57604051634a1406b160e11b81525f600482015260240161048a565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561066657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a4e91815260200190565b60405180910390a350505050565b6001600160a01b038316610a86578060025f828254610a7b9190611084565b90915550610af69050565b6001600160a01b0383165f9081526020819052604090205481811015610ad85760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161048a565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610b1257600280548290039055610b30565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b7591815260200190565b60405180910390a3505050565b606060ff8314610b9c57610b9583610dab565b905061036d565b818054610ba89061104c565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd49061104c565b8015610c1f5780601f10610bf657610100808354040283529160200191610c1f565b820191905f5260205f20905b815481529060010190602001808311610c0257829003601f168201915b5050505050905061036d565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610c6457505f91506003905082610ce9565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610cb5573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116610ce057505f925060019150829050610ce9565b92505f91508190505b9450945094915050565b5f826003811115610d0657610d066110a3565b03610d0f575050565b6001826003811115610d2357610d236110a3565b03610d415760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610d5557610d556110a3565b03610d765760405163fce698f760e01b81526004810182905260240161048a565b6003826003811115610d8a57610d8a6110a3565b036103b6576040516335e2f38360e21b81526004810182905260240161048a565b60605f610db783610de8565b6040805160208082528183019092529192505f91906020820181803683375050509182525060208101929092525090565b5f60ff8216601f81111561036d57604051632cd44ac360e21b815260040160405180910390fd5b5f81518084525f5b81811015610e3357602081850181015186830182015201610e17565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610e646020830184610e0f565b9392505050565b80356001600160a01b0381168114610e81575f80fd5b919050565b5f8060408385031215610e97575f80fd5b610ea083610e6b565b946020939093013593505050565b5f805f60608486031215610ec0575f80fd5b610ec984610e6b565b9250610ed760208501610e6b565b9150604084013590509250925092565b5f60208284031215610ef7575f80fd5b5035919050565b5f60208284031215610f0e575f80fd5b610e6482610e6b565b60ff60f81b881681525f602060e06020840152610f3760e084018a610e0f565b8381036040850152610f49818a610e0f565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b81811015610f9c57835183529284019291840191600101610f80565b50909c9b505050505050505050505050565b5f805f805f805f60e0888a031215610fc4575f80fd5b610fcd88610e6b565b9650610fdb60208901610e6b565b95506040880135945060608801359350608088013560ff81168114610ffe575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f806040838503121561102c575f80fd5b61103583610e6b565b915061104360208401610e6b565b90509250929050565b600181811c9082168061106057607f821691505b60208210810361107e57634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561036d57634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52602160045260245ffdfea2646970667358221220cc57e232febfc0c5ff6bfc478c921b49f028b850d3aa8ecebc27549a83bc1fcb64736f6c63430008160033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x18C3 CODESIZE SUB DUP1 PUSH3 0x18C3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x29BAB832B9102A37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x29BAB832B9102A37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x53544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x4F9 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xD4 DUP3 DUP3 PUSH3 0x4F9 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x106 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x111 DUP2 PUSH3 0x1F6 JUMP JUMPDEST POP PUSH3 0x11F DUP3 PUSH1 0x6 PUSH3 0x247 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x130 DUP2 PUSH1 0x7 PUSH3 0x247 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x1BD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH3 0x1EF CALLER PUSH3 0x1DA PUSH1 0x12 PUSH1 0xA PUSH3 0x6D2 JUMP JUMPDEST PUSH3 0x1E9 SWAP1 PUSH3 0xF4240 PUSH3 0x6E2 JUMP JUMPDEST PUSH3 0x27F JUMP JUMPDEST POP PUSH3 0x784 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x266 JUMPI PUSH3 0x25E DUP4 PUSH3 0x2BB JUMP JUMPDEST SWAP1 POP PUSH3 0x279 JUMP JUMPDEST DUP2 PUSH3 0x273 DUP5 DUP3 PUSH3 0x4F9 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2AA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xFD JUMP JUMPDEST PUSH3 0x2B7 PUSH0 DUP4 DUP4 PUSH3 0x2FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x2E8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xFD SWAP2 SWAP1 PUSH3 0x6FC JUMP JUMPDEST DUP1 MLOAD PUSH3 0x2F5 DUP3 PUSH3 0x74A JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x32B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x31F SWAP2 SWAP1 PUSH3 0x76E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x39D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x37F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xFD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x3BB JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x3D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x41F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x43D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x484 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4F4 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4D0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4F1 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x4DC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x515 JUMPI PUSH3 0x515 PUSH3 0x45B JUMP JUMPDEST PUSH3 0x52D DUP2 PUSH3 0x526 DUP5 SLOAD PUSH3 0x46F JUMP JUMPDEST DUP5 PUSH3 0x4A9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x563 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x54B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x5BD JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x593 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x572 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x5B1 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x619 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x5FD JUMPI PUSH3 0x5FD PUSH3 0x5C5 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x60B JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x5DE JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x631 JUMPI POP PUSH1 0x1 PUSH3 0x279 JUMP JUMPDEST DUP2 PUSH3 0x63F JUMPI POP PUSH0 PUSH3 0x279 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x658 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x663 JUMPI PUSH3 0x683 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x279 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x677 JUMPI PUSH3 0x677 PUSH3 0x5C5 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x279 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x6A8 JUMPI POP DUP2 DUP2 EXP PUSH3 0x279 JUMP JUMPDEST PUSH3 0x6B4 DUP4 DUP4 PUSH3 0x5D9 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x6CA JUMPI PUSH3 0x6CA PUSH3 0x5C5 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x454 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x621 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x279 JUMPI PUSH3 0x279 PUSH3 0x5C5 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x72A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH3 0x70C JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x4A3 JUMPI PUSH0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x279 JUMPI PUSH3 0x279 PUSH3 0x5C5 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x10ED PUSH3 0x7D6 PUSH0 CODECOPY PUSH0 PUSH2 0x90C ADD MSTORE PUSH0 PUSH2 0x8DF ADD MSTORE PUSH0 PUSH2 0x7A2 ADD MSTORE PUSH0 PUSH2 0x77A ADD MSTORE PUSH0 PUSH2 0x6D5 ADD MSTORE PUSH0 PUSH2 0x6FF ADD MSTORE PUSH0 PUSH2 0x729 ADD MSTORE PUSH2 0x10ED PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x173 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x396 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x165 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x223 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x44E JUMP JUMPDEST PUSH2 0x151 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xFAE JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH2 0x165 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2D9 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x305 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x350 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x327 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x350 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x333 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x367 DUP2 DUP6 DUP6 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x380 DUP6 DUP3 DUP6 PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x38B DUP6 DUP6 DUP6 PUSH2 0x66C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x39F PUSH2 0x6C9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x3B6 DUP3 DUP3 PUSH2 0x81F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3C4 CALLER DUP3 PUSH2 0x853 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x3D8 PUSH0 PUSH2 0x887 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3E5 DUP3 CALLER DUP4 PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x3B6 DUP3 DUP3 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x36D JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x41D PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x425 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2D9 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH0 CALLER PUSH2 0x367 DUP2 DUP6 DUP6 PUSH2 0x66C JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x4DE DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x538 DUP3 PUSH2 0x932 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x547 DUP3 DUP8 DUP8 DUP8 PUSH2 0x95E JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x599 DUP11 DUP11 DUP11 PUSH2 0x5DF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5AD PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x3C4 DUP2 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x5EC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x98A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x666 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x666 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x98A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x5EC DUP4 DUP4 DUP4 PUSH2 0xA5C JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x721 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x74B JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x39F PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x3B6 PUSH0 DUP4 DUP4 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x3B6 DUP3 PUSH0 DUP4 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x39F PUSH32 0x0 PUSH1 0x6 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x39F PUSH32 0x0 PUSH1 0x7 PUSH2 0xB82 JUMP JUMPDEST PUSH0 PUSH2 0x36D PUSH2 0x93E PUSH2 0x6C9 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x96E DUP9 DUP9 DUP9 DUP9 PUSH2 0xC2B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x97E DUP3 DUP3 PUSH2 0xCF3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x666 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA4E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA86 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x1084 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xAF6 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB12 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB75 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP4 PUSH2 0xDAB JUMP JUMPDEST SWAP1 POP PUSH2 0x36D JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xBA8 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBD4 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBF6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x36D JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xC64 JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCE0 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xCE9 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD06 JUMPI PUSH2 0xD06 PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD0F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD23 JUMPI PUSH2 0xD23 PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD55 JUMPI PUSH2 0xD55 PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD76 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD8A JUMPI PUSH2 0xD8A PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0x3B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xDB7 DUP4 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x36D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE33 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE17 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xE64 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE0F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE81 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE97 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEA0 DUP4 PUSH2 0xE6B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEC9 DUP5 PUSH2 0xE6B JUMP JUMPDEST SWAP3 POP PUSH2 0xED7 PUSH1 0x20 DUP6 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE64 DUP3 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xF37 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xE0F JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xF49 DUP2 DUP11 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF9C JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF80 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFCD DUP9 PUSH2 0xE6B JUMP JUMPDEST SWAP7 POP PUSH2 0xFDB PUSH1 0x20 DUP10 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xFFE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x102C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1035 DUP4 PUSH2 0xE6B JUMP JUMPDEST SWAP2 POP PUSH2 0x1043 PUSH1 0x20 DUP5 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1060 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x107E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x36D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC JUMPI 0xE2 ORIGIN INVALID 0xBF 0xC0 0xC5 SELFDESTRUCT PUSH12 0xFC478C921B49F028B850D3AA DUP15 0xCE 0xBC 0x27 SLOAD SWAP11 DUP4 0xBC 0x1F 0xCB PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "80671:374:0:-:0;;;80743:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;78210:52;;;;;;;;;;;;;-1:-1:-1;;;78210:52:0;;;78249:4;36974:431;;;;;;;;;;;;;-1:-1:-1;;;36974:431:0;;;80829:12;67601:113;;;;;;;;;;;;;-1:-1:-1;;;67601:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;67601:113:0;;;67675:5;67667;:13;;;;;;:::i;:::-;-1:-1:-1;67690:7:0;:17;67700:7;67690;:17;:::i;:::-;-1:-1:-1;;;;;;;;60566:26:0;;60562:95;;60615:31;;-1:-1:-1;;;60615:31:0;;60643:1;60615:31;;;3142:51:1;3115:18;;60615:31:0;;;;;;;;60562:95;60666:32;60685:12;60666:18;:32::i;:::-;-1:-1:-1;37047:45:0;:4;37078:13;37047:30;:45::i;:::-;37039:53;;37113:51;:7;37147:16;37113:33;:51::i;:::-;37102:62;;37188:22;;;;;;;;;;37174:36;;37237:25;;;;;;37220:42;;37290:13;37273:30;;37338:23;37872:11;;37885:14;;37850:80;;;35725:95;37850:80;;;5145:25:1;5186:18;;;5179:34;;;;5229:18;;;5222:34;37901:13:0;5272:18:1;;;5265:34;37924:4:0;5315:19:1;;;5308:61;37814:7:0;;5117:19:1;;37850:80:0;;;;;;;;;;;;37840:91;;;;;;37833:98;;37759:179;;37338:23;37313:48;;-1:-1:-1;;37393:4:0;37371:27;;-1:-1:-1;80892:45:0::3;80898:10;80920:16;68780:2:::0;80920::::3;:16;:::i;:::-;80910:26;::::0;:7:::3;:26;:::i;:::-;80892:5;:45::i;:::-;80743:201:::0;80671:374;;62205:187;62297:6;;;-1:-1:-1;;;;;62313:17:0;;;-1:-1:-1;;;;;;62313:17:0;;;;;;;62345:40;;62297:6;;;62313:17;62297:6;;62345:40;;62278:16;;62345:40;62268:124;62205:187;:::o;9160:340::-;9256:11;9305:2;9289:5;9283:19;:24;9279:215;;;9330:20;9344:5;9330:13;:20::i;:::-;9323:27;;;;9279:215;9407:5;9381:46;9422:5;9407;9381:46;:::i;:::-;-1:-1:-1;7636:66:0;;-1:-1:-1;9279:215:0;9160:340;;;;:::o;73426:208::-;-1:-1:-1;;;;;73496:21:0;;73492:91;;73540:32;;-1:-1:-1;;;73540:32:0;;73569:1;73540:32;;;3142:51:1;3115:18;;73540:32:0;2996:203:1;73492:91:0;73592:35;73608:1;73612:7;73621:5;73592:7;:35::i;:::-;73426:208;;:::o;7954:286::-;8019:11;8042:17;8068:3;8042:30;;8100:2;8086:4;:11;:16;8082:72;;;8139:3;8125:18;;-1:-1:-1;;;8125:18:0;;;;;;;;:::i;8082:72::-;8220:11;;8203:13;8220:4;8203:13;:::i;:::-;8195:36;;7954:286;-1:-1:-1;;;7954:286:0:o;71976:1107::-;-1:-1:-1;;;;;72065:18:0;;72061:540;;72217:5;72201:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;72061:540:0;;-1:-1:-1;72061:540:0;;-1:-1:-1;;;;;72275:15:0;;72253:19;72275:15;;;;;;;;;;;72308:19;;;72304:115;;;72354:50;;-1:-1:-1;;;72354:50:0;;-1:-1:-1;;;;;6585:32:1;;72354:50:0;;;6567:51:1;6634:18;;;6627:34;;;6677:18;;;6670:34;;;6540:18;;72354:50:0;6365:345:1;72304:115:0;-1:-1:-1;;;;;72539:15:0;;:9;:15;;;;;;;;;;72557:19;;;;72539:37;;72061:540;-1:-1:-1;;;;;72615:16:0;;72611:425;;72778:12;:21;;;;;;;72611:425;;;-1:-1:-1;;;;;72989:13:0;;:9;:13;;;;;;;;;;:22;;;;;;72611:425;73066:2;-1:-1:-1;;;;;73051:25:0;73060:4;-1:-1:-1;;;;;73051:25:0;;73070:5;73051:25;;;;6861::1;;6849:2;6834:18;;6715:177;73051:25:0;;;;;;;;71976:1107;;;:::o;14:290:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:1;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1345::-;1766:10;;-1:-1:-1;;;;;1788:30:1;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;2002:4;;2059:2;2048:14;;2076:1;2071:663;;;;2778:1;2795:6;2792:89;;;-1:-1:-1;2847:19:1;;;2841:26;2792:89;-1:-1:-1;;1603:1:1;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2894:81;;2041:944;;2071:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2107:20:1;;;2225:236;2239:7;2236:1;2233:14;2225:236;;;2328:19;;;2322:26;2307:42;;2420:27;;;;2388:1;2376:14;;;;2255:19;;2225:236;;;2229:3;2489:6;2480:7;2477:19;2474:201;;;2550:19;;;2544:26;-1:-1:-1;;2633:1:1;2629:14;;;2645:3;2625:24;2621:37;2617:42;2602:58;2587:74;;2474:201;;;2721:1;2712:6;2709:1;2705:14;2701:22;2695:4;2688:36;2041:944;;;;;1646:1345;;:::o;3204:127::-;3265:10;3260:3;3256:20;3253:1;3246:31;3296:4;3293:1;3286:15;3320:4;3317:1;3310:15;3336:416;3425:1;3462:5;3425:1;3476:270;3497:7;3487:8;3484:21;3476:270;;;3556:4;3552:1;3548:6;3544:17;3538:4;3535:27;3532:53;;;3565:18;;:::i;:::-;3615:7;3605:8;3601:22;3598:55;;;3635:16;;;;3598:55;3714:22;;;;3674:15;;;;3476:270;;;3480:3;3336:416;;;;;:::o;3757:806::-;3806:5;3836:8;3826:80;;-1:-1:-1;3877:1:1;3891:5;;3826:80;3925:4;3915:76;;-1:-1:-1;3962:1:1;3976:5;;3915:76;4007:4;4025:1;4020:59;;;;4093:1;4088:130;;;;4000:218;;4020:59;4050:1;4041:10;;4064:5;;;4088:130;4125:3;4115:8;4112:17;4109:43;;;4132:18;;:::i;:::-;-1:-1:-1;;4188:1:1;4174:16;;4203:5;;4000:218;;4302:2;4292:8;4289:16;4283:3;4277:4;4274:13;4270:36;4264:2;4254:8;4251:16;4246:2;4240:4;4237:12;4233:35;4230:77;4227:159;;;-1:-1:-1;4339:19:1;;;4371:5;;4227:159;4418:34;4443:8;4437:4;4418:34;:::i;:::-;4488:6;4484:1;4480:6;4476:19;4467:7;4464:32;4461:58;;;4499:18;;:::i;:::-;4537:20;;3757:806;-1:-1:-1;;;3757:806:1:o;4568:140::-;4626:5;4655:47;4696:4;4686:8;4682:19;4676:4;4655:47;:::i;4713:168::-;4786:9;;;4817;;4834:15;;;4828:22;;4814:37;4804:71;;4855:18;;:::i;5380:548::-;5492:4;5521:2;5550;5539:9;5532:21;5582:6;5576:13;5625:6;5620:2;5609:9;5605:18;5598:34;5650:1;5660:140;5674:6;5671:1;5668:13;5660:140;;;5769:14;;;5765:23;;5759:30;5735:17;;;5754:2;5731:26;5724:66;5689:10;;5660:140;;;5664:3;5849:1;5844:2;5835:6;5824:9;5820:22;5816:31;5809:42;5919:2;5912;5908:7;5903:2;5895:6;5891:15;5887:29;5876:9;5872:45;5868:54;5860:62;;;;5380:548;;;;:::o;5933:297::-;6051:12;;6098:4;6087:16;;;6081:23;;6051:12;6116:16;;6113:111;;;-1:-1:-1;;6190:4:1;6186:17;;;;6183:1;6179:25;6175:38;6164:50;;5933:297;-1:-1:-1;5933:297:1:o;6235:125::-;6300:9;;;6321:10;;;6318:36;;;6334:18;;:::i;6715:177::-;80671:374:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3543": {
									"entryPoint": 918,
									"id": 3543,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_2098": {
									"entryPoint": 2264,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2110": {
									"entryPoint": 2309,
									"id": 2110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_3292": {
									"entryPoint": 1503,
									"id": 3292,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_3352": {
									"entryPoint": 2442,
									"id": 3352,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2028": {
									"entryPoint": null,
									"id": 2028,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_burn_3274": {
									"entryPoint": 2131,
									"id": 3274,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_2732": {
									"entryPoint": 2034,
									"id": 2732,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_2007": {
									"entryPoint": 1737,
									"id": 2007,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_2044": {
									"entryPoint": 2354,
									"id": 2044,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_3241": {
									"entryPoint": 2079,
									"id": 3241,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2640": {
									"entryPoint": null,
									"id": 2640,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_3400": {
									"entryPoint": 1521,
									"id": 3400,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_2457": {
									"entryPoint": 3315,
									"id": 2457,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_2794": {
									"entryPoint": 2183,
									"id": 2794,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_3131": {
									"entryPoint": 1644,
									"id": 3131,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_3208": {
									"entryPoint": 2652,
									"id": 3208,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_3028": {
									"entryPoint": null,
									"id": 3028,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_3052": {
									"entryPoint": 858,
									"id": 3052,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_2987": {
									"entryPoint": null,
									"id": 2987,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_3584": {
									"entryPoint": 986,
									"id": 3584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_3563": {
									"entryPoint": 954,
									"id": 3563,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@byteLength_315": {
									"entryPoint": 3560,
									"id": 315,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_2965": {
									"entryPoint": null,
									"id": 2965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_2086": {
									"entryPoint": 1036,
									"id": 2086,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@mint_3637": {
									"entryPoint": 932,
									"id": 3637,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_2947": {
									"entryPoint": 714,
									"id": 2947,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_3533": {
									"entryPoint": 1007,
									"id": 3533,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_2715": {
									"entryPoint": null,
									"id": 2715,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permit_3516": {
									"entryPoint": 1130,
									"id": 3516,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_2408": {
									"entryPoint": 2398,
									"id": 2408,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_2746": {
									"entryPoint": 967,
									"id": 2746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_2956": {
									"entryPoint": 1102,
									"id": 2956,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_382": {
									"entryPoint": 2946,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_283": {
									"entryPoint": 3499,
									"id": 283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_1891": {
									"entryPoint": null,
									"id": 1891,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_2974": {
									"entryPoint": null,
									"id": 2974,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_3084": {
									"entryPoint": 883,
									"id": 3084,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_2774": {
									"entryPoint": 1445,
									"id": 2774,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_3011": {
									"entryPoint": 1117,
									"id": 3011,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_2372": {
									"entryPoint": 3115,
									"id": 2372,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_address": {
									"entryPoint": 3691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3863,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 4259,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8018:1",
										"nodeType": "YulBlock",
										"src": "0:8018:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "64:373:1",
													"nodeType": "YulBlock",
													"src": "64:373:1",
													"statements": [
														{
															"nativeSrc": "74:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "94:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "88:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:1"
																},
																"nativeSrc": "88:12:1",
																"nodeType": "YulFunctionCall",
																"src": "88:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "78:6:1",
																	"nodeType": "YulTypedName",
																	"src": "78:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "116:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "121:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "109:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:1"
																},
																"nativeSrc": "109:19:1",
																"nodeType": "YulFunctionCall",
																"src": "109:19:1"
															},
															"nativeSrc": "109:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "109:19:1"
														},
														{
															"nativeSrc": "137:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "137:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "146:1:1",
																"nodeType": "YulLiteral",
																"src": "146:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "141:1:1",
																	"nodeType": "YulTypedName",
																	"src": "141:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "208:110:1",
																"nodeType": "YulBlock",
																"src": "208:110:1",
																"statements": [
																	{
																		"nativeSrc": "222:14:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "222:14:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "232:4:1",
																			"nodeType": "YulLiteral",
																			"src": "232:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "226:2:1",
																				"nodeType": "YulTypedName",
																				"src": "226:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nativeSrc": "264:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "264:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "269:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "269:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "260:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "260:3:1"
																							},
																							"nativeSrc": "260:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "260:11:1"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "273:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "273:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "256:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "256:3:1"
																					},
																					"nativeSrc": "256:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "256:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "292:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "292:5:1"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "299:1:1",
																											"nodeType": "YulIdentifier",
																											"src": "299:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "288:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "288:3:1"
																									},
																									"nativeSrc": "288:13:1",
																									"nodeType": "YulFunctionCall",
																									"src": "288:13:1"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "303:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "303:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "284:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "284:3:1"
																							},
																							"nativeSrc": "284:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "284:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "278:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "278:5:1"
																					},
																					"nativeSrc": "278:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "278:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "249:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "249:6:1"
																			},
																			"nativeSrc": "249:59:1",
																			"nodeType": "YulFunctionCall",
																			"src": "249:59:1"
																		},
																		"nativeSrc": "249:59:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "249:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "167:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "170:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "170:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "164:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "164:2:1"
																},
																"nativeSrc": "164:13:1",
																"nodeType": "YulFunctionCall",
																"src": "164:13:1"
															},
															"nativeSrc": "156:162:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "178:21:1",
																"nodeType": "YulBlock",
																"src": "178:21:1",
																"statements": [
																	{
																		"nativeSrc": "180:17:1",
																		"nodeType": "YulAssignment",
																		"src": "180:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "189:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "189:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "192:4:1",
																					"nodeType": "YulLiteral",
																					"src": "192:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "185:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "185:3:1"
																			},
																			"nativeSrc": "185:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "185:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "180:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "180:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "160:3:1",
																"nodeType": "YulBlock",
																"src": "160:3:1",
																"statements": []
															},
															"src": "156:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "342:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "342:3:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "347:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "347:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "338:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:1"
																				},
																				"nativeSrc": "338:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "338:16:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "356:4:1",
																				"nodeType": "YulLiteral",
																				"src": "356:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "334:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:1"
																		},
																		"nativeSrc": "334:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "334:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "363:1:1",
																		"nodeType": "YulLiteral",
																		"src": "363:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "327:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:1"
																},
																"nativeSrc": "327:38:1",
																"nodeType": "YulFunctionCall",
																"src": "327:38:1"
															},
															"nativeSrc": "327:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "327:38:1"
														},
														{
															"nativeSrc": "374:57:1",
															"nodeType": "YulAssignment",
															"src": "374:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "389:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "389:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "402:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "402:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "410:2:1",
																								"nodeType": "YulLiteral",
																								"src": "410:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "398:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "398:3:1"
																						},
																						"nativeSrc": "398:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "398:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "419:2:1",
																								"nodeType": "YulLiteral",
																								"src": "419:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "415:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "415:3:1"
																						},
																						"nativeSrc": "415:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "415:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "394:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "394:3:1"
																				},
																				"nativeSrc": "394:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "394:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "385:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "385:3:1"
																		},
																		"nativeSrc": "385:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "385:39:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "426:4:1",
																		"nodeType": "YulLiteral",
																		"src": "426:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "381:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "381:3:1"
																},
																"nativeSrc": "381:50:1",
																"nodeType": "YulFunctionCall",
																"src": "381:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "374:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "14:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "41:5:1",
														"nodeType": "YulTypedName",
														"src": "41:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "48:3:1",
														"nodeType": "YulTypedName",
														"src": "48:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "56:3:1",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"src": "14:423:1"
											},
											{
												"body": {
													"nativeSrc": "563:99:1",
													"nodeType": "YulBlock",
													"src": "563:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "580:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "580:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "591:2:1",
																		"nodeType": "YulLiteral",
																		"src": "591:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "573:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "573:6:1"
																},
																"nativeSrc": "573:21:1",
																"nodeType": "YulFunctionCall",
																"src": "573:21:1"
															},
															"nativeSrc": "573:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "573:21:1"
														},
														{
															"nativeSrc": "603:53:1",
															"nodeType": "YulAssignment",
															"src": "603:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "641:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "641:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "652:2:1",
																				"nodeType": "YulLiteral",
																				"src": "652:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "637:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "637:3:1"
																		},
																		"nativeSrc": "637:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "637:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "611:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "611:17:1"
																},
																"nativeSrc": "611:45:1",
																"nodeType": "YulFunctionCall",
																"src": "611:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "603:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "603:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "442:220:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "532:9:1",
														"nodeType": "YulTypedName",
														"src": "532:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "543:6:1",
														"nodeType": "YulTypedName",
														"src": "543:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "554:4:1",
														"nodeType": "YulTypedName",
														"src": "554:4:1",
														"type": ""
													}
												],
												"src": "442:220:1"
											},
											{
												"body": {
													"nativeSrc": "716:124:1",
													"nodeType": "YulBlock",
													"src": "716:124:1",
													"statements": [
														{
															"nativeSrc": "726:29:1",
															"nodeType": "YulAssignment",
															"src": "726:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "748:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "748:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "735:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "735:12:1"
																},
																"nativeSrc": "735:20:1",
																"nodeType": "YulFunctionCall",
																"src": "735:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "726:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "818:16:1",
																"nodeType": "YulBlock",
																"src": "818:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "827:1:1",
																					"nodeType": "YulLiteral",
																					"src": "827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "830:1:1",
																					"nodeType": "YulLiteral",
																					"src": "830:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "820:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:1"
																			},
																			"nativeSrc": "820:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:1"
																		},
																		"nativeSrc": "820:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "788:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "788:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "803:3:1",
																										"nodeType": "YulLiteral",
																										"src": "803:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "808:1:1",
																										"nodeType": "YulLiteral",
																										"src": "808:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "799:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "799:3:1"
																								},
																								"nativeSrc": "799:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "799:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "812:1:1",
																								"nodeType": "YulLiteral",
																								"src": "812:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "795:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "795:3:1"
																						},
																						"nativeSrc": "795:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "795:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "784:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "784:3:1"
																				},
																				"nativeSrc": "784:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "784:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "774:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "774:2:1"
																		},
																		"nativeSrc": "774:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "774:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "767:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:6:1"
																},
																"nativeSrc": "767:50:1",
																"nodeType": "YulFunctionCall",
																"src": "767:50:1"
															},
															"nativeSrc": "764:70:1",
															"nodeType": "YulIf",
															"src": "764:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "667:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "695:6:1",
														"nodeType": "YulTypedName",
														"src": "695:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "706:5:1",
														"nodeType": "YulTypedName",
														"src": "706:5:1",
														"type": ""
													}
												],
												"src": "667:173:1"
											},
											{
												"body": {
													"nativeSrc": "932:167:1",
													"nodeType": "YulBlock",
													"src": "932:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "978:16:1",
																"nodeType": "YulBlock",
																"src": "978:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "987:1:1",
																					"nodeType": "YulLiteral",
																					"src": "987:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "990:1:1",
																					"nodeType": "YulLiteral",
																					"src": "990:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "980:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "980:6:1"
																			},
																			"nativeSrc": "980:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "980:12:1"
																		},
																		"nativeSrc": "980:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "980:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "953:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "962:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "949:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:3:1"
																		},
																		"nativeSrc": "949:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "974:2:1",
																		"nodeType": "YulLiteral",
																		"src": "974:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nativeSrc": "945:32:1",
																"nodeType": "YulFunctionCall",
																"src": "945:32:1"
															},
															"nativeSrc": "942:52:1",
															"nodeType": "YulIf",
															"src": "942:52:1"
														},
														{
															"nativeSrc": "1003:39:1",
															"nodeType": "YulAssignment",
															"src": "1003:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1032:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1013:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1013:18:1"
																},
																"nativeSrc": "1013:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1013:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:1"
																}
															]
														},
														{
															"nativeSrc": "1051:42:1",
															"nodeType": "YulAssignment",
															"src": "1051:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1078:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1078:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1089:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1089:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1074:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1074:3:1"
																		},
																		"nativeSrc": "1074:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1074:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1061:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1061:12:1"
																},
																"nativeSrc": "1061:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1061:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1051:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1051:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "845:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "890:9:1",
														"nodeType": "YulTypedName",
														"src": "890:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "901:7:1",
														"nodeType": "YulTypedName",
														"src": "901:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "913:6:1",
														"nodeType": "YulTypedName",
														"src": "913:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "921:6:1",
														"nodeType": "YulTypedName",
														"src": "921:6:1",
														"type": ""
													}
												],
												"src": "845:254:1"
											},
											{
												"body": {
													"nativeSrc": "1199:92:1",
													"nodeType": "YulBlock",
													"src": "1199:92:1",
													"statements": [
														{
															"nativeSrc": "1209:26:1",
															"nodeType": "YulAssignment",
															"src": "1209:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1221:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1221:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1232:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1217:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1217:3:1"
																},
																"nativeSrc": "1217:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1217:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1209:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1209:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1251:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1251:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1276:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1276:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1269:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1269:6:1"
																				},
																				"nativeSrc": "1269:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1269:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1262:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1262:6:1"
																		},
																		"nativeSrc": "1262:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1262:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1244:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:1"
																},
																"nativeSrc": "1244:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1244:41:1"
															},
															"nativeSrc": "1244:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1244:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1104:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1168:9:1",
														"nodeType": "YulTypedName",
														"src": "1168:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1179:6:1",
														"nodeType": "YulTypedName",
														"src": "1179:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1190:4:1",
														"nodeType": "YulTypedName",
														"src": "1190:4:1",
														"type": ""
													}
												],
												"src": "1104:187:1"
											},
											{
												"body": {
													"nativeSrc": "1397:76:1",
													"nodeType": "YulBlock",
													"src": "1397:76:1",
													"statements": [
														{
															"nativeSrc": "1407:26:1",
															"nodeType": "YulAssignment",
															"src": "1407:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1419:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1419:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1430:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1430:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1415:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1415:3:1"
																},
																"nativeSrc": "1415:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1415:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1407:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1407:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1449:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1449:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1460:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nativeSrc": "1442:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1442:25:1"
															},
															"nativeSrc": "1442:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1442:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1296:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:1",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1377:6:1",
														"nodeType": "YulTypedName",
														"src": "1377:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1388:4:1",
														"nodeType": "YulTypedName",
														"src": "1388:4:1",
														"type": ""
													}
												],
												"src": "1296:177:1"
											},
											{
												"body": {
													"nativeSrc": "1582:224:1",
													"nodeType": "YulBlock",
													"src": "1582:224:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1628:16:1",
																"nodeType": "YulBlock",
																"src": "1628:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1637:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1637:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1640:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1630:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1630:6:1"
																			},
																			"nativeSrc": "1630:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1630:12:1"
																		},
																		"nativeSrc": "1630:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1603:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1603:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1612:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1612:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1599:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1599:3:1"
																		},
																		"nativeSrc": "1599:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1599:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1624:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1624:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1595:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1595:3:1"
																},
																"nativeSrc": "1595:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1595:32:1"
															},
															"nativeSrc": "1592:52:1",
															"nodeType": "YulIf",
															"src": "1592:52:1"
														},
														{
															"nativeSrc": "1653:39:1",
															"nodeType": "YulAssignment",
															"src": "1653:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1682:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1682:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1663:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1663:18:1"
																},
																"nativeSrc": "1663:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1663:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1653:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:1"
																}
															]
														},
														{
															"nativeSrc": "1701:48:1",
															"nodeType": "YulAssignment",
															"src": "1701:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1734:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1745:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1730:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nativeSrc": "1730:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1711:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1711:18:1"
																},
																"nativeSrc": "1711:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1711:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1701:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1701:6:1"
																}
															]
														},
														{
															"nativeSrc": "1758:42:1",
															"nodeType": "YulAssignment",
															"src": "1758:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1785:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1785:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1796:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1796:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1781:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:1"
																		},
																		"nativeSrc": "1781:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1768:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1768:12:1"
																},
																"nativeSrc": "1768:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1768:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1758:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1478:328:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1532:9:1",
														"nodeType": "YulTypedName",
														"src": "1532:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1543:7:1",
														"nodeType": "YulTypedName",
														"src": "1543:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1555:6:1",
														"nodeType": "YulTypedName",
														"src": "1555:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1563:6:1",
														"nodeType": "YulTypedName",
														"src": "1563:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1571:6:1",
														"nodeType": "YulTypedName",
														"src": "1571:6:1",
														"type": ""
													}
												],
												"src": "1478:328:1"
											},
											{
												"body": {
													"nativeSrc": "1908:87:1",
													"nodeType": "YulBlock",
													"src": "1908:87:1",
													"statements": [
														{
															"nativeSrc": "1918:26:1",
															"nodeType": "YulAssignment",
															"src": "1918:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1930:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1930:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1941:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1941:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1926:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1926:3:1"
																},
																"nativeSrc": "1926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1926:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1960:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1960:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1975:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1983:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1983:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1971:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1971:3:1"
																		},
																		"nativeSrc": "1971:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1971:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1953:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1953:6:1"
																},
																"nativeSrc": "1953:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1953:36:1"
															},
															"nativeSrc": "1953:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1953:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1811:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1877:9:1",
														"nodeType": "YulTypedName",
														"src": "1877:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1888:6:1",
														"nodeType": "YulTypedName",
														"src": "1888:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1899:4:1",
														"nodeType": "YulTypedName",
														"src": "1899:4:1",
														"type": ""
													}
												],
												"src": "1811:184:1"
											},
											{
												"body": {
													"nativeSrc": "2101:76:1",
													"nodeType": "YulBlock",
													"src": "2101:76:1",
													"statements": [
														{
															"nativeSrc": "2111:26:1",
															"nodeType": "YulAssignment",
															"src": "2111:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2123:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2123:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2134:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2119:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2119:3:1"
																},
																"nativeSrc": "2119:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2119:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2111:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2111:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2153:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2153:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2164:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2164:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2146:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:1"
																},
																"nativeSrc": "2146:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2146:25:1"
															},
															"nativeSrc": "2146:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "2146:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2000:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2070:9:1",
														"nodeType": "YulTypedName",
														"src": "2070:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2081:6:1",
														"nodeType": "YulTypedName",
														"src": "2081:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2092:4:1",
														"nodeType": "YulTypedName",
														"src": "2092:4:1",
														"type": ""
													}
												],
												"src": "2000:177:1"
											},
											{
												"body": {
													"nativeSrc": "2252:110:1",
													"nodeType": "YulBlock",
													"src": "2252:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2298:16:1",
																"nodeType": "YulBlock",
																"src": "2298:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2307:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2307:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2310:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2310:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2300:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2300:6:1"
																			},
																			"nativeSrc": "2300:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2300:12:1"
																		},
																		"nativeSrc": "2300:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2300:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2273:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2273:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2282:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2282:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2269:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:1"
																		},
																		"nativeSrc": "2269:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2269:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2294:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2294:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2265:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2265:3:1"
																},
																"nativeSrc": "2265:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2265:32:1"
															},
															"nativeSrc": "2262:52:1",
															"nodeType": "YulIf",
															"src": "2262:52:1"
														},
														{
															"nativeSrc": "2323:33:1",
															"nodeType": "YulAssignment",
															"src": "2323:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2346:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2346:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2333:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2333:12:1"
																},
																"nativeSrc": "2333:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2333:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2323:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2182:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2218:9:1",
														"nodeType": "YulTypedName",
														"src": "2218:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2229:7:1",
														"nodeType": "YulTypedName",
														"src": "2229:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2241:6:1",
														"nodeType": "YulTypedName",
														"src": "2241:6:1",
														"type": ""
													}
												],
												"src": "2182:180:1"
											},
											{
												"body": {
													"nativeSrc": "2437:116:1",
													"nodeType": "YulBlock",
													"src": "2437:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2483:16:1",
																"nodeType": "YulBlock",
																"src": "2483:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2492:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2492:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2495:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2495:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2485:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2485:6:1"
																			},
																			"nativeSrc": "2485:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2485:12:1"
																		},
																		"nativeSrc": "2485:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2485:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2458:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2458:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2467:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2454:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2454:3:1"
																		},
																		"nativeSrc": "2454:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2454:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2479:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2479:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2450:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2450:3:1"
																},
																"nativeSrc": "2450:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2450:32:1"
															},
															"nativeSrc": "2447:52:1",
															"nodeType": "YulIf",
															"src": "2447:52:1"
														},
														{
															"nativeSrc": "2508:39:1",
															"nodeType": "YulAssignment",
															"src": "2508:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2537:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2537:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2518:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2518:18:1"
																},
																"nativeSrc": "2518:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2518:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2508:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2508:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2367:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:1",
														"nodeType": "YulTypedName",
														"src": "2403:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2414:7:1",
														"nodeType": "YulTypedName",
														"src": "2414:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2426:6:1",
														"nodeType": "YulTypedName",
														"src": "2426:6:1",
														"type": ""
													}
												],
												"src": "2367:186:1"
											},
											{
												"body": {
													"nativeSrc": "2915:902:1",
													"nodeType": "YulBlock",
													"src": "2915:902:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2947:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2947:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2959:3:1",
																						"nodeType": "YulLiteral",
																						"src": "2959:3:1",
																						"type": "",
																						"value": "248"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2964:3:1",
																						"nodeType": "YulLiteral",
																						"src": "2964:3:1",
																						"type": "",
																						"value": "255"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2955:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2955:3:1"
																				},
																				"nativeSrc": "2955:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2955:13:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2943:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:1"
																		},
																		"nativeSrc": "2943:26:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:26:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2925:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2925:6:1"
																},
																"nativeSrc": "2925:45:1",
																"nodeType": "YulFunctionCall",
																"src": "2925:45:1"
															},
															"nativeSrc": "2925:45:1",
															"nodeType": "YulExpressionStatement",
															"src": "2925:45:1"
														},
														{
															"nativeSrc": "2979:12:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2979:12:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2989:2:1",
																"nodeType": "YulLiteral",
																"src": "2989:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2983:2:1",
																	"nodeType": "YulTypedName",
																	"src": "2983:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3011:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3011:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3022:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3022:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3007:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3007:3:1"
																		},
																		"nativeSrc": "3007:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3007:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3027:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3027:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3000:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3000:6:1"
																},
																"nativeSrc": "3000:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3000:31:1"
															},
															"nativeSrc": "3000:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3000:31:1"
														},
														{
															"nativeSrc": "3040:60:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3040:60:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3072:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3072:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3084:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3084:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3095:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3095:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3080:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3080:3:1"
																		},
																		"nativeSrc": "3080:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3080:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3054:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3054:17:1"
																},
																"nativeSrc": "3054:46:1",
																"nodeType": "YulFunctionCall",
																"src": "3054:46:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3044:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3044:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3120:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3120:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3131:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3131:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3116:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3116:3:1"
																		},
																		"nativeSrc": "3116:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3116:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "3140:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3140:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3148:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3136:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3136:3:1"
																		},
																		"nativeSrc": "3136:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3136:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3109:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3109:6:1"
																},
																"nativeSrc": "3109:50:1",
																"nodeType": "YulFunctionCall",
																"src": "3109:50:1"
															},
															"nativeSrc": "3109:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "3109:50:1"
														},
														{
															"nativeSrc": "3168:47:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3168:47:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3200:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3200:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "3208:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3208:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3182:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3182:17:1"
																},
																"nativeSrc": "3182:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3182:33:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "3172:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3172:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3235:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3235:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3246:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3246:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3231:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:1"
																		},
																		"nativeSrc": "3231:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3231:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3251:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3251:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3224:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:1"
																},
																"nativeSrc": "3224:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3224:34:1"
															},
															"nativeSrc": "3224:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3224:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3278:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3278:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3289:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3289:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3274:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:1"
																		},
																		"nativeSrc": "3274:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3274:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "3299:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3299:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3315:3:1",
																								"nodeType": "YulLiteral",
																								"src": "3315:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3320:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3320:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3311:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3311:3:1"
																						},
																						"nativeSrc": "3311:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3311:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3324:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3324:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3307:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3307:3:1"
																				},
																				"nativeSrc": "3307:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3307:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3295:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3295:3:1"
																		},
																		"nativeSrc": "3295:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3295:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3267:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3267:6:1"
																},
																"nativeSrc": "3267:61:1",
																"nodeType": "YulFunctionCall",
																"src": "3267:61:1"
															},
															"nativeSrc": "3267:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "3267:61:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3348:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3348:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3359:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3359:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3344:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3344:3:1"
																		},
																		"nativeSrc": "3344:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:19:1"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "3365:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3365:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3337:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:1"
																},
																"nativeSrc": "3337:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3337:35:1"
															},
															"nativeSrc": "3337:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "3337:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3392:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3392:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3403:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3403:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3388:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3388:3:1"
																		},
																		"nativeSrc": "3388:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3388:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "3413:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3413:6:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3409:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:1"
																		},
																		"nativeSrc": "3409:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3409:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3381:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3381:6:1"
																},
																"nativeSrc": "3381:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3381:51:1"
															},
															"nativeSrc": "3381:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3381:51:1"
														},
														{
															"nativeSrc": "3441:17:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3441:17:1",
															"value": {
																"name": "tail_2",
																"nativeSrc": "3452:6:1",
																"nodeType": "YulIdentifier",
																"src": "3452:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "3445:3:1",
																	"nodeType": "YulTypedName",
																	"src": "3445:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3467:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3467:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3487:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3487:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3481:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3481:5:1"
																},
																"nativeSrc": "3481:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3481:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3471:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3471:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nativeSrc": "3510:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3510:6:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3518:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3518:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3503:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3503:6:1"
																},
																"nativeSrc": "3503:22:1",
																"nodeType": "YulFunctionCall",
																"src": "3503:22:1"
															},
															"nativeSrc": "3503:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "3503:22:1"
														},
														{
															"nativeSrc": "3534:22:1",
															"nodeType": "YulAssignment",
															"src": "3534:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nativeSrc": "3545:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3545:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3553:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3541:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3541:3:1"
																},
																"nativeSrc": "3541:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3541:15:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3534:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3534:3:1"
																}
															]
														},
														{
															"nativeSrc": "3565:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3565:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "3583:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3583:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3591:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3591:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:1"
																},
																"nativeSrc": "3579:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3579:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3569:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3569:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3603:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3603:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3612:1:1",
																"nodeType": "YulLiteral",
																"src": "3612:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3607:1:1",
																	"nodeType": "YulTypedName",
																	"src": "3607:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3671:120:1",
																"nodeType": "YulBlock",
																"src": "3671:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3692:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3692:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "3703:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "3703:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3697:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3697:5:1"
																					},
																					"nativeSrc": "3697:13:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3697:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3685:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3685:6:1"
																			},
																			"nativeSrc": "3685:26:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3685:26:1"
																		},
																		"nativeSrc": "3685:26:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3685:26:1"
																	},
																	{
																		"nativeSrc": "3724:19:1",
																		"nodeType": "YulAssignment",
																		"src": "3724:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3735:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3735:3:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3740:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3740:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3731:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3731:3:1"
																			},
																			"nativeSrc": "3731:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3731:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3724:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3724:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3756:25:1",
																		"nodeType": "YulAssignment",
																		"src": "3756:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3770:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "3770:6:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3778:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "3778:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3766:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3766:3:1"
																			},
																			"nativeSrc": "3766:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3766:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3756:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3756:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3633:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3633:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3636:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3636:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3630:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3630:2:1"
																},
																"nativeSrc": "3630:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3630:13:1"
															},
															"nativeSrc": "3622:169:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3644:18:1",
																"nodeType": "YulBlock",
																"src": "3644:18:1",
																"statements": [
																	{
																		"nativeSrc": "3646:14:1",
																		"nodeType": "YulAssignment",
																		"src": "3646:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3655:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "3655:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3658:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3658:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3651:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3651:3:1"
																			},
																			"nativeSrc": "3651:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3651:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3646:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "3646:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3626:3:1",
																"nodeType": "YulBlock",
																"src": "3626:3:1",
																"statements": []
															},
															"src": "3622:169:1"
														},
														{
															"nativeSrc": "3800:11:1",
															"nodeType": "YulAssignment",
															"src": "3800:11:1",
															"value": {
																"name": "pos",
																"nativeSrc": "3808:3:1",
																"nodeType": "YulIdentifier",
																"src": "3808:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3800:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3800:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "2558:1259:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2836:9:1",
														"nodeType": "YulTypedName",
														"src": "2836:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2847:6:1",
														"nodeType": "YulTypedName",
														"src": "2847:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2855:6:1",
														"nodeType": "YulTypedName",
														"src": "2855:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2863:6:1",
														"nodeType": "YulTypedName",
														"src": "2863:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2871:6:1",
														"nodeType": "YulTypedName",
														"src": "2871:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2879:6:1",
														"nodeType": "YulTypedName",
														"src": "2879:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2887:6:1",
														"nodeType": "YulTypedName",
														"src": "2887:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2895:6:1",
														"nodeType": "YulTypedName",
														"src": "2895:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2906:4:1",
														"nodeType": "YulTypedName",
														"src": "2906:4:1",
														"type": ""
													}
												],
												"src": "2558:1259:1"
											},
											{
												"body": {
													"nativeSrc": "3923:102:1",
													"nodeType": "YulBlock",
													"src": "3923:102:1",
													"statements": [
														{
															"nativeSrc": "3933:26:1",
															"nodeType": "YulAssignment",
															"src": "3933:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3945:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3945:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3956:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3956:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3941:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3941:3:1"
																},
																"nativeSrc": "3941:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3941:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3933:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3933:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3975:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3975:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3990:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3990:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4006:3:1",
																								"nodeType": "YulLiteral",
																								"src": "4006:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4011:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4011:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4002:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4002:3:1"
																						},
																						"nativeSrc": "4002:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4002:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4015:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4015:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3998:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3998:3:1"
																				},
																				"nativeSrc": "3998:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3998:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3986:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3986:3:1"
																		},
																		"nativeSrc": "3986:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3986:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3968:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3968:6:1"
																},
																"nativeSrc": "3968:51:1",
																"nodeType": "YulFunctionCall",
																"src": "3968:51:1"
															},
															"nativeSrc": "3968:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "3968:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3822:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:1",
														"nodeType": "YulTypedName",
														"src": "3892:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3903:6:1",
														"nodeType": "YulTypedName",
														"src": "3903:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													}
												],
												"src": "3822:203:1"
											},
											{
												"body": {
													"nativeSrc": "4200:523:1",
													"nodeType": "YulBlock",
													"src": "4200:523:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4247:16:1",
																"nodeType": "YulBlock",
																"src": "4247:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4256:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4256:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4259:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4259:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4249:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4249:6:1"
																			},
																			"nativeSrc": "4249:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4249:12:1"
																		},
																		"nativeSrc": "4249:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4249:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4221:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4221:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4230:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4217:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:1"
																		},
																		"nativeSrc": "4217:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4217:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4242:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4242:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4213:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:1"
																},
																"nativeSrc": "4213:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4213:33:1"
															},
															"nativeSrc": "4210:53:1",
															"nodeType": "YulIf",
															"src": "4210:53:1"
														},
														{
															"nativeSrc": "4272:39:1",
															"nodeType": "YulAssignment",
															"src": "4272:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4301:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4301:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4282:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4282:18:1"
																},
																"nativeSrc": "4282:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4282:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4272:6:1"
																}
															]
														},
														{
															"nativeSrc": "4320:48:1",
															"nodeType": "YulAssignment",
															"src": "4320:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4353:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4353:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4364:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4364:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:1"
																		},
																		"nativeSrc": "4349:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4330:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4330:18:1"
																},
																"nativeSrc": "4330:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4330:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4320:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4320:6:1"
																}
															]
														},
														{
															"nativeSrc": "4377:42:1",
															"nodeType": "YulAssignment",
															"src": "4377:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4404:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4404:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4415:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4415:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4400:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4400:3:1"
																		},
																		"nativeSrc": "4400:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4400:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4387:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4387:12:1"
																},
																"nativeSrc": "4387:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4387:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4377:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4377:6:1"
																}
															]
														},
														{
															"nativeSrc": "4428:42:1",
															"nodeType": "YulAssignment",
															"src": "4428:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4455:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4455:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4466:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4466:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4451:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4451:3:1"
																		},
																		"nativeSrc": "4451:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4451:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4438:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4438:12:1"
																},
																"nativeSrc": "4438:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4438:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4428:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4428:6:1"
																}
															]
														},
														{
															"nativeSrc": "4479:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4479:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4509:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4509:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4520:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4520:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4505:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4505:3:1"
																		},
																		"nativeSrc": "4505:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4505:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4492:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4492:12:1"
																},
																"nativeSrc": "4492:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4492:33:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4483:5:1",
																	"nodeType": "YulTypedName",
																	"src": "4483:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4573:16:1",
																"nodeType": "YulBlock",
																"src": "4573:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4582:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4582:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4585:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4585:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4575:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4575:6:1"
																			},
																			"nativeSrc": "4575:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4575:12:1"
																		},
																		"nativeSrc": "4575:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4575:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4547:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4547:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4558:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4558:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4565:4:1",
																						"nodeType": "YulLiteral",
																						"src": "4565:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4554:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4554:3:1"
																				},
																				"nativeSrc": "4554:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4554:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4544:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4544:2:1"
																		},
																		"nativeSrc": "4544:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4544:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4537:6:1"
																},
																"nativeSrc": "4537:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4537:35:1"
															},
															"nativeSrc": "4534:55:1",
															"nodeType": "YulIf",
															"src": "4534:55:1"
														},
														{
															"nativeSrc": "4598:15:1",
															"nodeType": "YulAssignment",
															"src": "4598:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "4608:5:1",
																"nodeType": "YulIdentifier",
																"src": "4608:5:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4598:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4598:6:1"
																}
															]
														},
														{
															"nativeSrc": "4622:43:1",
															"nodeType": "YulAssignment",
															"src": "4622:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4649:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4649:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4660:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4660:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4645:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4645:3:1"
																		},
																		"nativeSrc": "4645:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4645:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4632:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4632:12:1"
																},
																"nativeSrc": "4632:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4632:33:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "4622:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4622:6:1"
																}
															]
														},
														{
															"nativeSrc": "4674:43:1",
															"nodeType": "YulAssignment",
															"src": "4674:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4701:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4712:3:1",
																				"nodeType": "YulLiteral",
																				"src": "4712:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4697:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:1"
																		},
																		"nativeSrc": "4697:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4697:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4684:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4684:12:1"
																},
																"nativeSrc": "4684:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4684:33:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "4674:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4674:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "4030:693:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4118:9:1",
														"nodeType": "YulTypedName",
														"src": "4118:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4129:7:1",
														"nodeType": "YulTypedName",
														"src": "4129:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4141:6:1",
														"nodeType": "YulTypedName",
														"src": "4141:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4149:6:1",
														"nodeType": "YulTypedName",
														"src": "4149:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4157:6:1",
														"nodeType": "YulTypedName",
														"src": "4157:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4165:6:1",
														"nodeType": "YulTypedName",
														"src": "4165:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4173:6:1",
														"nodeType": "YulTypedName",
														"src": "4173:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "4181:6:1",
														"nodeType": "YulTypedName",
														"src": "4181:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "4189:6:1",
														"nodeType": "YulTypedName",
														"src": "4189:6:1",
														"type": ""
													}
												],
												"src": "4030:693:1"
											},
											{
												"body": {
													"nativeSrc": "4815:173:1",
													"nodeType": "YulBlock",
													"src": "4815:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4861:16:1",
																"nodeType": "YulBlock",
																"src": "4861:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4870:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4870:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4873:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4863:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4863:6:1"
																			},
																			"nativeSrc": "4863:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4863:12:1"
																		},
																		"nativeSrc": "4863:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4863:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4836:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4836:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4845:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4845:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4832:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:1"
																		},
																		"nativeSrc": "4832:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4857:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4857:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4828:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4828:3:1"
																},
																"nativeSrc": "4828:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4828:32:1"
															},
															"nativeSrc": "4825:52:1",
															"nodeType": "YulIf",
															"src": "4825:52:1"
														},
														{
															"nativeSrc": "4886:39:1",
															"nodeType": "YulAssignment",
															"src": "4886:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4915:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4915:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4896:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4896:18:1"
																},
																"nativeSrc": "4896:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4896:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4886:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4886:6:1"
																}
															]
														},
														{
															"nativeSrc": "4934:48:1",
															"nodeType": "YulAssignment",
															"src": "4934:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4967:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4967:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4978:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4978:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4963:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4963:3:1"
																		},
																		"nativeSrc": "4963:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4963:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4944:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4944:18:1"
																},
																"nativeSrc": "4944:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4944:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4934:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4728:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4773:9:1",
														"nodeType": "YulTypedName",
														"src": "4773:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4784:7:1",
														"nodeType": "YulTypedName",
														"src": "4784:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4796:6:1",
														"nodeType": "YulTypedName",
														"src": "4796:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4804:6:1",
														"nodeType": "YulTypedName",
														"src": "4804:6:1",
														"type": ""
													}
												],
												"src": "4728:260:1"
											},
											{
												"body": {
													"nativeSrc": "5048:325:1",
													"nodeType": "YulBlock",
													"src": "5048:325:1",
													"statements": [
														{
															"nativeSrc": "5058:22:1",
															"nodeType": "YulAssignment",
															"src": "5058:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5072:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5072:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5075:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5075:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5068:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5068:3:1"
																},
																"nativeSrc": "5068:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5068:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5058:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5058:6:1"
																}
															]
														},
														{
															"nativeSrc": "5089:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5089:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5119:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5119:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5125:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5125:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5115:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5115:3:1"
																},
																"nativeSrc": "5115:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5115:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5093:18:1",
																	"nodeType": "YulTypedName",
																	"src": "5093:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5166:31:1",
																"nodeType": "YulBlock",
																"src": "5166:31:1",
																"statements": [
																	{
																		"nativeSrc": "5168:27:1",
																		"nodeType": "YulAssignment",
																		"src": "5168:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5182:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5182:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5190:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5190:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5178:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5178:3:1"
																			},
																			"nativeSrc": "5178:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5178:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5168:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5168:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5146:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "5146:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5139:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5139:6:1"
																},
																"nativeSrc": "5139:26:1",
																"nodeType": "YulFunctionCall",
																"src": "5139:26:1"
															},
															"nativeSrc": "5136:61:1",
															"nodeType": "YulIf",
															"src": "5136:61:1"
														},
														{
															"body": {
																"nativeSrc": "5256:111:1",
																"nodeType": "YulBlock",
																"src": "5256:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5277:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5277:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5284:3:1",
																							"nodeType": "YulLiteral",
																							"src": "5284:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5289:10:1",
																							"nodeType": "YulLiteral",
																							"src": "5289:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5280:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5280:3:1"
																					},
																					"nativeSrc": "5280:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5280:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5270:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5270:6:1"
																			},
																			"nativeSrc": "5270:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5270:31:1"
																		},
																		"nativeSrc": "5270:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5270:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5321:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5321:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5324:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5324:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5314:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5314:6:1"
																			},
																			"nativeSrc": "5314:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5314:15:1"
																		},
																		"nativeSrc": "5314:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5314:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5349:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5352:4:1",
																					"nodeType": "YulLiteral",
																					"src": "5352:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5342:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5342:6:1"
																			},
																			"nativeSrc": "5342:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5342:15:1"
																		},
																		"nativeSrc": "5342:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5342:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5212:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "5212:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5235:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5235:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5243:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5243:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5232:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5232:2:1"
																		},
																		"nativeSrc": "5232:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5232:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5209:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5209:2:1"
																},
																"nativeSrc": "5209:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5209:38:1"
															},
															"nativeSrc": "5206:161:1",
															"nodeType": "YulIf",
															"src": "5206:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4993:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5028:4:1",
														"nodeType": "YulTypedName",
														"src": "5028:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5037:6:1",
														"nodeType": "YulTypedName",
														"src": "5037:6:1",
														"type": ""
													}
												],
												"src": "4993:380:1"
											},
											{
												"body": {
													"nativeSrc": "5410:95:1",
													"nodeType": "YulBlock",
													"src": "5410:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5427:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5427:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5434:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5434:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5439:10:1",
																				"nodeType": "YulLiteral",
																				"src": "5439:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5430:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5430:3:1"
																		},
																		"nativeSrc": "5430:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5430:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5420:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5420:6:1"
																},
																"nativeSrc": "5420:31:1",
																"nodeType": "YulFunctionCall",
																"src": "5420:31:1"
															},
															"nativeSrc": "5420:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "5420:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5467:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5467:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5470:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5470:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5460:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5460:6:1"
																},
																"nativeSrc": "5460:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5460:15:1"
															},
															"nativeSrc": "5460:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5460:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5491:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5491:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5494:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5494:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5484:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5484:6:1"
																},
																"nativeSrc": "5484:15:1",
																"nodeType": "YulFunctionCall",
																"src": "5484:15:1"
															},
															"nativeSrc": "5484:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "5484:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "5378:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "5378:127:1"
											},
											{
												"body": {
													"nativeSrc": "5751:350:1",
													"nodeType": "YulBlock",
													"src": "5751:350:1",
													"statements": [
														{
															"nativeSrc": "5761:27:1",
															"nodeType": "YulAssignment",
															"src": "5761:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5773:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5773:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5784:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5784:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5769:3:1"
																},
																"nativeSrc": "5769:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5769:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5761:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5761:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5804:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5804:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5815:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5815:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5797:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5797:6:1"
																},
																"nativeSrc": "5797:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5797:25:1"
															},
															"nativeSrc": "5797:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5797:25:1"
														},
														{
															"nativeSrc": "5831:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5831:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5849:3:1",
																				"nodeType": "YulLiteral",
																				"src": "5849:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5854:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5854:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5845:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5845:3:1"
																		},
																		"nativeSrc": "5845:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5845:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5858:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5858:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5841:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5841:3:1"
																},
																"nativeSrc": "5841:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5841:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5835:2:1",
																	"nodeType": "YulTypedName",
																	"src": "5835:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5880:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5880:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5891:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5891:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5876:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5876:3:1"
																		},
																		"nativeSrc": "5876:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5876:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5900:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5900:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5908:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5908:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5896:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5896:3:1"
																		},
																		"nativeSrc": "5896:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5896:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5869:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:1"
																},
																"nativeSrc": "5869:43:1",
																"nodeType": "YulFunctionCall",
																"src": "5869:43:1"
															},
															"nativeSrc": "5869:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "5869:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5932:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5932:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5943:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5943:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5928:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5928:3:1"
																		},
																		"nativeSrc": "5928:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5928:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5952:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5952:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "5960:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5960:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5948:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5948:3:1"
																		},
																		"nativeSrc": "5948:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5948:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5921:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:1"
																},
																"nativeSrc": "5921:43:1",
																"nodeType": "YulFunctionCall",
																"src": "5921:43:1"
															},
															"nativeSrc": "5921:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "5921:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5984:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5984:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5995:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5995:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5980:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5980:3:1"
																		},
																		"nativeSrc": "5980:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5980:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "6000:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6000:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5973:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5973:6:1"
																},
																"nativeSrc": "5973:34:1",
																"nodeType": "YulFunctionCall",
																"src": "5973:34:1"
															},
															"nativeSrc": "5973:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "5973:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6027:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6027:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6038:3:1",
																				"nodeType": "YulLiteral",
																				"src": "6038:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6023:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6023:3:1"
																		},
																		"nativeSrc": "6023:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6023:19:1"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "6044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6044:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6016:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6016:6:1"
																},
																"nativeSrc": "6016:35:1",
																"nodeType": "YulFunctionCall",
																"src": "6016:35:1"
															},
															"nativeSrc": "6016:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "6016:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6071:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6071:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6082:3:1",
																				"nodeType": "YulLiteral",
																				"src": "6082:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6067:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6067:3:1"
																		},
																		"nativeSrc": "6067:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6067:19:1"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "6088:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6088:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6060:6:1"
																},
																"nativeSrc": "6060:35:1",
																"nodeType": "YulFunctionCall",
																"src": "6060:35:1"
															},
															"nativeSrc": "6060:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "6060:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5510:591:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5680:9:1",
														"nodeType": "YulTypedName",
														"src": "5680:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5691:6:1",
														"nodeType": "YulTypedName",
														"src": "5691:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5699:6:1",
														"nodeType": "YulTypedName",
														"src": "5699:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5707:6:1",
														"nodeType": "YulTypedName",
														"src": "5707:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5715:6:1",
														"nodeType": "YulTypedName",
														"src": "5715:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5723:6:1",
														"nodeType": "YulTypedName",
														"src": "5723:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5731:6:1",
														"nodeType": "YulTypedName",
														"src": "5731:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5742:4:1",
														"nodeType": "YulTypedName",
														"src": "5742:4:1",
														"type": ""
													}
												],
												"src": "5510:591:1"
											},
											{
												"body": {
													"nativeSrc": "6235:175:1",
													"nodeType": "YulBlock",
													"src": "6235:175:1",
													"statements": [
														{
															"nativeSrc": "6245:26:1",
															"nodeType": "YulAssignment",
															"src": "6245:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6257:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6257:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6268:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6268:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6253:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6253:3:1"
																},
																"nativeSrc": "6253:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6253:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6245:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6245:4:1"
																}
															]
														},
														{
															"nativeSrc": "6280:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6280:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6298:3:1",
																				"nodeType": "YulLiteral",
																				"src": "6298:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6303:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6303:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6294:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6294:3:1"
																		},
																		"nativeSrc": "6294:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6294:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6307:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6307:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6290:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6290:3:1"
																},
																"nativeSrc": "6290:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6290:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6284:2:1",
																	"nodeType": "YulTypedName",
																	"src": "6284:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6325:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6325:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6340:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6340:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6348:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6348:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6336:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6336:3:1"
																		},
																		"nativeSrc": "6336:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6336:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6318:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6318:6:1"
																},
																"nativeSrc": "6318:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6318:34:1"
															},
															"nativeSrc": "6318:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6318:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6372:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6372:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6383:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6383:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6368:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6368:3:1"
																		},
																		"nativeSrc": "6368:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6368:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6392:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6392:6:1"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6400:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6400:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6388:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:1"
																		},
																		"nativeSrc": "6388:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6388:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6361:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:1"
																},
																"nativeSrc": "6361:43:1",
																"nodeType": "YulFunctionCall",
																"src": "6361:43:1"
															},
															"nativeSrc": "6361:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "6361:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "6106:304:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6196:9:1",
														"nodeType": "YulTypedName",
														"src": "6196:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6207:6:1",
														"nodeType": "YulTypedName",
														"src": "6207:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6215:6:1",
														"nodeType": "YulTypedName",
														"src": "6215:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6226:4:1",
														"nodeType": "YulTypedName",
														"src": "6226:4:1",
														"type": ""
													}
												],
												"src": "6106:304:1"
											},
											{
												"body": {
													"nativeSrc": "6572:188:1",
													"nodeType": "YulBlock",
													"src": "6572:188:1",
													"statements": [
														{
															"nativeSrc": "6582:26:1",
															"nodeType": "YulAssignment",
															"src": "6582:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6594:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6594:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6605:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6605:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6590:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6590:3:1"
																},
																"nativeSrc": "6590:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6590:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6582:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6582:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6624:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6624:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6639:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6639:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6655:3:1",
																								"nodeType": "YulLiteral",
																								"src": "6655:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6660:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6660:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6651:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6651:3:1"
																						},
																						"nativeSrc": "6651:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6651:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6664:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6664:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6647:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6647:3:1"
																				},
																				"nativeSrc": "6647:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6647:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6635:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:1"
																		},
																		"nativeSrc": "6635:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6635:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6617:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6617:6:1"
																},
																"nativeSrc": "6617:51:1",
																"nodeType": "YulFunctionCall",
																"src": "6617:51:1"
															},
															"nativeSrc": "6617:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "6617:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6688:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6688:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6699:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6699:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6684:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6684:3:1"
																		},
																		"nativeSrc": "6684:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6684:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6704:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6704:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6677:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6677:6:1"
																},
																"nativeSrc": "6677:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6677:34:1"
															},
															"nativeSrc": "6677:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6677:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6731:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6731:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6742:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6742:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6727:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:1"
																		},
																		"nativeSrc": "6727:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6747:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6747:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6720:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6720:6:1"
																},
																"nativeSrc": "6720:34:1",
																"nodeType": "YulFunctionCall",
																"src": "6720:34:1"
															},
															"nativeSrc": "6720:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "6720:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6415:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6525:9:1",
														"nodeType": "YulTypedName",
														"src": "6525:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6536:6:1",
														"nodeType": "YulTypedName",
														"src": "6536:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6544:6:1",
														"nodeType": "YulTypedName",
														"src": "6544:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6552:6:1",
														"nodeType": "YulTypedName",
														"src": "6552:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6563:4:1",
														"nodeType": "YulTypedName",
														"src": "6563:4:1",
														"type": ""
													}
												],
												"src": "6415:345:1"
											},
											{
												"body": {
													"nativeSrc": "6813:174:1",
													"nodeType": "YulBlock",
													"src": "6813:174:1",
													"statements": [
														{
															"nativeSrc": "6823:16:1",
															"nodeType": "YulAssignment",
															"src": "6823:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6834:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6834:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6837:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6837:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6830:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6830:3:1"
																},
																"nativeSrc": "6830:9:1",
																"nodeType": "YulFunctionCall",
																"src": "6830:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6823:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6823:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6870:111:1",
																"nodeType": "YulBlock",
																"src": "6870:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6891:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6891:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6898:3:1",
																							"nodeType": "YulLiteral",
																							"src": "6898:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6903:10:1",
																							"nodeType": "YulLiteral",
																							"src": "6903:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6894:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6894:3:1"
																					},
																					"nativeSrc": "6894:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6894:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6884:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6884:6:1"
																			},
																			"nativeSrc": "6884:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6884:31:1"
																		},
																		"nativeSrc": "6884:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6884:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6935:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6935:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6938:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6938:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6928:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6928:6:1"
																			},
																			"nativeSrc": "6928:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6928:15:1"
																		},
																		"nativeSrc": "6928:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6928:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6963:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6963:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6966:4:1",
																					"nodeType": "YulLiteral",
																					"src": "6966:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6956:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6956:6:1"
																			},
																			"nativeSrc": "6956:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6956:15:1"
																		},
																		"nativeSrc": "6956:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6956:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6854:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "6854:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6857:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6857:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6851:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6851:2:1"
																},
																"nativeSrc": "6851:10:1",
																"nodeType": "YulFunctionCall",
																"src": "6851:10:1"
															},
															"nativeSrc": "6848:133:1",
															"nodeType": "YulIf",
															"src": "6848:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6765:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6796:1:1",
														"nodeType": "YulTypedName",
														"src": "6796:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6799:1:1",
														"nodeType": "YulTypedName",
														"src": "6799:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6805:3:1",
														"nodeType": "YulTypedName",
														"src": "6805:3:1",
														"type": ""
													}
												],
												"src": "6765:222:1"
											},
											{
												"body": {
													"nativeSrc": "7205:276:1",
													"nodeType": "YulBlock",
													"src": "7205:276:1",
													"statements": [
														{
															"nativeSrc": "7215:27:1",
															"nodeType": "YulAssignment",
															"src": "7215:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7227:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7227:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7238:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7238:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7223:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7223:3:1"
																},
																"nativeSrc": "7223:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7223:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7215:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7215:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7258:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7258:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7269:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7269:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7251:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7251:6:1"
																},
																"nativeSrc": "7251:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7251:25:1"
															},
															"nativeSrc": "7251:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "7251:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7296:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7296:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7307:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7307:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7292:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7292:3:1"
																		},
																		"nativeSrc": "7292:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7292:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7312:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7312:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7285:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7285:6:1"
																},
																"nativeSrc": "7285:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7285:34:1"
															},
															"nativeSrc": "7285:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7285:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7339:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7339:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7350:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7350:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7335:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7335:3:1"
																		},
																		"nativeSrc": "7335:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7335:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7355:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7355:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7328:6:1"
																},
																"nativeSrc": "7328:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7328:34:1"
															},
															"nativeSrc": "7328:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7328:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7382:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7382:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7393:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7393:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7378:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7378:3:1"
																		},
																		"nativeSrc": "7378:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7378:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7398:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7398:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7371:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7371:6:1"
																},
																"nativeSrc": "7371:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7371:34:1"
															},
															"nativeSrc": "7371:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7371:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7425:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7425:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7436:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7436:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7421:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7421:3:1"
																		},
																		"nativeSrc": "7421:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7421:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "7446:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7446:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7462:3:1",
																								"nodeType": "YulLiteral",
																								"src": "7462:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7467:1:1",
																								"nodeType": "YulLiteral",
																								"src": "7467:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7458:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7458:3:1"
																						},
																						"nativeSrc": "7458:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7458:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7471:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7471:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7454:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7454:3:1"
																				},
																				"nativeSrc": "7454:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7454:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7442:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:1"
																		},
																		"nativeSrc": "7442:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7442:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7414:6:1"
																},
																"nativeSrc": "7414:61:1",
																"nodeType": "YulFunctionCall",
																"src": "7414:61:1"
															},
															"nativeSrc": "7414:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "7414:61:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "6992:489:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7142:9:1",
														"nodeType": "YulTypedName",
														"src": "7142:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7153:6:1",
														"nodeType": "YulTypedName",
														"src": "7153:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7161:6:1",
														"nodeType": "YulTypedName",
														"src": "7161:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7169:6:1",
														"nodeType": "YulTypedName",
														"src": "7169:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7177:6:1",
														"nodeType": "YulTypedName",
														"src": "7177:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7185:6:1",
														"nodeType": "YulTypedName",
														"src": "7185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7196:4:1",
														"nodeType": "YulTypedName",
														"src": "7196:4:1",
														"type": ""
													}
												],
												"src": "6992:489:1"
											},
											{
												"body": {
													"nativeSrc": "7667:217:1",
													"nodeType": "YulBlock",
													"src": "7667:217:1",
													"statements": [
														{
															"nativeSrc": "7677:27:1",
															"nodeType": "YulAssignment",
															"src": "7677:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7689:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7689:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7700:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7700:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7685:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7685:3:1"
																},
																"nativeSrc": "7685:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7685:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7677:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7677:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7720:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7720:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7731:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7731:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7713:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7713:6:1"
																},
																"nativeSrc": "7713:25:1",
																"nodeType": "YulFunctionCall",
																"src": "7713:25:1"
															},
															"nativeSrc": "7713:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "7713:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7758:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7758:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7769:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7769:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7754:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7754:3:1"
																		},
																		"nativeSrc": "7754:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7754:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7778:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7778:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7786:4:1",
																				"nodeType": "YulLiteral",
																				"src": "7786:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7774:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7774:3:1"
																		},
																		"nativeSrc": "7774:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7774:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7747:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7747:6:1"
																},
																"nativeSrc": "7747:45:1",
																"nodeType": "YulFunctionCall",
																"src": "7747:45:1"
															},
															"nativeSrc": "7747:45:1",
															"nodeType": "YulExpressionStatement",
															"src": "7747:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7812:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7812:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7823:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7823:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7808:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7808:3:1"
																		},
																		"nativeSrc": "7808:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7808:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7828:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7828:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7801:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7801:6:1"
																},
																"nativeSrc": "7801:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7801:34:1"
															},
															"nativeSrc": "7801:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7801:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7855:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7855:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7866:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7866:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7851:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7851:3:1"
																		},
																		"nativeSrc": "7851:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7851:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7871:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7871:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7844:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7844:6:1"
																},
																"nativeSrc": "7844:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7844:34:1"
															},
															"nativeSrc": "7844:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7844:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "7486:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7612:9:1",
														"nodeType": "YulTypedName",
														"src": "7612:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7623:6:1",
														"nodeType": "YulTypedName",
														"src": "7623:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7631:6:1",
														"nodeType": "YulTypedName",
														"src": "7631:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7639:6:1",
														"nodeType": "YulTypedName",
														"src": "7639:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7647:6:1",
														"nodeType": "YulTypedName",
														"src": "7647:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7658:4:1",
														"nodeType": "YulTypedName",
														"src": "7658:4:1",
														"type": ""
													}
												],
												"src": "7486:398:1"
											},
											{
												"body": {
													"nativeSrc": "7921:95:1",
													"nodeType": "YulBlock",
													"src": "7921:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7938:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7938:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7945:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7945:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7950:10:1",
																				"nodeType": "YulLiteral",
																				"src": "7950:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7941:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7941:3:1"
																		},
																		"nativeSrc": "7941:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7941:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7931:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7931:6:1"
																},
																"nativeSrc": "7931:31:1",
																"nodeType": "YulFunctionCall",
																"src": "7931:31:1"
															},
															"nativeSrc": "7931:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "7931:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7978:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7978:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7981:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7971:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7971:6:1"
																},
																"nativeSrc": "7971:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7971:15:1"
															},
															"nativeSrc": "7971:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7971:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8002:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8002:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8005:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8005:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7995:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:1"
																},
																"nativeSrc": "7995:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7995:15:1"
															},
															"nativeSrc": "7995:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7995:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7889:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7889:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1905": [
									{
										"length": 32,
										"start": 1833
									}
								],
								"1907": [
									{
										"length": 32,
										"start": 1791
									}
								],
								"1909": [
									{
										"length": 32,
										"start": 1749
									}
								],
								"1911": [
									{
										"length": 32,
										"start": 1914
									}
								],
								"1913": [
									{
										"length": 32,
										"start": 1954
									}
								],
								"1916": [
									{
										"length": 32,
										"start": 2271
									}
								],
								"1919": [
									{
										"length": 32,
										"start": 2316
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x173 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xE52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x396 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH2 0x1C0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x165 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x223 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF17 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x44E JUMP JUMPDEST PUSH2 0x151 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0xFAE JUMP JUMPDEST PUSH2 0x46A JUMP JUMPDEST PUSH2 0x165 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x101B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B0 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2D9 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x305 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x350 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x327 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x350 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x333 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x367 DUP2 DUP6 DUP6 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x380 DUP6 DUP3 DUP6 PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x38B DUP6 DUP6 DUP6 PUSH2 0x66C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x39F PUSH2 0x6C9 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3AC PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x3B6 DUP3 DUP3 PUSH2 0x81F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3C4 CALLER DUP3 PUSH2 0x853 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x3D8 PUSH0 PUSH2 0x887 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3E5 DUP3 CALLER DUP4 PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x3B6 DUP3 DUP3 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x36D JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x41D PUSH2 0x8D8 JUMP JUMPDEST PUSH2 0x425 PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2D9 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH0 CALLER PUSH2 0x367 DUP2 DUP6 DUP6 PUSH2 0x66C JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x4DE DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x538 DUP3 PUSH2 0x932 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x547 DUP3 DUP8 DUP8 DUP8 PUSH2 0x95E JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x599 DUP11 DUP11 DUP11 PUSH2 0x5DF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5AD PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x3C4 DUP2 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x5EC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x98A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x666 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x666 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x98A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x695 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x5EC DUP4 DUP4 DUP4 PUSH2 0xA5C JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x721 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x74B JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x39F PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x3B6 PUSH0 DUP4 DUP4 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH2 0x3B6 DUP3 PUSH0 DUP4 PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x39F PUSH32 0x0 PUSH1 0x6 PUSH2 0xB82 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x39F PUSH32 0x0 PUSH1 0x7 PUSH2 0xB82 JUMP JUMPDEST PUSH0 PUSH2 0x36D PUSH2 0x93E PUSH2 0x6C9 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x96E DUP9 DUP9 DUP9 DUP9 PUSH2 0xC2B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x97E DUP3 DUP3 PUSH2 0xCF3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x666 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA4E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA86 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x1084 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xAF6 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB12 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xB30 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB75 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0xB9C JUMPI PUSH2 0xB95 DUP4 PUSH2 0xDAB JUMP JUMPDEST SWAP1 POP PUSH2 0x36D JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xBA8 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBD4 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC1F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBF6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC1F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC02 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x36D JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xC64 JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xCE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCE0 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xCE9 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD06 JUMPI PUSH2 0xD06 PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD0F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD23 JUMPI PUSH2 0xD23 PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD41 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD55 JUMPI PUSH2 0xD55 PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0xD76 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD8A JUMPI PUSH2 0xD8A PUSH2 0x10A3 JUMP JUMPDEST SUB PUSH2 0x3B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x48A JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xDB7 DUP4 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x36D JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE33 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xE17 JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xE64 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE0F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE81 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE97 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEA0 DUP4 PUSH2 0xE6B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEC9 DUP5 PUSH2 0xE6B JUMP JUMPDEST SWAP3 POP PUSH2 0xED7 PUSH1 0x20 DUP6 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE64 DUP3 PUSH2 0xE6B JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH0 PUSH1 0x20 PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xF37 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xE0F JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xF49 DUP2 DUP11 PUSH2 0xE0F JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xF9C JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF80 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xFC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFCD DUP9 PUSH2 0xE6B JUMP JUMPDEST SWAP7 POP PUSH2 0xFDB PUSH1 0x20 DUP10 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xFFE JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x102C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1035 DUP4 PUSH2 0xE6B JUMP JUMPDEST SWAP2 POP PUSH2 0x1043 PUSH1 0x20 DUP5 ADD PUSH2 0xE6B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1060 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x107E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x36D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC JUMPI 0xE2 ORIGIN INVALID 0xBF 0xC0 0xC5 SELFDESTRUCT PUSH12 0xFC478C921B49F028B850D3AA DUP15 0xCE 0xBC 0x27 SLOAD SWAP11 DUP4 0xBC 0x1F 0xCB PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "80671:374:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67779:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;69998:186;;;;;;:::i;:::-;;:::i;:::-;;;1269:14:1;;1262:22;1244:41;;1232:2;1217:18;69998:186:0;1104:187:1;68849:97:0;68927:12;;68849:97;;;1442:25:1;;;1430:2;1415:18;68849:97:0;1296:177:1;70744:244:0;;;;;;:::i;:::-;;:::i;68707:82::-;;;68780:2;1953:36:1;;1941:2;1926:18;68707:82:0;1811:184:1;79292:112:0;;;:::i;80950:93::-;;;;;;:::i;:::-;;:::i;:::-;;79983:87;;;;;;:::i;:::-;;:::i;69004:116::-;;;;;;:::i;:::-;-1:-1:-1;;;;;69095:18:0;69069:7;69095:18;;;;;;;;;;;;69004:116;61586:101;;;:::i;80386:158::-;;;;;;:::i;:::-;;:::i;79042:143::-;;;;;;:::i;:::-;;:::i;38790:557::-;;;:::i;:::-;;;;;;;;;;;;;:::i;60931:85::-;61003:6;;60931:85;;-1:-1:-1;;;;;61003:6:0;;;3968:51:1;;3956:2;3941:18;60931:85:0;3822:203:1;67981:93:0;;;:::i;69315:178::-;;;;;;:::i;:::-;;:::i;78316:672::-;;;;;;:::i;:::-;;:::i;69551:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;69657:18:0;;;69631:7;69657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;69551:140;61836:215;;;;;;:::i;:::-;;:::i;67779:89::-;67824:13;67856:5;67849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67779:89;:::o;69998:186::-;70071:4;59191:10;70125:31;59191:10;70141:7;70150:5;70125:8;:31::i;:::-;70173:4;70166:11;;;69998:186;;;;;:::o;70744:244::-;70831:4;59191:10;70887:37;70903:4;59191:10;70918:5;70887:15;:37::i;:::-;70934:26;70944:4;70950:2;70954:5;70934:9;:26::i;:::-;-1:-1:-1;70977:4:0;;70744:244;-1:-1:-1;;;;70744:244:0:o;79292:112::-;79351:7;79377:20;:18;:20::i;:::-;79370:27;;79292:112;:::o;80950:93::-;60824:13;:11;:13::i;:::-;81019:17:::1;81025:2;81029:6;81019:5;:17::i;:::-;80950:93:::0;;:::o;79983:87::-;80037:26;59191:10;80057:5;80037;:26::i;:::-;79983:87;:::o;61586:101::-;60824:13;:11;:13::i;:::-;61650:30:::1;61677:1;61650:18;:30::i;:::-;61586:101::o:0;80386:158::-;80461:45;80477:7;59191:10;80500:5;80461:15;:45::i;:::-;80516:21;80522:7;80531:5;80516;:21::i;79042:143::-;-1:-1:-1;;;;;676:14:0;;79133:7;676:14;;;:7;:14;;;;;;79159:19;590:107;38790:557;38888:13;38915:18;38947:21;38982:15;39011:25;39050:12;39076:27;39179:13;:11;:13::i;:::-;39206:16;:14;:16::i;:::-;39314;;;39298:1;39314:16;;;;;;;;;-1:-1:-1;;;39128:212:0;;;-1:-1:-1;39128:212:0;;-1:-1:-1;39236:13:0;;-1:-1:-1;39271:4:0;;-1:-1:-1;39298:1:0;-1:-1:-1;39314:16:0;-1:-1:-1;39128:212:0;-1:-1:-1;38790:557:0:o;67981:93::-;68028:13;68060:7;68053:14;;;;;:::i;69315:178::-;69384:4;59191:10;69438:27;59191:10;69455:2;69459:5;69438:9;:27::i;78316:672::-;78537:8;78519:15;:26;78515:97;;;78568:33;;-1:-1:-1;;;78568:33:0;;;;;1442:25:1;;;1415:18;;78568:33:0;;;;;;;;78515:97;78622:18;77658:95;78681:5;78688:7;78697:5;78704:16;78714:5;-1:-1:-1;;;;;1173:14:0;871:7;1173:14;;;:7;:14;;;;;:16;;;;;;;;;811:395;78704:16;78653:78;;;;;;5797:25:1;;;;-1:-1:-1;;;;;5896:15:1;;;5876:18;;;5869:43;5948:15;;;;5928:18;;;5921:43;5980:18;;;5973:34;6023:19;;;6016:35;6067:19;;;6060:35;;;5769:19;;78653:78:0;;;;;;;;;;;;78643:89;;;;;;78622:110;;78743:12;78758:28;78775:10;78758:16;:28::i;:::-;78743:43;;78797:14;78814:28;78828:4;78834:1;78837;78840;78814:13;:28::i;:::-;78797:45;;78866:5;-1:-1:-1;;;;;78856:15:0;:6;-1:-1:-1;;;;;78856:15:0;;78852:88;;78894:35;;-1:-1:-1;;;78894:35:0;;-1:-1:-1;;;;;6336:15:1;;;78894:35:0;;;6318:34:1;6388:15;;6368:18;;;6361:43;6253:18;;78894:35:0;6106:304:1;78852:88:0;78950:31;78959:5;78966:7;78975:5;78950:8;:31::i;:::-;78505:483;;;78316:672;;;;;;;:::o;61836:215::-;60824:13;:11;:13::i;:::-;-1:-1:-1;;;;;61920:22:0;::::1;61916:91;;61965:31;::::0;-1:-1:-1;;;61965:31:0;;61993:1:::1;61965:31;::::0;::::1;3968:51:1::0;3941:18;;61965:31:0::1;3822:203:1::0;61916:91:0::1;62016:28;62035:8;62016:18;:28::i;74694:128::-:0;74778:37;74787:5;74794:7;74803:5;74810:4;74778:8;:37::i;:::-;74694:128;;;:::o;76368:477::-;-1:-1:-1;;;;;69657:18:0;;;76467:24;69657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;76533:37:0;;76529:310;;76609:5;76590:16;:24;76586:130;;;76641:60;;-1:-1:-1;;;76641:60:0;;-1:-1:-1;;;;;6635:32:1;;76641:60:0;;;6617:51:1;6684:18;;;6677:34;;;6727:18;;;6720:34;;;6590:18;;76641:60:0;6415:345:1;76586:130:0;76757:57;76766:5;76773:7;76801:5;76782:16;:24;76808:5;76757:8;:57::i;:::-;76457:388;76368:477;;;:::o;71361:300::-;-1:-1:-1;;;;;71444:18:0;;71440:86;;71485:30;;-1:-1:-1;;;71485:30:0;;71512:1;71485:30;;;3968:51:1;3941:18;;71485:30:0;3822:203:1;71440:86:0;-1:-1:-1;;;;;71539:16:0;;71535:86;;71578:32;;-1:-1:-1;;;71578:32:0;;71607:1;71578:32;;;3968:51:1;3941:18;;71578:32:0;3822:203:1;71535:86:0;71630:24;71638:4;71644:2;71648:5;71630:7;:24::i;37491:262::-;37544:7;37575:4;-1:-1:-1;;;;;37584:11:0;37567:28;;:63;;;;;37616:14;37599:13;:31;37567:63;37563:184;;;-1:-1:-1;37653:22:0;;37491:262::o;37563:184::-;37713:23;37850:80;;;35725:95;37850:80;;;7251:25:1;37872:11:0;7292:18:1;;;7285:34;;;;37885:14:0;7335:18:1;;;7328:34;37901:13:0;7378:18:1;;;7371:34;37924:4:0;7421:19:1;;;7414:61;37814:7:0;;7223:19:1;;37850:80:0;;;;;;;;;;;;37840:91;;;;;;37833:98;;37759:179;;61089:162;61003:6;;-1:-1:-1;;;;;61003:6:0;59191:10;61148:23;61144:101;;61194:40;;-1:-1:-1;;;61194:40:0;;59191:10;61194:40;;;3968:51:1;3941:18;;61194:40:0;3822:203:1;73426:208:0;-1:-1:-1;;;;;73496:21:0;;73492:91;;73540:32;;-1:-1:-1;;;73540:32:0;;73569:1;73540:32;;;3968:51:1;3941:18;;73540:32:0;3822:203:1;73492:91:0;73592:35;73608:1;73612:7;73621:5;73592:7;:35::i;73952:206::-;-1:-1:-1;;;;;74022:21:0;;74018:89;;74066:30;;-1:-1:-1;;;74066:30:0;;74093:1;74066:30;;;3968:51:1;3941:18;;74066:30:0;3822:203:1;74018:89:0;74116:35;74124:7;74141:1;74145:5;74116:7;:35::i;62205:187::-;62297:6;;;-1:-1:-1;;;;;62313:17:0;;;-1:-1:-1;;;;;;62313:17:0;;;;;;;62345:40;;62297:6;;;62313:17;62297:6;;62345:40;;62278:16;;62345:40;62268:124;62205:187;:::o;39667:126::-;39713:13;39745:41;:5;39772:13;39745:26;:41::i;40119:135::-;40168:13;40200:47;:8;40230:16;40200:29;:47::i;38563:176::-;38640:7;38666:66;38699:20;:18;:20::i;:::-;38721:10;33584:4;33578:11;-1:-1:-1;;;33602:23:0;;33654:4;33645:14;;33638:39;;;;33706:4;33697:14;;33690:34;33762:4;33747:20;;;33382:401;47093:260;47178:7;47198:17;47217:18;47237:16;47257:25;47268:4;47274:1;47277;47280;47257:10;:25::i;:::-;47197:85;;;;;;47292:28;47304:5;47311:8;47292:11;:28::i;:::-;-1:-1:-1;47337:9:0;;47093:260;-1:-1:-1;;;;;;47093:260:0:o;75654:432::-;-1:-1:-1;;;;;75766:19:0;;75762:89;;75808:32;;-1:-1:-1;;;75808:32:0;;75837:1;75808:32;;;3968:51:1;3941:18;;75808:32:0;3822:203:1;75762:89:0;-1:-1:-1;;;;;75864:21:0;;75860:90;;75908:31;;-1:-1:-1;;;75908:31:0;;75936:1;75908:31;;;3968:51:1;3941:18;;75908:31:0;3822:203:1;75860:90:0;-1:-1:-1;;;;;75959:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;76004:76;;;;76054:7;-1:-1:-1;;;;;76038:31:0;76047:5;-1:-1:-1;;;;;76038:31:0;;76063:5;76038:31;;;;1442:25:1;;1430:2;1415:18;;1296:177;76038:31:0;;;;;;;;75654:432;;;;:::o;71976:1107::-;-1:-1:-1;;;;;72065:18:0;;72061:540;;72217:5;72201:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;72061:540:0;;-1:-1:-1;72061:540:0;;-1:-1:-1;;;;;72275:15:0;;72253:19;72275:15;;;;;;;;;;;72308:19;;;72304:115;;;72354:50;;-1:-1:-1;;;72354:50:0;;-1:-1:-1;;;;;6635:32:1;;72354:50:0;;;6617:51:1;6684:18;;;6677:34;;;6727:18;;;6720:34;;;6590:18;;72354:50:0;6415:345:1;72304:115:0;-1:-1:-1;;;;;72539:15:0;;:9;:15;;;;;;;;;;72557:19;;;;72539:37;;72061:540;-1:-1:-1;;;;;72615:16:0;;72611:425;;72778:12;:21;;;;;;;72611:425;;;-1:-1:-1;;;;;72989:13:0;;:9;:13;;;;;;;;;;:22;;;;;;72611:425;73066:2;-1:-1:-1;;;;;73051:25:0;73060:4;-1:-1:-1;;;;;73051:25:0;;73070:5;73051:25;;;;1442::1;;1430:2;1415:18;;1296:177;73051:25:0;;;;;;;;71976:1107;;;:::o;9631:267::-;9725:13;7636:66;9754:46;;9750:142;;9823:15;9832:5;9823:8;:15::i;:::-;9816:22;;;;9750:142;9876:5;9869:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45430:1530;45556:7;;;46489:66;46476:79;;46472:164;;;-1:-1:-1;46587:1:0;;-1:-1:-1;46591:30:0;;-1:-1:-1;46623:1:0;46571:54;;46472:164;46747:24;;;46730:14;46747:24;;;;;;;;;7713:25:1;;;7786:4;7774:17;;7754:18;;;7747:45;;;;7808:18;;;7801:34;;;7851:18;;;7844:34;;;46747:24:0;;7685:19:1;;46747:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;46747:24:0;;-1:-1:-1;;46747:24:0;;;-1:-1:-1;;;;;;;46785:20:0;;46781:113;;-1:-1:-1;46837:1:0;;-1:-1:-1;46841:29:0;;-1:-1:-1;46837:1:0;;-1:-1:-1;46821:62:0;;46781:113;46912:6;-1:-1:-1;46920:20:0;;-1:-1:-1;46920:20:0;;-1:-1:-1;45430:1530:0;;;;;;;;;:::o;47486:532::-;47581:20;47572:5;:29;;;;;;;;:::i;:::-;;47568:444;;47486:532;;:::o;47568:444::-;47677:29;47668:5;:38;;;;;;;;:::i;:::-;;47664:348;;47729:23;;-1:-1:-1;;;47729:23:0;;;;;;;;;;;47664:348;47782:35;47773:5;:44;;;;;;;;:::i;:::-;;47769:243;;47840:46;;-1:-1:-1;;;47840:46:0;;;;;1442:25:1;;;1415:18;;47840:46:0;1296:177:1;47769:243:0;47916:30;47907:5;:39;;;;;;;;:::i;:::-;;47903:109;;47969:32;;-1:-1:-1;;;47969:32:0;;;;;1442:25:1;;;1415:18;;47969:32:0;1296:177:1;8324:405:0;8383:13;8408:11;8422:16;8433:4;8422:10;:16::i;:::-;8546:14;;;8557:2;8546:14;;;;;;;;;8408:30;;-1:-1:-1;8526:17:0;;8546:14;;;;;;;;;-1:-1:-1;;;8636:16:0;;;-1:-1:-1;8681:4:0;8672:14;;8665:28;;;;-1:-1:-1;8636:16:0;8324:405::o;8801:245::-;8862:7;8934:4;8898:40;;8961:2;8952:11;;8948:69;;;8986:20;;-1:-1:-1;;;8986:20:0;;;;;;;;;;;14:423:1;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:1:o;667:173::-;735:20;;-1:-1:-1;;;;;784:31:1;;774:42;;764:70;;830:1;827;820:12;764:70;667:173;;;:::o;845:254::-;913:6;921;974:2;962:9;953:7;949:23;945:32;942:52;;;990:1;987;980:12;942:52;1013:29;1032:9;1013:29;:::i;:::-;1003:39;1089:2;1074:18;;;;1061:32;;-1:-1:-1;;;845:254:1:o;1478:328::-;1555:6;1563;1571;1624:2;1612:9;1603:7;1599:23;1595:32;1592:52;;;1640:1;1637;1630:12;1592:52;1663:29;1682:9;1663:29;:::i;:::-;1653:39;;1711:38;1745:2;1734:9;1730:18;1711:38;:::i;:::-;1701:48;;1796:2;1785:9;1781:18;1768:32;1758:42;;1478:328;;;;;:::o;2182:180::-;2241:6;2294:2;2282:9;2273:7;2269:23;2265:32;2262:52;;;2310:1;2307;2300:12;2262:52;-1:-1:-1;2333:23:1;;2182:180;-1:-1:-1;2182:180:1:o;2367:186::-;2426:6;2479:2;2467:9;2458:7;2454:23;2450:32;2447:52;;;2495:1;2492;2485:12;2447:52;2518:29;2537:9;2518:29;:::i;2558:1259::-;2964:3;2959;2955:13;2947:6;2943:26;2932:9;2925:45;2906:4;2989:2;3027:3;3022:2;3011:9;3007:18;3000:31;3054:46;3095:3;3084:9;3080:19;3072:6;3054:46;:::i;:::-;3148:9;3140:6;3136:22;3131:2;3120:9;3116:18;3109:50;3182:33;3208:6;3200;3182:33;:::i;:::-;3246:2;3231:18;;3224:34;;;-1:-1:-1;;;;;3295:32:1;;3289:3;3274:19;;3267:61;3315:3;3344:19;;3337:35;;;3409:22;;;3403:3;3388:19;;3381:51;3481:13;;3503:22;;;3553:2;3579:15;;;;-1:-1:-1;3541:15:1;;;;-1:-1:-1;3622:169:1;3636:6;3633:1;3630:13;3622:169;;;3697:13;;3685:26;;3766:15;;;;3731:12;;;;3658:1;3651:9;3622:169;;;-1:-1:-1;3808:3:1;;2558:1259;-1:-1:-1;;;;;;;;;;;;2558:1259:1:o;4030:693::-;4141:6;4149;4157;4165;4173;4181;4189;4242:3;4230:9;4221:7;4217:23;4213:33;4210:53;;;4259:1;4256;4249:12;4210:53;4282:29;4301:9;4282:29;:::i;:::-;4272:39;;4330:38;4364:2;4353:9;4349:18;4330:38;:::i;:::-;4320:48;;4415:2;4404:9;4400:18;4387:32;4377:42;;4466:2;4455:9;4451:18;4438:32;4428:42;;4520:3;4509:9;4505:19;4492:33;4565:4;4558:5;4554:16;4547:5;4544:27;4534:55;;4585:1;4582;4575:12;4534:55;4030:693;;;;-1:-1:-1;4030:693:1;;;;4608:5;4660:3;4645:19;;4632:33;;-1:-1:-1;4712:3:1;4697:19;;;4684:33;;4030:693;-1:-1:-1;;4030:693:1:o;4728:260::-;4796:6;4804;4857:2;4845:9;4836:7;4832:23;4828:32;4825:52;;;4873:1;4870;4863:12;4825:52;4896:29;4915:9;4896:29;:::i;:::-;4886:39;;4944:38;4978:2;4967:9;4963:18;4944:38;:::i;:::-;4934:48;;4728:260;;;;;:::o;4993:380::-;5072:1;5068:12;;;;5115;;;5136:61;;5190:4;5182:6;5178:17;5168:27;;5136:61;5243:2;5235:6;5232:14;5212:18;5209:38;5206:161;;5289:10;5284:3;5280:20;5277:1;5270:31;5324:4;5321:1;5314:15;5352:4;5349:1;5342:15;5206:161;;4993:380;;;:::o;6765:222::-;6830:9;;;6851:10;;;6848:133;;;6903:10;6898:3;6894:20;6891:1;6884:31;6938:4;6935:1;6928:15;6966:4;6963:1;6956:15;7889:127;7950:10;7945:3;7941:20;7938:1;7931:31;7981:4;7978:1;7971:15;8005:4;8002:1;7995:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "866600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2648",
								"burn(uint256)": "51005",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "199",
								"eip712Domain()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2635",
								"owner()": "2411",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51260",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 80743,
									"end": 80944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29BAB832B9102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78210,
									"end": 78262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78249,
									"end": 78253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36974,
									"end": 37405,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 80829,
									"end": 80841,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "29BAB832B9102A37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "53544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67601,
									"end": 67714,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67675,
									"end": 67680,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67667,
									"end": 67672,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 67667,
									"end": 67680,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67667,
									"end": 67680,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67667,
									"end": 67680,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 67667,
									"end": 67680,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 67667,
									"end": 67680,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67667,
									"end": 67680,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 67667,
									"end": 67680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67667,
									"end": 67680,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 67667,
									"end": 67680,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 67690,
									"end": 67697,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 67690,
									"end": 67707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 67700,
									"end": 67707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 67690,
									"end": 67697,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 67690,
									"end": 67707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 67690,
									"end": 67707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67690,
									"end": 67707,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 67690,
									"end": 67707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 60566,
									"end": 60592,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60566,
									"end": 60592,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60562,
									"end": 60657,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 60562,
									"end": 60657,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60643,
									"end": 60644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3142,
									"end": 3193,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60615,
									"end": 60646,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60562,
									"end": 60657,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 60562,
									"end": 60657,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60666,
									"end": 60698,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 60685,
									"end": 60697,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60666,
									"end": 60684,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 60666,
									"end": 60698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 60666,
									"end": 60698,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 60666,
									"end": 60698,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 37047,
									"end": 37092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37047,
									"end": 37051,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37078,
									"end": 37091,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 37047,
									"end": 37077,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 37047,
									"end": 37092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37047,
									"end": 37092,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37047,
									"end": 37092,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37039,
									"end": 37092,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 37039,
									"end": 37092,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37113,
									"end": 37164,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 37113,
									"end": 37120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37147,
									"end": 37163,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 37113,
									"end": 37146,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 37113,
									"end": 37164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37113,
									"end": 37164,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 37113,
									"end": 37164,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37102,
									"end": 37164,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 37102,
									"end": 37164,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37188,
									"end": 37210,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37188,
									"end": 37210,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37188,
									"end": 37210,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37188,
									"end": 37210,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37188,
									"end": 37210,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 37188,
									"end": 37210,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37188,
									"end": 37210,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37188,
									"end": 37210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37188,
									"end": 37210,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37188,
									"end": 37210,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37174,
									"end": 37210,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 37174,
									"end": 37210,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37237,
									"end": 37262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37237,
									"end": 37262,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37237,
									"end": 37262,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37237,
									"end": 37262,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37237,
									"end": 37262,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37237,
									"end": 37262,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37220,
									"end": 37262,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 37220,
									"end": 37262,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37290,
									"end": 37303,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 37273,
									"end": 37303,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 37273,
									"end": 37303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37361,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 37872,
									"end": 37883,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 37872,
									"end": 37883,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37885,
									"end": 37899,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 37885,
									"end": 37899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35725,
									"end": 35820,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5145,
									"end": 5170,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5186,
									"end": 5204,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5186,
									"end": 5204,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5186,
									"end": 5204,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5179,
									"end": 5213,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5179,
									"end": 5213,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5179,
									"end": 5213,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5179,
									"end": 5213,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5229,
									"end": 5247,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 5229,
									"end": 5247,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5229,
									"end": 5247,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5222,
									"end": 5256,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 37901,
									"end": 37914,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 5272,
									"end": 5290,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 5272,
									"end": 5290,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5272,
									"end": 5290,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5265,
									"end": 5299,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 37924,
									"end": 37928,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 5315,
									"end": 5334,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 5315,
									"end": 5334,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5315,
									"end": 5334,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5308,
									"end": 5369,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 37814,
									"end": 37821,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37814,
									"end": 37821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5117,
									"end": 5136,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 5117,
									"end": 5136,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37850,
									"end": 37930,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37840,
									"end": 37931,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37840,
									"end": 37931,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37840,
									"end": 37931,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37840,
									"end": 37931,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37840,
									"end": 37931,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37840,
									"end": 37931,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37833,
									"end": 37931,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37833,
									"end": 37931,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37759,
									"end": 37938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37759,
									"end": 37938,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37338,
									"end": 37361,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 37338,
									"end": 37361,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37313,
									"end": 37361,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 37313,
									"end": 37361,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 37393,
									"end": 37397,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 37371,
									"end": 37398,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 37371,
									"end": 37398,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 80892,
									"end": 80937,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 80898,
									"end": 80908,
									"modifierDepth": 3,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 80920,
									"end": 80936,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 68780,
									"end": 68782,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 80920,
									"end": 80922,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 80920,
									"end": 80936,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 80920,
									"end": 80936,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 80920,
									"end": 80936,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 80920,
									"end": 80936,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 80910,
									"end": 80936,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 80910,
									"end": 80936,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 80910,
									"end": 80917,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "F4240"
								},
								{
									"begin": 80910,
									"end": 80936,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 80910,
									"end": 80936,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 80910,
									"end": 80936,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 80910,
									"end": 80936,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 80892,
									"end": 80897,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 80892,
									"end": 80937,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 80892,
									"end": 80937,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 80892,
									"end": 80937,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 80743,
									"end": 80944,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "81"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 62205,
									"end": 62392,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 62205,
									"end": 62392,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62297,
									"end": 62303,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 62297,
									"end": 62303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62297,
									"end": 62303,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 62345,
									"end": 62385,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62345,
									"end": 62385,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 62297,
									"end": 62303,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 62297,
									"end": 62303,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62297,
									"end": 62303,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 62313,
									"end": 62330,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62297,
									"end": 62303,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 62297,
									"end": 62303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62345,
									"end": 62385,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 62345,
									"end": 62385,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62278,
									"end": 62294,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62278,
									"end": 62294,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62345,
									"end": 62385,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 62268,
									"end": 62392,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62205,
									"end": 62392,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62205,
									"end": 62392,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9160,
									"end": 9500,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 9160,
									"end": 9500,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9256,
									"end": 9267,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9305,
									"end": 9307,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9289,
									"end": 9294,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9283,
									"end": 9302,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9283,
									"end": 9307,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 9494,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 9494,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 9279,
									"end": 9494,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9330,
									"end": 9350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 9344,
									"end": 9349,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9330,
									"end": 9343,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9330,
									"end": 9350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9330,
									"end": 9350,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 9330,
									"end": 9350,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9323,
									"end": 9350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9323,
									"end": 9350,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9323,
									"end": 9350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 9323,
									"end": 9350,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9279,
									"end": 9494,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 9279,
									"end": 9494,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9407,
									"end": 9412,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9381,
									"end": 9427,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 9422,
									"end": 9427,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 9407,
									"end": 9412,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9381,
									"end": 9427,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9381,
									"end": 9427,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9381,
									"end": 9427,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 9381,
									"end": 9427,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7636,
									"end": 7702,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7636,
									"end": 7702,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9279,
									"end": 9494,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 9279,
									"end": 9494,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9160,
									"end": 9500,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 9160,
									"end": 9500,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9160,
									"end": 9500,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9160,
									"end": 9500,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9160,
									"end": 9500,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 73426,
									"end": 73634,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 73426,
									"end": 73634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 73496,
									"end": 73517,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 73496,
									"end": 73517,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73492,
									"end": 73583,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 73492,
									"end": 73583,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 73540,
									"end": 73572,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73540,
									"end": 73572,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 73540,
									"end": 73572,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73540,
									"end": 73572,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 73569,
									"end": 73570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73540,
									"end": 73572,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 73540,
									"end": 73572,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 73540,
									"end": 73572,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3142,
									"end": 3193,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3115,
									"end": 3133,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 73540,
									"end": 73572,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2996,
									"end": 3199,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 73492,
									"end": 73583,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 73492,
									"end": 73583,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73592,
									"end": 73627,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 73608,
									"end": 73609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73612,
									"end": 73619,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73621,
									"end": 73626,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73592,
									"end": 73599,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 73592,
									"end": 73627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 73592,
									"end": 73627,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 73592,
									"end": 73627,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73426,
									"end": 73634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73426,
									"end": 73634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73426,
									"end": 73634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7954,
									"end": 8240,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7954,
									"end": 8240,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8019,
									"end": 8030,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8042,
									"end": 8059,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8068,
									"end": 8071,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8042,
									"end": 8072,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8042,
									"end": 8072,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8100,
									"end": 8102,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 8086,
									"end": 8090,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8086,
									"end": 8097,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8086,
									"end": 8102,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8082,
									"end": 8154,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8082,
									"end": 8154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 8082,
									"end": 8154,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8139,
									"end": 8142,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "305A27A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8125,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 8125,
									"end": 8143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8082,
									"end": 8154,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 8082,
									"end": 8154,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8220,
									"end": 8231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8220,
									"end": 8231,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8203,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 8220,
									"end": 8224,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8203,
									"end": 8216,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 8203,
									"end": 8216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8203,
									"end": 8216,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 8203,
									"end": 8216,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8195,
									"end": 8231,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8195,
									"end": 8231,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 7954,
									"end": 8240,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7954,
									"end": 8240,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 71976,
									"end": 73083,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 71976,
									"end": 73083,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 72065,
									"end": 72083,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 72065,
									"end": 72083,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72061,
									"end": 72601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 72061,
									"end": 72601,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72217,
									"end": 72222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72201,
									"end": 72213,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 72201,
									"end": 72213,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 72201,
									"end": 72222,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 72201,
									"end": 72222,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 72061,
									"end": 72601,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 72061,
									"end": 72601,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 72061,
									"end": 72601,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72061,
									"end": 72601,
									"name": "tag",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 72061,
									"end": 72601,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72253,
									"end": 72272,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 72275,
									"end": 72290,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 72308,
									"end": 72327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72308,
									"end": 72327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72308,
									"end": 72327,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 72304,
									"end": 72419,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 72304,
									"end": 72419,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 72304,
									"end": 72419,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72354,
									"end": 72404,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72354,
									"end": 72404,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 72354,
									"end": 72404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72354,
									"end": 72404,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6585,
									"end": 6617,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6585,
									"end": 6617,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 72354,
									"end": 72404,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 72354,
									"end": 72404,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72354,
									"end": 72404,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6567,
									"end": 6618,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6634,
									"end": 6652,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6634,
									"end": 6652,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6634,
									"end": 6652,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6627,
									"end": 6661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6627,
									"end": 6661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6627,
									"end": 6661,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6677,
									"end": 6695,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 6677,
									"end": 6695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6677,
									"end": 6695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6670,
									"end": 6704,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6670,
									"end": 6704,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6670,
									"end": 6704,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6540,
									"end": 6558,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 6540,
									"end": 6558,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 72354,
									"end": 72404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6365,
									"end": 6710,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 72304,
									"end": 72419,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 72304,
									"end": 72419,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72548,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72554,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 72557,
									"end": 72576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72557,
									"end": 72576,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72557,
									"end": 72576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72557,
									"end": 72576,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72576,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72539,
									"end": 72576,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 72061,
									"end": 72601,
									"name": "tag",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 72061,
									"end": 72601,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 72615,
									"end": 72631,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72615,
									"end": 72631,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72611,
									"end": 73036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 72611,
									"end": 73036,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72778,
									"end": 72790,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 72778,
									"end": 72799,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72778,
									"end": 72799,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 72778,
									"end": 72799,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72778,
									"end": 72799,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72778,
									"end": 72799,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 72778,
									"end": 72799,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72778,
									"end": 72799,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 72611,
									"end": 73036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 72611,
									"end": 73036,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72611,
									"end": 73036,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 72611,
									"end": 73036,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 72998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73002,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73011,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73011,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73011,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73011,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72989,
									"end": 73011,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 72611,
									"end": 73036,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 72611,
									"end": 73036,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73066,
									"end": 73068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73060,
									"end": 73064,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 73070,
									"end": 73075,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6861,
									"end": 6886,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6861,
									"end": 6886,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6849,
									"end": 6851,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6852,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6715,
									"end": 6892,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "tag",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73051,
									"end": 73076,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 71976,
									"end": 73083,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 71976,
									"end": 73083,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 71976,
									"end": 73083,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 71976,
									"end": 73083,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2076,
									"end": 2077,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2801,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2841,
									"end": 2867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2239,
									"end": 2246,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2236,
									"end": 2237,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2233,
									"end": 2247,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2322,
									"end": 2348,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2388,
									"end": 2389,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2229,
									"end": 2232,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2489,
									"end": 2495,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2480,
									"end": 2487,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2544,
									"end": 2570,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2633,
									"end": 2634,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2645,
									"end": 2648,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2625,
									"end": 2649,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2621,
									"end": 2658,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2617,
									"end": 2659,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2602,
									"end": 2660,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2722,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2712,
									"end": 2718,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2705,
									"end": 2719,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2701,
									"end": 2723,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2695,
									"end": 2699,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2688,
									"end": 2724,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 2991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3204,
									"end": 3331,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3204,
									"end": 3331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3265,
									"end": 3275,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 3260,
									"end": 3263,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 3256,
									"end": 3276,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3253,
									"end": 3254,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3246,
									"end": 3277,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3296,
									"end": 3300,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3293,
									"end": 3294,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3286,
									"end": 3301,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3320,
									"end": 3324,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3317,
									"end": 3318,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3310,
									"end": 3325,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3425,
									"end": 3426,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3462,
									"end": 3467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3425,
									"end": 3426,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3504,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3487,
									"end": 3495,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3484,
									"end": 3505,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3556,
									"end": 3560,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3552,
									"end": 3553,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3548,
									"end": 3554,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3544,
									"end": 3561,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 3538,
									"end": 3542,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3535,
									"end": 3562,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3532,
									"end": 3585,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3532,
									"end": 3585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3532,
									"end": 3585,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3565,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 3565,
									"end": 3583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3565,
									"end": 3583,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 3565,
									"end": 3583,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3615,
									"end": 3622,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3605,
									"end": 3613,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3601,
									"end": 3623,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3598,
									"end": 3653,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3598,
									"end": 3653,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 3598,
									"end": 3653,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3635,
									"end": 3651,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3635,
									"end": 3651,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3635,
									"end": 3651,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3635,
									"end": 3651,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3598,
									"end": 3653,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 3598,
									"end": 3653,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3736,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3736,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3736,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3714,
									"end": 3736,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3689,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3689,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3689,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3674,
									"end": 3689,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3476,
									"end": 3746,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3480,
									"end": 3483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3806,
									"end": 3811,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3836,
									"end": 3844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3826,
									"end": 3906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 3826,
									"end": 3906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3877,
									"end": 3878,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3891,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3891,
									"end": 3896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3826,
									"end": 3906,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 3826,
									"end": 3906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3915,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 3915,
									"end": 3991,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3962,
									"end": 3963,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3976,
									"end": 3981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3976,
									"end": 3981,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3915,
									"end": 3991,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 3915,
									"end": 3991,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4007,
									"end": 4011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4025,
									"end": 4026,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4093,
									"end": 4094,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4000,
									"end": 4218,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 4020,
									"end": 4079,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4050,
									"end": 4051,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4041,
									"end": 4051,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4051,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 4088,
									"end": 4218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4125,
									"end": 4128,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 4115,
									"end": 4123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4112,
									"end": 4129,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4109,
									"end": 4152,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4109,
									"end": 4152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4109,
									"end": 4152,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 4132,
									"end": 4150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 4132,
									"end": 4150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4188,
									"end": 4189,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4174,
									"end": 4190,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4174,
									"end": 4190,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4218,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 4000,
									"end": 4218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4000,
									"end": 4218,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4302,
									"end": 4304,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4292,
									"end": 4300,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4289,
									"end": 4305,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4283,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 4277,
									"end": 4281,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4274,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4270,
									"end": 4306,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4264,
									"end": 4266,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 4254,
									"end": 4262,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4251,
									"end": 4267,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4246,
									"end": 4248,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 4240,
									"end": 4244,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4237,
									"end": 4249,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4233,
									"end": 4268,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4230,
									"end": 4307,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4227,
									"end": 4386,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4227,
									"end": 4386,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4227,
									"end": 4386,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4339,
									"end": 4358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4339,
									"end": 4358,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 4371,
									"end": 4376,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 4371,
									"end": 4376,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4227,
									"end": 4386,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 4227,
									"end": 4386,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4418,
									"end": 4452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4437,
									"end": 4441,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4418,
									"end": 4452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 4418,
									"end": 4452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4418,
									"end": 4452,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 4418,
									"end": 4452,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4488,
									"end": 4494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4484,
									"end": 4485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4480,
									"end": 4486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4476,
									"end": 4495,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4467,
									"end": 4474,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4464,
									"end": 4496,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4461,
									"end": 4519,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4461,
									"end": 4519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4461,
									"end": 4519,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4499,
									"end": 4517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4499,
									"end": 4517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 4499,
									"end": 4517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4499,
									"end": 4517,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4499,
									"end": 4517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4537,
									"end": 4557,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4537,
									"end": 4557,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 4563,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3757,
									"end": 4563,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4568,
									"end": 4708,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 4568,
									"end": 4708,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4626,
									"end": 4631,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4655,
									"end": 4702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 4696,
									"end": 4700,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 4686,
									"end": 4694,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4682,
									"end": 4701,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4676,
									"end": 4680,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4655,
									"end": 4702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4655,
									"end": 4702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4713,
									"end": 4881,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 4713,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4786,
									"end": 4795,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4786,
									"end": 4795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4786,
									"end": 4795,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4817,
									"end": 4826,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4817,
									"end": 4826,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4834,
									"end": 4849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4834,
									"end": 4849,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4834,
									"end": 4849,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4828,
									"end": 4850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4828,
									"end": 4850,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4814,
									"end": 4851,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4875,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 4804,
									"end": 4875,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4855,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 4855,
									"end": 4873,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 4855,
									"end": 4873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5380,
									"end": 5928,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 5380,
									"end": 5928,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5496,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5521,
									"end": 5523,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5550,
									"end": 5552,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5539,
									"end": 5548,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5532,
									"end": 5553,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5582,
									"end": 5588,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5576,
									"end": 5589,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5625,
									"end": 5631,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5620,
									"end": 5622,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5609,
									"end": 5618,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5605,
									"end": 5623,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5598,
									"end": 5632,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5650,
									"end": 5651,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5660,
									"end": 5800,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 5660,
									"end": 5800,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5674,
									"end": 5680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5671,
									"end": 5672,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5668,
									"end": 5681,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5800,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5800,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5660,
									"end": 5800,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5769,
									"end": 5783,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5769,
									"end": 5783,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5769,
									"end": 5783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5765,
									"end": 5788,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5765,
									"end": 5788,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5759,
									"end": 5789,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5735,
									"end": 5752,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5735,
									"end": 5752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5735,
									"end": 5752,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5754,
									"end": 5756,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5731,
									"end": 5757,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5724,
									"end": 5790,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5689,
									"end": 5699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5689,
									"end": 5699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5800,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 5660,
									"end": 5800,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5660,
									"end": 5800,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5660,
									"end": 5800,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5664,
									"end": 5667,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5849,
									"end": 5850,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5844,
									"end": 5846,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5835,
									"end": 5841,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5824,
									"end": 5833,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5820,
									"end": 5842,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5816,
									"end": 5847,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5809,
									"end": 5851,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5919,
									"end": 5921,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5912,
									"end": 5914,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5908,
									"end": 5915,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5903,
									"end": 5905,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5895,
									"end": 5901,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5891,
									"end": 5906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5887,
									"end": 5916,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5876,
									"end": 5885,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5872,
									"end": 5917,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5868,
									"end": 5922,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5860,
									"end": 5922,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5860,
									"end": 5922,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5860,
									"end": 5922,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5860,
									"end": 5922,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5380,
									"end": 5928,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5380,
									"end": 5928,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5380,
									"end": 5928,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5380,
									"end": 5928,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5380,
									"end": 5928,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5933,
									"end": 6230,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 5933,
									"end": 6230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6051,
									"end": 6063,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6051,
									"end": 6063,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6087,
									"end": 6103,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6087,
									"end": 6103,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6087,
									"end": 6103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6081,
									"end": 6104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6081,
									"end": 6104,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6051,
									"end": 6063,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6116,
									"end": 6132,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6116,
									"end": 6132,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6113,
									"end": 6224,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6113,
									"end": 6224,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 6113,
									"end": 6224,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6190,
									"end": 6194,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6186,
									"end": 6203,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6186,
									"end": 6203,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6186,
									"end": 6203,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6186,
									"end": 6203,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6183,
									"end": 6184,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 6179,
									"end": 6204,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6175,
									"end": 6213,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6164,
									"end": 6214,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6164,
									"end": 6214,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5933,
									"end": 6230,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5933,
									"end": 6230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6235,
									"end": 6360,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 6235,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6309,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6300,
									"end": 6309,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6331,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6331,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6331,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6318,
									"end": 6354,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6318,
									"end": 6354,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6318,
									"end": 6354,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6334,
									"end": 6352,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6334,
									"end": 6352,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 6334,
									"end": 6352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6715,
									"end": 6892,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 6715,
									"end": 6892,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1919"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1916"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1913"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1911"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1909"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1907"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1905"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80671,
									"end": 81045,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc57e232febfc0c5ff6bfc478c921b49f028b850d3aa8ecebc27549a83bc1fcb64736f6c63430008160033",
									".code": [
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "84B0196E"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80671,
											"end": 81045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 67779,
											"end": 67868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 67779,
											"end": 67868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 69998,
											"end": 70184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 69998,
											"end": 70184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1283,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1284,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1104,
											"end": 1291,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 68849,
											"end": 68946,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 68849,
											"end": 68946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68927,
											"end": 68939,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68927,
											"end": 68939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68849,
											"end": 68946,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 68849,
											"end": 68946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68849,
											"end": 68946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68849,
											"end": 68946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 68849,
											"end": 68946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 70744,
											"end": 70988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 70744,
											"end": 70988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68707,
											"end": 68789,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 68707,
											"end": 68789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68707,
											"end": 68789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68707,
											"end": 68789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68780,
											"end": 68782,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1953,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 68707,
											"end": 68789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1811,
											"end": 1995,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 79292,
											"end": 79404,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79292,
											"end": 79404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79292,
											"end": 79404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 79292,
											"end": 79404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 79292,
											"end": 79404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 80950,
											"end": 81043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 80950,
											"end": 81043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 79983,
											"end": 80070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 79983,
											"end": 80070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69004,
											"end": 69120,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 69004,
											"end": 69120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69004,
											"end": 69120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 69004,
											"end": 69120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 69004,
											"end": 69120,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69004,
											"end": 69120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69004,
											"end": 69120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 69004,
											"end": 69120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69004,
											"end": 69120,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 69004,
											"end": 69120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69069,
											"end": 69076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69095,
											"end": 69113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69004,
											"end": 69120,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61586,
											"end": 61687,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 61586,
											"end": 61687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61586,
											"end": 61687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 61586,
											"end": 61687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 61586,
											"end": 61687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 80386,
											"end": 80544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 80386,
											"end": 80544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 79042,
											"end": 79185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 79042,
											"end": 79185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38790,
											"end": 39347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 38790,
											"end": 39347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60931,
											"end": 61016,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 60931,
											"end": 61016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61009,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61003,
											"end": 61009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60931,
											"end": 61016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60931,
											"end": 61016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61003,
											"end": 61009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 60931,
											"end": 61016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3822,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 67981,
											"end": 68074,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 67981,
											"end": 68074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67981,
											"end": 68074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 67981,
											"end": 68074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 67981,
											"end": 68074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 69315,
											"end": 69493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 69315,
											"end": 69493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 78316,
											"end": 78988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 78316,
											"end": 78988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69551,
											"end": 69691,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69551,
											"end": 69691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69551,
											"end": 69691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 69551,
											"end": 69691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 69551,
											"end": 69691,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69551,
											"end": 69691,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69551,
											"end": 69691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 69551,
											"end": 69691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69551,
											"end": 69691,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 69551,
											"end": 69691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69631,
											"end": 69638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69668,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69551,
											"end": 69691,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 61836,
											"end": 62051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 61836,
											"end": 62051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67824,
											"end": 67837,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 67856,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 67849,
											"end": 67861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 67849,
											"end": 67861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67849,
											"end": 67861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67779,
											"end": 67868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70071,
											"end": 70075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59191,
											"end": 59201,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 70125,
											"end": 70156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 59191,
											"end": 59201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70141,
											"end": 70148,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70150,
											"end": 70155,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70125,
											"end": 70133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 70125,
											"end": 70156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70125,
											"end": 70156,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 70125,
											"end": 70156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70173,
											"end": 70177,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70166,
											"end": 70177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70166,
											"end": 70177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70166,
											"end": 70177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69998,
											"end": 70184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70831,
											"end": 70835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59191,
											"end": 59201,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 70887,
											"end": 70924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 70903,
											"end": 70907,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59191,
											"end": 59201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 70923,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70887,
											"end": 70902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 70887,
											"end": 70924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70887,
											"end": 70924,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 70887,
											"end": 70924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70934,
											"end": 70960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 70944,
											"end": 70948,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70950,
											"end": 70952,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70954,
											"end": 70959,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70934,
											"end": 70943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 70934,
											"end": 70960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70934,
											"end": 70960,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 70934,
											"end": 70960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 70977,
											"end": 70981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70977,
											"end": 70981,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 70744,
											"end": 70988,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 70744,
											"end": 70988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79292,
											"end": 79404,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 79292,
											"end": 79404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79351,
											"end": 79358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79377,
											"end": 79397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 79377,
											"end": 79395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 79377,
											"end": 79397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79377,
											"end": 79397,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 79377,
											"end": 79397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79370,
											"end": 79397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79370,
											"end": 79397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79292,
											"end": 79404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79292,
											"end": 79404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 60837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 60824,
											"end": 60835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 60824,
											"end": 60837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 60837,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 60824,
											"end": 60837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 81019,
											"end": 81036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 81025,
											"end": 81027,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 81029,
											"end": 81035,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 81019,
											"end": 81024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 81019,
											"end": 81036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 81019,
											"end": 81036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 81019,
											"end": 81036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 80950,
											"end": 81043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80037,
											"end": 80063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 59191,
											"end": 59201,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 80057,
											"end": 80062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 80037,
											"end": 80042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 80037,
											"end": 80063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80037,
											"end": 80063,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 80037,
											"end": 80063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79983,
											"end": 80070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79983,
											"end": 80070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61586,
											"end": 61687,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 61586,
											"end": 61687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 60837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 60824,
											"end": 60835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 60824,
											"end": 60837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 60837,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 60824,
											"end": 60837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61650,
											"end": 61680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 61677,
											"end": 61678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61650,
											"end": 61668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 61650,
											"end": 61680,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61650,
											"end": 61680,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 61650,
											"end": 61680,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61586,
											"end": 61687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 80386,
											"end": 80544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80461,
											"end": 80506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 80477,
											"end": 80484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59191,
											"end": 59201,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 80500,
											"end": 80505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 80461,
											"end": 80476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 80461,
											"end": 80506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80461,
											"end": 80506,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 80461,
											"end": 80506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80516,
											"end": 80537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 80522,
											"end": 80529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 80531,
											"end": 80536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 80516,
											"end": 80521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 80516,
											"end": 80537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 79042,
											"end": 79185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 676,
											"end": 690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79133,
											"end": 79140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 676,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 676,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 676,
											"end": 690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 676,
											"end": 690,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 676,
											"end": 690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79159,
											"end": 79178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 590,
											"end": 697,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38790,
											"end": 39347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38888,
											"end": 38901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38915,
											"end": 38933,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38947,
											"end": 38968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38982,
											"end": 38997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39011,
											"end": 39036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39050,
											"end": 39062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39076,
											"end": 39103,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39179,
											"end": 39192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 39179,
											"end": 39190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 39179,
											"end": 39192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39179,
											"end": 39192,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 39179,
											"end": 39192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39206,
											"end": 39222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39206,
											"end": 39220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39206,
											"end": 39222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39206,
											"end": 39222,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39206,
											"end": 39222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39298,
											"end": 39299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39128,
											"end": 39340,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": 39128,
											"end": 39340,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39128,
											"end": 39340,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39128,
											"end": 39340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39128,
											"end": 39340,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39236,
											"end": 39249,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 39236,
											"end": 39249,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39271,
											"end": 39275,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 39271,
											"end": 39275,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39298,
											"end": 39299,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39314,
											"end": 39330,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39128,
											"end": 39340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38790,
											"end": 39347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67981,
											"end": 68074,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 67981,
											"end": 68074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68028,
											"end": 68041,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 68060,
											"end": 68067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68053,
											"end": 68067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 68053,
											"end": 68067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68053,
											"end": 68067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 68053,
											"end": 68067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 69315,
											"end": 69493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69384,
											"end": 69388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59191,
											"end": 59201,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 69438,
											"end": 69465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 59191,
											"end": 59201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69455,
											"end": 69457,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 69459,
											"end": 69464,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 69438,
											"end": 69447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 69438,
											"end": 69465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78545,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78519,
											"end": 78534,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 78519,
											"end": 78545,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 78515,
											"end": 78612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78515,
											"end": 78612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 78515,
											"end": 78612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313C8981"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78568,
											"end": 78601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78515,
											"end": 78612,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 78515,
											"end": 78612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78622,
											"end": 78640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77658,
											"end": 77753,
											"name": "PUSH",
											"source": 0,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 78681,
											"end": 78686,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78688,
											"end": 78695,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78697,
											"end": 78702,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78704,
											"end": 78720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 78714,
											"end": 78719,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 871,
											"end": 878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1180,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 811,
											"end": 1206,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78704,
											"end": 78720,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 78704,
											"end": 78720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5822,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5822,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5896,
											"end": 5911,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5911,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5894,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5876,
											"end": 5894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5921,
											"end": 5964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5973,
											"end": 6007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6042,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6023,
											"end": 6042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6086,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 6067,
											"end": 6086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6095,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5788,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5769,
											"end": 5788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78653,
											"end": 78731,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78643,
											"end": 78732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78643,
											"end": 78732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78643,
											"end": 78732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78643,
											"end": 78732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78643,
											"end": 78732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78643,
											"end": 78732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 78622,
											"end": 78732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78622,
											"end": 78732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78743,
											"end": 78755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78758,
											"end": 78786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 78775,
											"end": 78785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78758,
											"end": 78774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 78758,
											"end": 78786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78758,
											"end": 78786,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 78758,
											"end": 78786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78743,
											"end": 78786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78743,
											"end": 78786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78797,
											"end": 78811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78814,
											"end": 78842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 78828,
											"end": 78832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78834,
											"end": 78835,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78837,
											"end": 78838,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78840,
											"end": 78841,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78814,
											"end": 78827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 78814,
											"end": 78842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78814,
											"end": 78842,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 78814,
											"end": 78842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78797,
											"end": 78842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78797,
											"end": 78842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78866,
											"end": 78871,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 78856,
											"end": 78871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78856,
											"end": 78862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 78856,
											"end": 78871,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78856,
											"end": 78871,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78852,
											"end": 78940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 78852,
											"end": 78940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78894,
											"end": 78929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78894,
											"end": 78929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "25C00723"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 78894,
											"end": 78929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78894,
											"end": 78929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6336,
											"end": 6351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 78894,
											"end": 78929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78894,
											"end": 78929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78894,
											"end": 78929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6318,
											"end": 6352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6361,
											"end": 6404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 78894,
											"end": 78929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6106,
											"end": 6410,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 78852,
											"end": 78940,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 78852,
											"end": 78940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78950,
											"end": 78981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 78959,
											"end": 78964,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 78966,
											"end": 78973,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 78975,
											"end": 78980,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 78950,
											"end": 78958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 78950,
											"end": 78981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78950,
											"end": 78981,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 78950,
											"end": 78981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78505,
											"end": 78988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78505,
											"end": 78988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78505,
											"end": 78988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78316,
											"end": 78988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 61836,
											"end": 62051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 60837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 60824,
											"end": 60835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 60824,
											"end": 60837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60824,
											"end": 60837,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 60824,
											"end": 60837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61920,
											"end": 61942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61920,
											"end": 61942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61916,
											"end": 62007,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 61916,
											"end": 62007,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61965,
											"end": 61996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61965,
											"end": 61996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61965,
											"end": 61996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61965,
											"end": 61996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61993,
											"end": 61994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61965,
											"end": 61996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61965,
											"end": 61996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61965,
											"end": 61996,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61965,
											"end": 61996,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 61916,
											"end": 62007,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 61916,
											"end": 62007,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62016,
											"end": 62044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 62035,
											"end": 62043,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62016,
											"end": 62034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 62016,
											"end": 62044,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74694,
											"end": 74822,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 74694,
											"end": 74822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74778,
											"end": 74815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 74787,
											"end": 74792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74794,
											"end": 74801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74803,
											"end": 74808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74810,
											"end": 74814,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74778,
											"end": 74786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 74778,
											"end": 74815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74778,
											"end": 74815,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 74778,
											"end": 74815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74694,
											"end": 74822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74694,
											"end": 74822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74694,
											"end": 74822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74694,
											"end": 74822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76368,
											"end": 76845,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 76368,
											"end": 76845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76467,
											"end": 76491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69668,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69675,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69657,
											"end": 69684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 76533,
											"end": 76570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76533,
											"end": 76570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 76529,
											"end": 76839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 76529,
											"end": 76839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76609,
											"end": 76614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76590,
											"end": 76606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76590,
											"end": 76614,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76586,
											"end": 76716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76586,
											"end": 76716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 76586,
											"end": 76716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76641,
											"end": 76701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76641,
											"end": 76701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 76641,
											"end": 76701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76641,
											"end": 76701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6635,
											"end": 6667,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6635,
											"end": 6667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 76641,
											"end": 76701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76641,
											"end": 76701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76641,
											"end": 76701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6617,
											"end": 6668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6754,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 76641,
											"end": 76701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6415,
											"end": 6760,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 76586,
											"end": 76716,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 76586,
											"end": 76716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76757,
											"end": 76814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 76766,
											"end": 76771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76773,
											"end": 76780,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76801,
											"end": 76806,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76782,
											"end": 76798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76782,
											"end": 76806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76757,
											"end": 76765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 76757,
											"end": 76814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76757,
											"end": 76814,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 76757,
											"end": 76814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76457,
											"end": 76845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76368,
											"end": 76845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76368,
											"end": 76845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76368,
											"end": 76845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76368,
											"end": 76845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71361,
											"end": 71661,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 71361,
											"end": 71661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71444,
											"end": 71462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71444,
											"end": 71462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71440,
											"end": 71526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 71440,
											"end": 71526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71485,
											"end": 71515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71485,
											"end": 71515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71485,
											"end": 71515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71485,
											"end": 71515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71512,
											"end": 71513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71485,
											"end": 71515,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71485,
											"end": 71515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71485,
											"end": 71515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 71485,
											"end": 71515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 71440,
											"end": 71526,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 71440,
											"end": 71526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71539,
											"end": 71555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71539,
											"end": 71555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71535,
											"end": 71621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 71535,
											"end": 71621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71578,
											"end": 71610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71578,
											"end": 71610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 71578,
											"end": 71610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71578,
											"end": 71610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71607,
											"end": 71608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71578,
											"end": 71610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71578,
											"end": 71610,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71578,
											"end": 71610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 71578,
											"end": 71610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 71535,
											"end": 71621,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 71535,
											"end": 71621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71630,
											"end": 71654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 71638,
											"end": 71642,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71644,
											"end": 71646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71648,
											"end": 71653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71630,
											"end": 71637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 71630,
											"end": 71654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37491,
											"end": 37753,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 37491,
											"end": 37753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37544,
											"end": 37551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37575,
											"end": 37579,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37584,
											"end": 37595,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1909"
										},
										{
											"begin": 37567,
											"end": 37595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37567,
											"end": 37595,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37567,
											"end": 37630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37567,
											"end": 37630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37567,
											"end": 37630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 37567,
											"end": 37630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37567,
											"end": 37630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37616,
											"end": 37630,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1907"
										},
										{
											"begin": 37599,
											"end": 37612,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 37599,
											"end": 37630,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37567,
											"end": 37630,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 37567,
											"end": 37630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37563,
											"end": 37747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37563,
											"end": 37747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 37563,
											"end": 37747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37653,
											"end": 37675,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1905"
										},
										{
											"begin": 37653,
											"end": 37675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37491,
											"end": 37753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37563,
											"end": 37747,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 37563,
											"end": 37747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37713,
											"end": 37736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35725,
											"end": 35820,
											"name": "PUSH",
											"source": 0,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 37872,
											"end": 37883,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1911"
										},
										{
											"begin": 7292,
											"end": 7310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 37885,
											"end": 37899,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1913"
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 37901,
											"end": 37914,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 7378,
											"end": 7396,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7378,
											"end": 7396,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7371,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 37924,
											"end": 37928,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7421,
											"end": 7440,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7421,
											"end": 7440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7414,
											"end": 7475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 37814,
											"end": 37821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37814,
											"end": 37821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7242,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7223,
											"end": 7242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37850,
											"end": 37930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37840,
											"end": 37931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37840,
											"end": 37931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37840,
											"end": 37931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37840,
											"end": 37931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37840,
											"end": 37931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37840,
											"end": 37931,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37833,
											"end": 37931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37833,
											"end": 37931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37759,
											"end": 37938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37759,
											"end": 37938,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61089,
											"end": 61251,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 61089,
											"end": 61251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61003,
											"end": 61009,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61003,
											"end": 61009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 61003,
											"end": 61009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59191,
											"end": 59201,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61148,
											"end": 61171,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61144,
											"end": 61245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 61144,
											"end": 61245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61194,
											"end": 61234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61194,
											"end": 61234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 61194,
											"end": 61234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61194,
											"end": 61234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59191,
											"end": 59201,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 61194,
											"end": 61234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61194,
											"end": 61234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61194,
											"end": 61234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 61194,
											"end": 61234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 73426,
											"end": 73634,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 73426,
											"end": 73634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 73496,
											"end": 73517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73496,
											"end": 73517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73492,
											"end": 73583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 73492,
											"end": 73583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73540,
											"end": 73572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73540,
											"end": 73572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 73540,
											"end": 73572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73540,
											"end": 73572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73569,
											"end": 73570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73540,
											"end": 73572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73540,
											"end": 73572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73540,
											"end": 73572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 73540,
											"end": 73572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 73492,
											"end": 73583,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 73492,
											"end": 73583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73592,
											"end": 73627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 73608,
											"end": 73609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73612,
											"end": 73619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73621,
											"end": 73626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73592,
											"end": 73599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 73592,
											"end": 73627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73952,
											"end": 74158,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 73952,
											"end": 74158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74022,
											"end": 74043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74022,
											"end": 74043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74018,
											"end": 74107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 74018,
											"end": 74107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74066,
											"end": 74096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74066,
											"end": 74096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 74066,
											"end": 74096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74066,
											"end": 74096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74093,
											"end": 74094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74066,
											"end": 74096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74066,
											"end": 74096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74066,
											"end": 74096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 74066,
											"end": 74096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 74018,
											"end": 74107,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 74018,
											"end": 74107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74116,
											"end": 74151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 74124,
											"end": 74131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74141,
											"end": 74142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74145,
											"end": 74150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74116,
											"end": 74123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 74116,
											"end": 74151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62205,
											"end": 62392,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 62205,
											"end": 62392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62297,
											"end": 62303,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 62297,
											"end": 62303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62297,
											"end": 62303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62345,
											"end": 62385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62345,
											"end": 62385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62297,
											"end": 62303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62297,
											"end": 62303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62297,
											"end": 62303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62313,
											"end": 62330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62297,
											"end": 62303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 62297,
											"end": 62303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62345,
											"end": 62385,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 62345,
											"end": 62385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62278,
											"end": 62294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62278,
											"end": 62294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62345,
											"end": 62385,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 62268,
											"end": 62392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62205,
											"end": 62392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62205,
											"end": 62392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39667,
											"end": 39793,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 39667,
											"end": 39793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39713,
											"end": 39726,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39745,
											"end": 39786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 39745,
											"end": 39750,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1916"
										},
										{
											"begin": 39772,
											"end": 39785,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39745,
											"end": 39771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 39745,
											"end": 39786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40119,
											"end": 40254,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 40119,
											"end": 40254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40168,
											"end": 40181,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40200,
											"end": 40247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40200,
											"end": 40208,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1919"
										},
										{
											"begin": 40230,
											"end": 40246,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 40200,
											"end": 40229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 40200,
											"end": 40247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38563,
											"end": 38739,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 38563,
											"end": 38739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38640,
											"end": 38647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38666,
											"end": 38732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 38699,
											"end": 38719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 38699,
											"end": 38717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 38699,
											"end": 38719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38699,
											"end": 38719,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 38699,
											"end": 38719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38721,
											"end": 38731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33584,
											"end": 33588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33578,
											"end": 33589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33602,
											"end": 33625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33602,
											"end": 33625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33658,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33645,
											"end": 33659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33645,
											"end": 33659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33638,
											"end": 33677,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33638,
											"end": 33677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33638,
											"end": 33677,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33638,
											"end": 33677,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33706,
											"end": 33710,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 33697,
											"end": 33711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33697,
											"end": 33711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33690,
											"end": 33724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33762,
											"end": 33766,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 33747,
											"end": 33767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33747,
											"end": 33767,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33747,
											"end": 33767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33382,
											"end": 33783,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47353,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 47093,
											"end": 47353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47178,
											"end": 47185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47198,
											"end": 47215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47217,
											"end": 47235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47237,
											"end": 47253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47257,
											"end": 47282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 47268,
											"end": 47272,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47274,
											"end": 47275,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47277,
											"end": 47278,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47280,
											"end": 47281,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47257,
											"end": 47267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 47257,
											"end": 47282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47257,
											"end": 47282,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 47257,
											"end": 47282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47197,
											"end": 47282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47197,
											"end": 47282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47197,
											"end": 47282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47197,
											"end": 47282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47197,
											"end": 47282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47197,
											"end": 47282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47292,
											"end": 47320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 47304,
											"end": 47309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47311,
											"end": 47319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47292,
											"end": 47303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 47292,
											"end": 47320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47292,
											"end": 47320,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 47292,
											"end": 47320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47337,
											"end": 47346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47337,
											"end": 47346,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47353,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47093,
											"end": 47353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75654,
											"end": 76086,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 75654,
											"end": 76086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75766,
											"end": 75785,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75766,
											"end": 75785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75762,
											"end": 75851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 75762,
											"end": 75851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75808,
											"end": 75840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75808,
											"end": 75840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 75808,
											"end": 75840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75808,
											"end": 75840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75837,
											"end": 75838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75808,
											"end": 75840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75808,
											"end": 75840,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75808,
											"end": 75840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 75808,
											"end": 75840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 75762,
											"end": 75851,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 75762,
											"end": 75851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75864,
											"end": 75885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75864,
											"end": 75885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75860,
											"end": 75950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 75860,
											"end": 75950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75908,
											"end": 75939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75908,
											"end": 75939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 75908,
											"end": 75939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75908,
											"end": 75939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75936,
											"end": 75937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75908,
											"end": 75939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75908,
											"end": 75939,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75908,
											"end": 75939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3968,
											"end": 4019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3941,
											"end": 3959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 75908,
											"end": 75939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3822,
											"end": 4025,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 75860,
											"end": 75950,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 75860,
											"end": 75950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75977,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75986,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75986,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75986,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75959,
											"end": 75994,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76004,
											"end": 76080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76004,
											"end": 76080,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76004,
											"end": 76080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 76004,
											"end": 76080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76054,
											"end": 76061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76047,
											"end": 76052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 76063,
											"end": 76068,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76069,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 75654,
											"end": 76086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75654,
											"end": 76086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75654,
											"end": 76086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75654,
											"end": 76086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75654,
											"end": 76086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71976,
											"end": 73083,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 71976,
											"end": 73083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72065,
											"end": 72083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72065,
											"end": 72083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72061,
											"end": 72601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 72061,
											"end": 72601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72217,
											"end": 72222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72213,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72201,
											"end": 72213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 72201,
											"end": 72222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72201,
											"end": 72222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72061,
											"end": 72601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 72061,
											"end": 72601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72061,
											"end": 72601,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72061,
											"end": 72601,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 72061,
											"end": 72601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72253,
											"end": 72272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 72275,
											"end": 72290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72308,
											"end": 72327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72308,
											"end": 72327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72308,
											"end": 72327,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 72304,
											"end": 72419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72354,
											"end": 72404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72354,
											"end": 72404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 72354,
											"end": 72404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72354,
											"end": 72404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6635,
											"end": 6667,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6635,
											"end": 6667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 72354,
											"end": 72404,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72354,
											"end": 72404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72354,
											"end": 72404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6617,
											"end": 6668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6754,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 72354,
											"end": 72404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6415,
											"end": 6760,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 72304,
											"end": 72419,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 72304,
											"end": 72419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72554,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 72557,
											"end": 72576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72557,
											"end": 72576,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72557,
											"end": 72576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72557,
											"end": 72576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72539,
											"end": 72576,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72061,
											"end": 72601,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 72061,
											"end": 72601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72615,
											"end": 72631,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72615,
											"end": 72631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 73036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 72611,
											"end": 73036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72778,
											"end": 72790,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72778,
											"end": 72799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72778,
											"end": 72799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72778,
											"end": 72799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72778,
											"end": 72799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72778,
											"end": 72799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72778,
											"end": 72799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72778,
											"end": 72799,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 73036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 72611,
											"end": 73036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 73036,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 72611,
											"end": 73036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 72998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73002,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73011,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72989,
											"end": 73011,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72611,
											"end": 73036,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 72611,
											"end": 73036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73066,
											"end": 73068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73060,
											"end": 73064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 73070,
											"end": 73075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73051,
											"end": 73076,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 71976,
											"end": 73083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71976,
											"end": 73083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71976,
											"end": 73083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71976,
											"end": 73083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9898,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 9631,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9725,
											"end": 9738,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7636,
											"end": 7702,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9754,
											"end": 9800,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9800,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9750,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 9750,
											"end": 9892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9823,
											"end": 9838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 9832,
											"end": 9837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9823,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 9823,
											"end": 9838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9823,
											"end": 9838,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 9823,
											"end": 9838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9816,
											"end": 9838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9750,
											"end": 9892,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 9750,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9876,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9869,
											"end": 9881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9869,
											"end": 9881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9869,
											"end": 9881,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45556,
											"end": 45563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45556,
											"end": 45563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45556,
											"end": 45563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46555,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 46476,
											"end": 46555,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46476,
											"end": 46555,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46472,
											"end": 46636,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46472,
											"end": 46636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 46472,
											"end": 46636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46587,
											"end": 46588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46587,
											"end": 46588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46591,
											"end": 46621,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 46591,
											"end": 46621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46623,
											"end": 46624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46571,
											"end": 46625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 46571,
											"end": 46625,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46472,
											"end": 46636,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 46472,
											"end": 46636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46730,
											"end": 46744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7713,
											"end": 7738,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 7713,
											"end": 7738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7713,
											"end": 7738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7786,
											"end": 7790,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7774,
											"end": 7791,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7774,
											"end": 7791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7754,
											"end": 7772,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7754,
											"end": 7772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7754,
											"end": 7772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7835,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7835,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7878,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7704,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7685,
											"end": 7704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46747,
											"end": 46771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46785,
											"end": 46805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 46805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46781,
											"end": 46894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 46781,
											"end": 46894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46837,
											"end": 46838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46837,
											"end": 46838,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46841,
											"end": 46870,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46841,
											"end": 46870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46837,
											"end": 46838,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46837,
											"end": 46838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46821,
											"end": 46883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 46821,
											"end": 46883,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46781,
											"end": 46894,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 46781,
											"end": 46894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46912,
											"end": 46918,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46920,
											"end": 46940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46920,
											"end": 46940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46920,
											"end": 46940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46920,
											"end": 46940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 46960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 46960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47486,
											"end": 48018,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 47486,
											"end": 48018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47581,
											"end": 47601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47572,
											"end": 47577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 47572,
											"end": 47601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47568,
											"end": 48012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 47568,
											"end": 48012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47486,
											"end": 48018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47486,
											"end": 48018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47486,
											"end": 48018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47568,
											"end": 48012,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 47568,
											"end": 48012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47677,
											"end": 47706,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47668,
											"end": 47673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 47668,
											"end": 47706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47668,
											"end": 47706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47664,
											"end": 48012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 47664,
											"end": 48012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47729,
											"end": 47752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47664,
											"end": 48012,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 47664,
											"end": 48012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47782,
											"end": 47817,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47773,
											"end": 47778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 47773,
											"end": 47817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47773,
											"end": 47817,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47769,
											"end": 48012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 47769,
											"end": 48012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47840,
											"end": 47886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47840,
											"end": 47886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47840,
											"end": 47886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47840,
											"end": 47886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47840,
											"end": 47886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47840,
											"end": 47886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47840,
											"end": 47886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47840,
											"end": 47886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47769,
											"end": 48012,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 47769,
											"end": 48012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47916,
											"end": 47946,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47907,
											"end": 47912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 47907,
											"end": 47946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47907,
											"end": 47946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47903,
											"end": 48012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 47903,
											"end": 48012,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47969,
											"end": 48001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47969,
											"end": 48001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35E2F383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47969,
											"end": 48001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47969,
											"end": 48001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47969,
											"end": 48001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47969,
											"end": 48001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47969,
											"end": 48001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47969,
											"end": 48001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1296,
											"end": 1473,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8729,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 8324,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8396,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8408,
											"end": 8419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 8433,
											"end": 8437,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8422,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 8422,
											"end": 8438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8557,
											"end": 8559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8408,
											"end": 8438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8408,
											"end": 8438,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8526,
											"end": 8543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8526,
											"end": 8543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8546,
											"end": 8560,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8636,
											"end": 8652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8636,
											"end": 8652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8636,
											"end": 8652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8681,
											"end": 8685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8672,
											"end": 8686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8672,
											"end": 8686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8636,
											"end": 8652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8324,
											"end": 8729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 9046,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 8801,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8862,
											"end": 8869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8934,
											"end": 8938,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8898,
											"end": 8938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8898,
											"end": 8938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 8963,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8952,
											"end": 8963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8963,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8948,
											"end": 9017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8948,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8948,
											"end": 9017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CD44AC3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8986,
											"end": 9006,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 437,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 14,
											"end": 437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 170,
											"end": 176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 167,
											"end": 168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 164,
											"end": 177,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 156,
											"end": 318,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 232,
											"end": 236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 288,
											"end": 301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 288,
											"end": 301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 284,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 284,
											"end": 306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 278,
											"end": 307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 260,
											"end": 271,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 260,
											"end": 271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 256,
											"end": 276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 256,
											"end": 276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 249,
											"end": 308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 185,
											"end": 197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 156,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 156,
											"end": 318,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 156,
											"end": 318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 160,
											"end": 163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 363,
											"end": 364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 342,
											"end": 345,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 338,
											"end": 354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 334,
											"end": 361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 327,
											"end": 365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 426,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 415,
											"end": 422,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 410,
											"end": 412,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 398,
											"end": 413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 423,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 392,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 385,
											"end": 424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 381,
											"end": 431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 374,
											"end": 431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 374,
											"end": 431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 437,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 662,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 442,
											"end": 662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 573,
											"end": 594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 554,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 652,
											"end": 654,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 637,
											"end": 655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 611,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 611,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 611,
											"end": 656,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 611,
											"end": 656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 603,
											"end": 656,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 442,
											"end": 662,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 442,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 840,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 667,
											"end": 840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 735,
											"end": 755,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 784,
											"end": 815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 774,
											"end": 816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 816,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 764,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 764,
											"end": 834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 820,
											"end": 832,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 764,
											"end": 834,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 764,
											"end": 834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 667,
											"end": 840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 667,
											"end": 840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 667,
											"end": 840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 1099,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 845,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 971,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 949,
											"end": 972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 945,
											"end": 977,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 942,
											"end": 994,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 942,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 990,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 980,
											"end": 992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 942,
											"end": 994,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 942,
											"end": 994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 1032,
											"end": 1041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1013,
											"end": 1042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 1013,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1042,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 845,
											"end": 1099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1612,
											"end": 1621,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1622,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1595,
											"end": 1627,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 1592,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1663,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1663,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1711,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 1711,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1749,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1800,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1806,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2182,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2280,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2292,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2297,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2312,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 2262,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2356,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2182,
											"end": 2362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2367,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2454,
											"end": 2477,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2447,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 2518,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2558,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2959,
											"end": 2962,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3027,
											"end": 3030,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3022,
											"end": 3024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3020,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 3095,
											"end": 3098,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3084,
											"end": 3093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3072,
											"end": 3078,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 3054,
											"end": 3100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3100,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 3054,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3158,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3120,
											"end": 3129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3208,
											"end": 3214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 3182,
											"end": 3215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3215,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3182,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3246,
											"end": 3248,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3258,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3292,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3274,
											"end": 3293,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3267,
											"end": 3328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3318,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3372,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3431,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3431,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3594,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3594,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3594,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3633,
											"end": 3634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3643,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3781,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3781,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3781,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 3659,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3622,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "SWAP13",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 3817,
											"name": "SWAP12",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2558,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4155,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4181,
											"end": 4187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4245,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4230,
											"end": 4239,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4221,
											"end": 4228,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4246,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4263,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4210,
											"end": 4263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4259,
											"end": 4260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4261,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4263,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4210,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4301,
											"end": 4310,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4282,
											"end": 4311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4311,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4362,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4330,
											"end": 4368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4368,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 4330,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4320,
											"end": 4368,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4320,
											"end": 4368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4415,
											"end": 4417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4419,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4419,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4468,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4455,
											"end": 4464,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4438,
											"end": 4470,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4523,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4509,
											"end": 4518,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4505,
											"end": 4524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4492,
											"end": 4525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4565,
											"end": 4569,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4558,
											"end": 4563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4544,
											"end": 4571,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4534,
											"end": 4589,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4583,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4587,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4589,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4534,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4613,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4660,
											"end": 4663,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4645,
											"end": 4664,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4665,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4665,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4712,
											"end": 4715,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4717,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4717,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4030,
											"end": 4723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4030,
											"end": 4723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4857,
											"end": 4859,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4832,
											"end": 4855,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4860,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4875,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4825,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4915,
											"end": 4924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4896,
											"end": 4925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4896,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 4978,
											"end": 4980,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 4944,
											"end": 4982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 4944,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5373,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4993,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5073,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5068,
											"end": 5080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5080,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5190,
											"end": 5194,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 5182,
											"end": 5188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5178,
											"end": 5195,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 5136,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5243,
											"end": 5245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5235,
											"end": 5241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5246,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5209,
											"end": 5247,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 5206,
											"end": 5367,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5289,
											"end": 5299,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5284,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5324,
											"end": 5328,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5321,
											"end": 5322,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5367,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 5206,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5206,
											"end": 5367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5373,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6765,
											"end": 6987,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 6765,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6851,
											"end": 6861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6851,
											"end": 6861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6851,
											"end": 6861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6848,
											"end": 6981,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6848,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6848,
											"end": 6981,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6913,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 6898,
											"end": 6901,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6894,
											"end": 6914,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6942,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6935,
											"end": 6936,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6928,
											"end": 6943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 6970,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 6971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7889,
											"end": 8016,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 7889,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7950,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 7945,
											"end": 7948,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7941,
											"end": 7961,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7931,
											"end": 7962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7981,
											"end": 7985,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7978,
											"end": 7979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7971,
											"end": 7986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8009,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8002,
											"end": 8003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7995,
											"end": 8010,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/SuperToken_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"ummanmemmedov2005@gmail.com\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperToken_flattened.sol\":\"SuperToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SuperToken_flattened.sol\":{\"keccak256\":\"0x741cfa77b9e9f8d68b14df751b78fa9ade03a2e71bd41effb4a47d1066912dbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7597b989944200e71b211ace33030b0b1393509ab4a91f9f61bc242feac03404\",\"dweb:/ipfs/QmPRzmSxuX9VccirRHL6yCGVSsMNsdJsbiWgMoPXhRwJ2M\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2909,
								"contract": "contracts/SuperToken_flattened.sol:SuperToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2915,
								"contract": "contracts/SuperToken_flattened.sol:SuperToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2917,
								"contract": "contracts/SuperToken_flattened.sol:SuperToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2919,
								"contract": "contracts/SuperToken_flattened.sol:SuperToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2921,
								"contract": "contracts/SuperToken_flattened.sol:SuperToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2656,
								"contract": "contracts/SuperToken_flattened.sol:SuperToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1921,
								"contract": "contracts/SuperToken_flattened.sol:SuperToken",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1923,
								"contract": "contracts/SuperToken_flattened.sol:SuperToken",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 13,
								"contract": "contracts/SuperToken_flattened.sol:SuperToken",
								"label": "_nonces",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SuperToken_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/SuperToken_flattened.sol",
					"exportedSymbols": {
						"Context": [
							2650
						],
						"ECDSA": [
							2458
						],
						"EIP712": [
							2111
						],
						"ERC20": [
							3401
						],
						"ERC20Burnable": [
							3585
						],
						"ERC20Permit": [
							3544
						],
						"IERC1155Errors": [
							2629
						],
						"IERC20": [
							2872
						],
						"IERC20Errors": [
							2534
						],
						"IERC20Metadata": [
							2895
						],
						"IERC20Permit": [
							2493
						],
						"IERC5267": [
							91
						],
						"IERC721Errors": [
							2582
						],
						"Math": [
							1571
						],
						"MessageHashUtils": [
							1892
						],
						"Nonces": [
							67
						],
						"Ownable": [
							2795
						],
						"ShortString": [
							203
						],
						"ShortStrings": [
							414
						],
						"SignedMath": [
							518
						],
						"StorageSlot": [
							200
						],
						"Strings": [
							1821
						],
						"SuperToken": [
							3638
						]
					},
					"id": 3639,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "151:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "177:83:0",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "Nonces",
							"nameLocation": "279:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "292:90:0",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 9,
									"name": "InvalidAccountNonce",
									"nameLocation": "393:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "421:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "413:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "438:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "430:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:39:0"
									},
									"src": "387:65:0"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "502:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "458:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 12,
										"keyName": "account",
										"keyNameLocation": "474:7:0",
										"keyType": {
											"id": 10,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "466:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "458:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 11,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "485:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "659:38:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 21,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "676:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 23,
													"indexExpression": {
														"id": 22,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "684:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "676:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 24,
												"nodeType": "Return",
												"src": "669:21:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "516:69:0",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "599:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:15:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "650:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "649:9:0"
									},
									"scope": 67,
									"src": "590:107:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "880:326:0",
										"statements": [
											{
												"id": 39,
												"nodeType": "UncheckedBlock",
												"src": "1083:117:0",
												"statements": [
													{
														"expression": {
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1173:16:0",
															"subExpression": {
																"baseExpression": {
																	"id": 34,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1173:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 36,
																"indexExpression": {
																	"id": 35,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1181:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1173:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 33,
														"id": 38,
														"nodeType": "Return",
														"src": "1166:23:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "703:103:0",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "820:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "838:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "830:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:15:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "871:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:9:0"
									},
									"scope": 67,
									"src": "811:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "1390:149:0",
										"statements": [
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "1408:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 65,
														"src": "1400:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1400:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"arguments": [
														{
															"id": 52,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1428:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 51,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1418:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1400:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 55,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1448:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 56,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1448:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 64,
												"nodeType": "IfStatement",
												"src": "1444:89:0",
												"trueBody": {
													"id": 63,
													"nodeType": "Block",
													"src": "1466:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 59,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "1507:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 60,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "1514:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 58,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1487:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1487:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 62,
															"nodeType": "RevertStatement",
															"src": "1480:42:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1212:100:0",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "1326:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1366:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1358:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1342:30:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:0:0"
									},
									"scope": 67,
									"src": "1317:222:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "261:1280:0",
							"usedErrors": [
								9
							],
							"usedEvents": []
						},
						{
							"id": 68,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1677:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IERC5267",
							"nameLocation": "1713:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1728:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 71,
									"name": "EIP712DomainChanged",
									"nameLocation": "1823:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1842:2:0"
									},
									"src": "1817:28:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1851:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "2005:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2017:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "2087:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2080:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 74,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2121:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2107:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2107:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2153:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2139:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 78,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "2182:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2174:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "2211:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2203:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2250:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2242:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "2285:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2268:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 86,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"nodeType": "ArrayTypeName",
													"src": "2268:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:239:0"
									},
									"scope": 91,
									"src": "1996:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3639,
							"src": "1703:605:0",
							"usedErrors": [],
							"usedEvents": [
								71
							]
						},
						{
							"id": 92,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2528:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 93,
								"nodeType": "StructuredDocumentation",
								"src": "2554:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 200,
							"linearizedBaseContracts": [
								200
							],
							"name": "StorageSlot",
							"nameLocation": "3588:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 96,
									"members": [
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3643:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "3635:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 94,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3635:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "3613:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3606:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 99,
									"members": [
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3695:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 99,
											"src": "3690:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 97,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3690:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "3668:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3661:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 102,
									"members": [
										{
											"constant": false,
											"id": 101,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3750:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 102,
											"src": "3742:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 100,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "3742:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "3720:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3713:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 105,
									"members": [
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3805:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 105,
											"src": "3797:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3797:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "3775:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3768:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 108,
									"members": [
										{
											"constant": false,
											"id": 107,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3858:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 108,
											"src": "3851:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 106,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3851:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "3830:10:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3823:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 111,
									"members": [
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3909:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "3903:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 109,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "3903:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "3883:9:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3876:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "4103:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4165:38:0",
													"nodeType": "YulBlock",
													"src": "4165:38:0",
													"statements": [
														{
															"nativeSrc": "4179:14:0",
															"nodeType": "YulAssignment",
															"src": "4179:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "4189:4:0",
																"nodeType": "YulIdentifier",
																"src": "4189:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4179:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4179:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 118,
														"isOffset": false,
														"isSlot": true,
														"src": "4179:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "4189:4:0",
														"valueSize": 1
													}
												],
												"id": 120,
												"nodeType": "InlineAssembly",
												"src": "4156:47:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3927:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "4028:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4051:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4043:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4042:14:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4100:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4080:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$96_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 117,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 116,
														"name": "AddressSlot",
														"nameLocations": [
															"4080:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 96,
														"src": "4080:11:0"
													},
													"referencedDeclaration": 96,
													"src": "4080:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$96_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:23:0"
									},
									"scope": 200,
									"src": "4019:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "4391:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4453:38:0",
													"nodeType": "YulBlock",
													"src": "4453:38:0",
													"statements": [
														{
															"nativeSrc": "4467:14:0",
															"nodeType": "YulAssignment",
															"src": "4467:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "4477:4:0",
																"nodeType": "YulIdentifier",
																"src": "4477:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4467:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4467:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 129,
														"isOffset": false,
														"isSlot": true,
														"src": "4467:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "4477:4:0",
														"valueSize": 1
													}
												],
												"id": 131,
												"nodeType": "InlineAssembly",
												"src": "4444:47:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4215:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "4316:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4339:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4331:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 124,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4330:14:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4388:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4368:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$99_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 128,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 127,
														"name": "BooleanSlot",
														"nameLocations": [
															"4368:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 99,
														"src": "4368:11:0"
													},
													"referencedDeclaration": 99,
													"src": "4368:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$99_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4367:23:0"
									},
									"scope": 200,
									"src": "4307:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "4679:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4741:38:0",
													"nodeType": "YulBlock",
													"src": "4741:38:0",
													"statements": [
														{
															"nativeSrc": "4755:14:0",
															"nodeType": "YulAssignment",
															"src": "4755:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "4765:4:0",
																"nodeType": "YulIdentifier",
																"src": "4765:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4755:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 140,
														"isOffset": false,
														"isSlot": true,
														"src": "4755:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "4765:4:0",
														"valueSize": 1
													}
												],
												"id": 142,
												"nodeType": "InlineAssembly",
												"src": "4732:47:0"
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4503:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "4604:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4627:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4619:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:14:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4656:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$102_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 138,
														"name": "Bytes32Slot",
														"nameLocations": [
															"4656:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 102,
														"src": "4656:11:0"
													},
													"referencedDeclaration": 102,
													"src": "4656:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$102_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4655:23:0"
									},
									"scope": 200,
									"src": "4595:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "4967:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5029:38:0",
													"nodeType": "YulBlock",
													"src": "5029:38:0",
													"statements": [
														{
															"nativeSrc": "5043:14:0",
															"nodeType": "YulAssignment",
															"src": "5043:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "5053:4:0",
																"nodeType": "YulIdentifier",
																"src": "5053:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5043:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5043:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 151,
														"isOffset": false,
														"isSlot": true,
														"src": "5043:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "5053:4:0",
														"valueSize": 1
													}
												],
												"id": 153,
												"nodeType": "InlineAssembly",
												"src": "5020:47:0"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "4791:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "4892:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4915:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4907:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4906:14:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4964:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4944:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$105_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 149,
														"name": "Uint256Slot",
														"nameLocations": [
															"4944:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 105,
														"src": "4944:11:0"
													},
													"referencedDeclaration": 105,
													"src": "4944:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$105_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4943:23:0"
									},
									"scope": 200,
									"src": "4883:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5252:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5314:38:0",
													"nodeType": "YulBlock",
													"src": "5314:38:0",
													"statements": [
														{
															"nativeSrc": "5328:14:0",
															"nodeType": "YulAssignment",
															"src": "5328:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "5338:4:0",
																"nodeType": "YulIdentifier",
																"src": "5338:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5328:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 162,
														"isOffset": false,
														"isSlot": true,
														"src": "5328:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "5338:4:0",
														"valueSize": 1
													}
												],
												"id": 164,
												"nodeType": "InlineAssembly",
												"src": "5305:47:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5079:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "5179:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "5201:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5192:14:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5249:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5230:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 161,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 160,
														"name": "StringSlot",
														"nameLocations": [
															"5230:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 108,
														"src": "5230:10:0"
													},
													"referencedDeclaration": 108,
													"src": "5230:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5229:22:0"
									},
									"scope": 200,
									"src": "5170:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5560:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5622:44:0",
													"nodeType": "YulBlock",
													"src": "5622:44:0",
													"statements": [
														{
															"nativeSrc": "5636:20:0",
															"nodeType": "YulAssignment",
															"src": "5636:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "5646:10:0",
																"nodeType": "YulIdentifier",
																"src": "5646:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5636:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 173,
														"isOffset": false,
														"isSlot": true,
														"src": "5636:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 169,
														"isOffset": false,
														"isSlot": true,
														"src": "5646:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 175,
												"nodeType": "InlineAssembly",
												"src": "5613:53:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5364:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "5479:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "5508:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5493:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 168,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5493:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5492:22:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5557:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5538:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 171,
														"name": "StringSlot",
														"nameLocations": [
															"5538:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 108,
														"src": "5538:10:0"
													},
													"referencedDeclaration": 108,
													"src": "5538:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5537:22:0"
									},
									"scope": 200,
									"src": "5470:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "5848:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5910:38:0",
													"nodeType": "YulBlock",
													"src": "5910:38:0",
													"statements": [
														{
															"nativeSrc": "5924:14:0",
															"nodeType": "YulAssignment",
															"src": "5924:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "5934:4:0",
																"nodeType": "YulIdentifier",
																"src": "5934:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5924:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5924:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 184,
														"isOffset": false,
														"isSlot": true,
														"src": "5924:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 180,
														"isOffset": false,
														"isSlot": false,
														"src": "5934:4:0",
														"valueSize": 1
													}
												],
												"id": 186,
												"nodeType": "InlineAssembly",
												"src": "5901:47:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5678:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "5777:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "5798:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5790:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:14:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5845:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5827:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 182,
														"name": "BytesSlot",
														"nameLocations": [
															"5827:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "5827:9:0"
													},
													"referencedDeclaration": 111,
													"src": "5827:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:21:0"
									},
									"scope": 200,
									"src": "5768:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "6151:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "6213:44:0",
													"nodeType": "YulBlock",
													"src": "6213:44:0",
													"statements": [
														{
															"nativeSrc": "6227:20:0",
															"nodeType": "YulAssignment",
															"src": "6227:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "6237:10:0",
																"nodeType": "YulIdentifier",
																"src": "6237:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "6227:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6227:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 195,
														"isOffset": false,
														"isSlot": true,
														"src": "6227:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 191,
														"isOffset": false,
														"isSlot": true,
														"src": "6237:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 197,
												"nodeType": "InlineAssembly",
												"src": "6204:53:0"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "5960:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "6073:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "6100:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6086:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6086:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6085:21:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6148:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6130:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 193,
														"name": "BytesSlot",
														"nameLocations": [
															"6130:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "6130:9:0"
													},
													"referencedDeclaration": 111,
													"src": "6130:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6129:21:0"
									},
									"scope": 200,
									"src": "6064:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "3580:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6399:24:0"
						},
						{
							"canonicalName": "ShortString",
							"id": 203,
							"name": "ShortString",
							"nameLocation": "6599:11:0",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "6594:28:0",
							"underlyingType": {
								"id": 202,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "6614:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 204,
								"nodeType": "StructuredDocumentation",
								"src": "6624:876:0",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 414,
							"linearizedBaseContracts": [
								414
							],
							"name": "ShortStrings",
							"nameLocation": "7509:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 207,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "7616:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 414,
									"src": "7591:111:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 205,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7591:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 206,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7636:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 211,
									"name": "StringTooLong",
									"nameLocation": "7715:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "7736:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "7729:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7729:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7728:12:0"
									},
									"src": "7709:32:0"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 213,
									"name": "InvalidShortString",
									"nameLocation": "7752:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7770:2:0"
									},
									"src": "7746:27:0"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "8032:208:0",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "8055:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "8042:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 222,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8042:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"id": 226,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "8068:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8062:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 224,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8062:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8062:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8042:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 229,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "8086:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8091:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8086:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8100:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "8086:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 238,
												"nodeType": "IfStatement",
												"src": "8082:72:0",
												"trueBody": {
													"id": 237,
													"nodeType": "Block",
													"src": "8104:50:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 234,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "8139:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 233,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "8125:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8125:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 236,
															"nodeType": "RevertStatement",
															"src": "8118:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 247,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 223,
																						"src": "8211:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 246,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8203:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 245,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "8203:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8203:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8195:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 243,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8195:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8195:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 250,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "8220:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8225:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "8220:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8195:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8187:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 241,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8187:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8187:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 239,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "8170:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8182:4:0",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "8170:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$203_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8170:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 221,
												"id": 255,
												"nodeType": "Return",
												"src": "8163:70:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "7779:170:0",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "7963:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "7991:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7977:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7977:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7976:19:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8019:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 219,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 218,
														"name": "ShortString",
														"nameLocations": [
															"8019:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "8019:11:0"
													},
													"referencedDeclaration": 203,
													"src": "8019:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8018:13:0"
									},
									"scope": 414,
									"src": "7954:286:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "8398:331:0",
										"statements": [
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "8416:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "8408:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8408:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"arguments": [
														{
															"id": 269,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "8433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														],
														"id": 268,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "8422:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8422:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8408:30:0"
											},
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "8540:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "8526:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 272,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8526:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8557:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8546:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 274,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8550:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8546:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8526:34:0"
											},
											{
												"AST": {
													"nativeSrc": "8622:81:0",
													"nodeType": "YulBlock",
													"src": "8622:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "8643:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "8643:3:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8648:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "8648:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8636:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8636:6:0"
																},
																"nativeSrc": "8636:16:0",
																"nodeType": "YulFunctionCall",
																"src": "8636:16:0"
															},
															"nativeSrc": "8636:16:0",
															"nodeType": "YulExpressionStatement",
															"src": "8636:16:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "8676:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "8676:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8681:4:0",
																				"nodeType": "YulLiteral",
																				"src": "8681:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8672:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8672:3:0"
																		},
																		"nativeSrc": "8672:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8672:14:0"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "8688:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "8688:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8665:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8665:6:0"
																},
																"nativeSrc": "8665:28:0",
																"nodeType": "YulFunctionCall",
																"src": "8665:28:0"
															},
															"nativeSrc": "8665:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "8665:28:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 267,
														"isOffset": false,
														"isSlot": false,
														"src": "8648:3:0",
														"valueSize": 1
													},
													{
														"declaration": 261,
														"isOffset": false,
														"isSlot": false,
														"src": "8688:4:0",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "8643:3:0",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "8676:3:0",
														"valueSize": 1
													}
												],
												"id": 279,
												"nodeType": "InlineAssembly",
												"src": "8613:90:0"
											},
											{
												"expression": {
													"id": 280,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 273,
													"src": "8719:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 265,
												"id": 281,
												"nodeType": "Return",
												"src": "8712:10:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "8246:73:0",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "8333:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "8354:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "8342:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 259,
														"name": "ShortString",
														"nameLocations": [
															"8342:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "8342:11:0"
													},
													"referencedDeclaration": 203,
													"src": "8342:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8341:18:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "8383:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8383:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8382:15:0"
									},
									"scope": 414,
									"src": "8324:405:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "8871:175:0",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8889:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "8881:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8881:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 298,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "8925:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 296,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "8906:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8918:6:0",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "8906:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8906:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8898:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 294,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8898:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8898:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8934:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "8898:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8881:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 304,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "8952:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8961:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "8952:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 311,
												"nodeType": "IfStatement",
												"src": "8948:69:0",
												"trueBody": {
													"id": 310,
													"nodeType": "Block",
													"src": "8965:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 307,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "8986:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8986:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 309,
															"nodeType": "RevertStatement",
															"src": "8979:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 312,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 293,
													"src": "9033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 291,
												"id": 313,
												"nodeType": "Return",
												"src": "9026:13:0"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "8735:61:0",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "8810:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "8833:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "8821:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 286,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 285,
														"name": "ShortString",
														"nameLocations": [
															"8821:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "8821:11:0"
													},
													"referencedDeclaration": 203,
													"src": "8821:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8820:18:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "8862:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8861:9:0"
									},
									"scope": 414,
									"src": "8801:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "9269:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 328,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "9289:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9283:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 326,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "9283:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9283:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9296:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9283:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9305:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "9283:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "9367:127:0",
													"statements": [
														{
															"expression": {
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 341,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 320,
																				"src": "9407:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 338,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "9381:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$200_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9393:13:0",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 177,
																			"src": "9381:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$108_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9381:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9414:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "9381:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "9422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "9381:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 346,
															"nodeType": "ExpressionStatement",
															"src": "9381:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 349,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "9465:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 347,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "9448:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9460:4:0",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "9448:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$203_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9448:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 325,
															"id": 351,
															"nodeType": "Return",
															"src": "9441:42:0"
														}
													]
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "9279:215:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "9309:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 334,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "9344:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 333,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "9330:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$203_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9330:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 325,
															"id": 336,
															"nodeType": "Return",
															"src": "9323:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "9052:103:0",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "9169:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9209:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9195:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9195:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "9231:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9216:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9216:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9194:43:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9256:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 322,
														"name": "ShortString",
														"nameLocations": [
															"9256:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "9256:11:0"
													},
													"referencedDeclaration": 203,
													"src": "9256:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9255:13:0"
									},
									"scope": 414,
									"src": "9160:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "9740:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 368,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "9773:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 366,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "9754:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "9766:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "9754:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9754:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 370,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "9783:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "9754:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 379,
													"nodeType": "Block",
													"src": "9855:37:0",
													"statements": [
														{
															"expression": {
																"id": 377,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "9876:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 365,
															"id": 378,
															"nodeType": "Return",
															"src": "9869:12:0"
														}
													]
												},
												"id": 380,
												"nodeType": "IfStatement",
												"src": "9750:142:0",
												"trueBody": {
													"id": 376,
													"nodeType": "Block",
													"src": "9802:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "9832:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 372,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "9823:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9823:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 365,
															"id": 375,
															"nodeType": "Return",
															"src": "9816:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "9506:120:0",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "9640:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9673:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9661:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "ShortString",
														"nameLocations": [
															"9661:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "9661:11:0"
													},
													"referencedDeclaration": 203,
													"src": "9661:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "9695:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9680:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9680:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9660:41:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9725:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9724:15:0"
									},
									"scope": 414,
									"src": "9631:267:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "10378:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 395,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "10411:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 393,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "10392:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10404:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "10392:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10392:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 397,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "10421:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "10392:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 410,
													"nodeType": "Block",
													"src": "10495:51:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 406,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "10522:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10516:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 404,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "10516:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10516:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10529:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10516:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 392,
															"id": 409,
															"nodeType": "Return",
															"src": "10509:26:0"
														}
													]
												},
												"id": 411,
												"nodeType": "IfStatement",
												"src": "10388:158:0",
												"trueBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "10440:49:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 400,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "10472:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 399,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "10461:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10461:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 392,
															"id": 402,
															"nodeType": "Return",
															"src": "10454:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "9904:364:0",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "10282:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10317:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "10305:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 384,
														"name": "ShortString",
														"nameLocations": [
															"10305:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "10305:11:0"
													},
													"referencedDeclaration": 203,
													"src": "10305:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "10339:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "10324:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10324:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10304:41:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "10369:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10368:9:0"
									},
									"scope": 414,
									"src": "10273:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "7501:3053:0",
							"usedErrors": [
								211,
								213
							],
							"usedEvents": []
						},
						{
							"id": 415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10694:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 416,
								"nodeType": "StructuredDocumentation",
								"src": "10720:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 518,
							"linearizedBaseContracts": [
								518
							],
							"name": "SignedMath",
							"nameLocation": "10809:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "10961:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 426,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "10978:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 427,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "10982:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "10978:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 430,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "10990:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10978:13:0",
													"trueExpression": {
														"id": 429,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "10986:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 425,
												"id": 432,
												"nodeType": "Return",
												"src": "10971:20:0"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "10826:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "10906:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10917:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "10910:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 418,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10910:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10927:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "10920:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 420,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10920:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10909:20:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "10953:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 423,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10953:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10952:8:0"
									},
									"scope": 518,
									"src": "10897:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "11140:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 444,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "11157:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 445,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "11161:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "11157:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 448,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "11169:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11157:13:0",
													"trueExpression": {
														"id": 447,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "11165:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 443,
												"id": 450,
												"nodeType": "Return",
												"src": "11150:20:0"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "11004:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "11085:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11096:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "11089:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 436,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11089:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11106:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "11099:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 438,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11099:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11088:20:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "11132:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 441,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11132:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11131:8:0"
									},
									"scope": 518,
									"src": "11076:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "11382:162:0",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "11451:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "11444:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 462,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "11444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 476,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 464,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "11456:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 465,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "11460:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "11456:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 467,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 468,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "11467:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 469,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "11471:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "11467:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 471,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11466:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11477:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11466:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 474,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11465:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "11455:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11444:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 477,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "11496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 482,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 463,
																						"src": "11516:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 481,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "11508:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 480,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "11508:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11508:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11522:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "11508:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11501:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 478,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11501:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11501:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 487,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "11530:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 488,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "11534:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "11530:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 490,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11529:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "11501:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 492,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11500:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "11496:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 461,
												"id": 494,
												"nodeType": "Return",
												"src": "11489:48:0"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "11183:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "11323:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11338:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11331:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 454,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11331:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11348:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11341:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 456,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11341:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11330:20:0"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11374:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 459,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11373:8:0"
									},
									"scope": 518,
									"src": "11314:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "11688:158:0",
										"statements": [
											{
												"id": 515,
												"nodeType": "UncheckedBlock",
												"src": "11698:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 506,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "11813:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11818:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "11813:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "11826:2:0",
																		"subExpression": {
																			"id": 510,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "11827:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "11813:15:0",
																	"trueExpression": {
																		"id": 509,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "11822:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11805:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 504,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11805:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11805:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 503,
														"id": 514,
														"nodeType": "Return",
														"src": "11798:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "11550:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "11642:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11653:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11646:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 498,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11646:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11645:10:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11679:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11678:9:0"
									},
									"scope": 518,
									"src": "11633:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "10801:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 519,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11976:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 520,
								"nodeType": "StructuredDocumentation",
								"src": "12002:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1571,
							"linearizedBaseContracts": [
								1571
							],
							"name": "Math",
							"nameLocation": "12084:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "12095:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 523,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "12156:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12176:2:0"
									},
									"src": "12150:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 528,
									"members": [
										{
											"id": 524,
											"name": "Floor",
											"nameLocation": "12209:5:0",
											"nodeType": "EnumValue",
											"src": "12209:5:0"
										},
										{
											"id": 525,
											"name": "Ceil",
											"nameLocation": "12252:4:0",
											"nodeType": "EnumValue",
											"src": "12252:4:0"
										},
										{
											"id": 526,
											"name": "Trunc",
											"nameLocation": "12294:5:0",
											"nodeType": "EnumValue",
											"src": "12294:5:0"
										},
										{
											"id": 527,
											"name": "Expand",
											"nameLocation": "12324:6:0",
											"nodeType": "EnumValue",
											"src": "12324:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "12190:8:0",
									"nodeType": "EnumDefinition",
									"src": "12185:169:0"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "12534:140:0",
										"statements": [
											{
												"id": 558,
												"nodeType": "UncheckedBlock",
												"src": "12544:124:0",
												"statements": [
													{
														"assignments": [
															541
														],
														"declarations": [
															{
																"constant": false,
																"id": 541,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "12576:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "12568:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12568:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 545,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 542,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "12580:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 543,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "12584:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12580:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12568:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "12603:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "12607:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "12599:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12618:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12625:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12617:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 539,
															"id": 552,
															"nodeType": "Return",
															"src": "12610:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12649:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 555,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "12655:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 556,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12648:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 539,
														"id": 557,
														"nodeType": "Return",
														"src": "12641:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "12360:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "12467:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12482:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12474:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12493:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12485:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12473:22:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12519:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12519:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12525:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12518:15:0"
									},
									"scope": 1571,
									"src": "12458:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "12857:113:0",
										"statements": [
											{
												"id": 586,
												"nodeType": "UncheckedBlock",
												"src": "12867:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "12895:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 573,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "12899:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 579,
														"nodeType": "IfStatement",
														"src": "12891:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12910:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12917:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12909:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 571,
															"id": 578,
															"nodeType": "Return",
															"src": "12902:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12941:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 581,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "12947:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 582,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "12951:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12947:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 584,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12940:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 571,
														"id": 585,
														"nodeType": "Return",
														"src": "12933:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "12680:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "12790:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12805:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12797:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12816:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12808:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12796:22:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12842:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12842:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12848:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12841:15:0"
									},
									"scope": 1571,
									"src": "12781:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "13156:417:0",
										"statements": [
											{
												"id": 628,
												"nodeType": "UncheckedBlock",
												"src": "13166:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "13424:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13429:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 607,
														"nodeType": "IfStatement",
														"src": "13420:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13440:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13446:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 605,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13439:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 599,
															"id": 606,
															"nodeType": "Return",
															"src": "13432:16:0"
														}
													},
													{
														"assignments": [
															609
														],
														"declarations": [
															{
																"constant": false,
																"id": 609,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "13470:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 628,
																"src": "13462:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 608,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13462:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 613,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 610,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "13474:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 611,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "13478:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13474:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13462:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 614,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "13497:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 615,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "13501:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13497:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 617,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "13506:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13497:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "13493:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13517:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13524:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13516:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 599,
															"id": 622,
															"nodeType": "Return",
															"src": "13509:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13548:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 625,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "13554:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 626,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13547:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 599,
														"id": 627,
														"nodeType": "Return",
														"src": "13540:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "12976:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "13089:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13104:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13096:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13115:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13107:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13095:22:0"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13141:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13141:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13147:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13140:15:0"
									},
									"scope": 1571,
									"src": "13080:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "13760:114:0",
										"statements": [
											{
												"id": 656,
												"nodeType": "UncheckedBlock",
												"src": "13770:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 642,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "13798:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13803:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13798:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 649,
														"nodeType": "IfStatement",
														"src": "13794:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13814:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13821:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 647,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13813:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 641,
															"id": 648,
															"nodeType": "Return",
															"src": "13806:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13845:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 651,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "13851:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 652,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "13855:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13851:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 654,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13844:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 641,
														"id": 655,
														"nodeType": "Return",
														"src": "13837:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "13579:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "13693:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13708:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13700:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13719:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13699:22:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13745:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13745:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13751:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13744:15:0"
									},
									"scope": 1571,
									"src": "13684:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "14071:114:0",
										"statements": [
											{
												"id": 684,
												"nodeType": "UncheckedBlock",
												"src": "14081:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "14109:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14114:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 677,
														"nodeType": "IfStatement",
														"src": "14105:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14125:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14132:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14124:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 669,
															"id": 676,
															"nodeType": "Return",
															"src": "14117:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14156:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 679,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "14162:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 680,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "14166:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14162:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 682,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14155:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 669,
														"id": 683,
														"nodeType": "Return",
														"src": "14148:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "13880:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "14004:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14019:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "14011:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14030:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "14022:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14010:22:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "14056:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 665,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14056:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "14062:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14055:15:0"
									},
									"scope": 1571,
									"src": "13995:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "14322:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 696,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "14339:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 697,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "14343:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14339:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 700,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "14351:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14339:13:0",
													"trueExpression": {
														"id": 699,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "14347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 695,
												"id": 702,
												"nodeType": "Return",
												"src": "14332:20:0"
											}
										]
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "14191:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "14264:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14276:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "14268:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14287:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "14279:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14267:22:0"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "14313:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14312:9:0"
									},
									"scope": 1571,
									"src": "14255:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "14497:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 714,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "14514:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 715,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "14518:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14514:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 718,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "14526:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14514:13:0",
													"trueExpression": {
														"id": 717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "14522:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 713,
												"id": 720,
												"nodeType": "Return",
												"src": "14507:20:0"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "14365:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "14439:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14451:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "14443:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14462:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "14454:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14442:22:0"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "14488:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14487:9:0"
									},
									"scope": 1571,
									"src": "14430:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "14718:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 732,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "14773:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 733,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "14777:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14773:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 736,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "14783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 737,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "14787:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14783:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 739,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14782:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14792:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "14782:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14772:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 731,
												"id": 743,
												"nodeType": "Return",
												"src": "14765:28:0"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "14540:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "14656:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14672:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "14664:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14683:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "14675:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14663:22:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "14709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14708:9:0"
									},
									"scope": 1571,
									"src": "14647:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "15092:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "15106:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15111:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15106:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "15102:127:0",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "15114:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 758,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "15213:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 759,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "15217:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15213:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 754,
															"id": 761,
															"nodeType": "Return",
															"src": "15206:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 764,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "15317:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15317:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "15331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15335:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "15331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 771,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15330:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 772,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "15340:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15330:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "15330:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "15317:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 754,
												"id": 777,
												"nodeType": "Return",
												"src": "15310:35:0"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "14806:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "15030:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15046:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "15038:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15057:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "15049:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15037:22:0"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "15083:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15082:9:0"
									},
									"scope": 1571,
									"src": "15021:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "15774:4018:0",
										"statements": [
											{
												"id": 903,
												"nodeType": "UncheckedBlock",
												"src": "15784:4002:0",
												"statements": [
													{
														"assignments": [
															792
														],
														"declarations": [
															{
																"constant": false,
																"id": 792,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "16113:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "16105:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 791,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16105:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 796,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 793,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "16121:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 794,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "16125:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16121:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16105:21:0"
													},
													{
														"assignments": [
															798
														],
														"declarations": [
															{
																"constant": false,
																"id": 798,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "16193:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "16185:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 797,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16185:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 799,
														"nodeType": "VariableDeclarationStatement",
														"src": "16185:13:0"
													},
													{
														"AST": {
															"nativeSrc": "16265:122:0",
															"nodeType": "YulBlock",
															"src": "16265:122:0",
															"statements": [
																{
																	"nativeSrc": "16283:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16283:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "16300:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "16300:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "16303:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "16303:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16310:1:0",
																						"nodeType": "YulLiteral",
																						"src": "16310:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16306:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "16306:3:0"
																				},
																				"nativeSrc": "16306:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16306:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "16293:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "16293:6:0"
																		},
																		"nativeSrc": "16293:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16293:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "16287:2:0",
																			"nodeType": "YulTypedName",
																			"src": "16287:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16330:43:0",
																	"nodeType": "YulAssignment",
																	"src": "16330:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "16347:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "16347:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "16351:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "16351:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "16343:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "16343:3:0"
																				},
																				"nativeSrc": "16343:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16343:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "16362:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "16362:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "16366:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "16366:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "16359:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "16359:2:0"
																				},
																				"nativeSrc": "16359:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16359:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16339:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16339:3:0"
																		},
																		"nativeSrc": "16339:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16339:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "16330:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "16330:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "16351:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "16366:5:0",
																"valueSize": 1
															},
															{
																"declaration": 798,
																"isOffset": false,
																"isSlot": false,
																"src": "16330:5:0",
																"valueSize": 1
															},
															{
																"declaration": 782,
																"isOffset": false,
																"isSlot": false,
																"src": "16300:1:0",
																"valueSize": 1
															},
															{
																"declaration": 784,
																"isOffset": false,
																"isSlot": false,
																"src": "16303:1:0",
																"valueSize": 1
															}
														],
														"id": 800,
														"nodeType": "InlineAssembly",
														"src": "16256:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "16468:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16477:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16468:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 809,
														"nodeType": "IfStatement",
														"src": "16464:368:0",
														"trueBody": {
															"id": 808,
															"nodeType": "Block",
															"src": "16480:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 804,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "16798:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 805,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "16806:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16798:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 790,
																	"id": 807,
																	"nodeType": "Return",
																	"src": "16791:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "16938:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 811,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "16953:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16938:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 817,
														"nodeType": "IfStatement",
														"src": "16934:88:0",
														"trueBody": {
															"id": 816,
															"nodeType": "Block",
															"src": "16960:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 813,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "16985:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16985:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 815,
																	"nodeType": "RevertStatement",
																	"src": "16978:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															819
														],
														"declarations": [
															{
																"constant": false,
																"id": 819,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "17285:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "17277:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 818,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17277:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 820,
														"nodeType": "VariableDeclarationStatement",
														"src": "17277:17:0"
													},
													{
														"AST": {
															"nativeSrc": "17317:291:0",
															"nodeType": "YulBlock",
															"src": "17317:291:0",
															"statements": [
																{
																	"nativeSrc": "17386:38:0",
																	"nodeType": "YulAssignment",
																	"src": "17386:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "17406:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "17406:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "17409:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "17409:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "17412:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "17412:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "17399:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "17399:6:0"
																		},
																		"nativeSrc": "17399:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17399:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "17386:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "17386:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "17506:41:0",
																	"nodeType": "YulAssignment",
																	"src": "17506:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "17519:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "17519:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "17529:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "17529:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "17540:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "17540:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "17526:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "17526:2:0"
																				},
																				"nativeSrc": "17526:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "17526:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17515:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17515:3:0"
																		},
																		"nativeSrc": "17515:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17515:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "17506:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "17506:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "17564:30:0",
																	"nodeType": "YulAssignment",
																	"src": "17564:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "17577:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "17577:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "17584:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "17584:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17573:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17573:3:0"
																		},
																		"nativeSrc": "17573:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17573:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "17564:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "17564:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 786,
																"isOffset": false,
																"isSlot": false,
																"src": "17412:11:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "17540:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "17564:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "17577:5:0",
																"valueSize": 1
															},
															{
																"declaration": 798,
																"isOffset": false,
																"isSlot": false,
																"src": "17506:5:0",
																"valueSize": 1
															},
															{
																"declaration": 798,
																"isOffset": false,
																"isSlot": false,
																"src": "17519:5:0",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "17386:9:0",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "17529:9:0",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "17584:9:0",
																"valueSize": 1
															},
															{
																"declaration": 782,
																"isOffset": false,
																"isSlot": false,
																"src": "17406:1:0",
																"valueSize": 1
															},
															{
																"declaration": 784,
																"isOffset": false,
																"isSlot": false,
																"src": "17409:1:0",
																"valueSize": 1
															}
														],
														"id": 821,
														"nodeType": "InlineAssembly",
														"src": "17308:300:0"
													},
													{
														"assignments": [
															823
														],
														"declarations": [
															{
																"constant": false,
																"id": 823,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "17820:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "17812:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 822,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17812:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 830,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "17827:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17842:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 826,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "17846:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17842:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 828,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17841:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17827:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17812:46:0"
													},
													{
														"AST": {
															"nativeSrc": "17881:362:0",
															"nodeType": "YulBlock",
															"src": "17881:362:0",
															"statements": [
																{
																	"nativeSrc": "17946:37:0",
																	"nodeType": "YulAssignment",
																	"src": "17946:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "17965:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "17965:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "17978:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "17978:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "17961:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17961:3:0"
																		},
																		"nativeSrc": "17961:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17961:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "17946:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "17946:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "18050:25:0",
																	"nodeType": "YulAssignment",
																	"src": "18050:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "18063:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "18063:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "18070:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "18070:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "18059:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "18059:3:0"
																		},
																		"nativeSrc": "18059:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18059:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "18050:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "18050:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "18190:39:0",
																	"nodeType": "YulAssignment",
																	"src": "18190:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18210:1:0",
																								"nodeType": "YulLiteral",
																								"src": "18210:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "18213:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "18213:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "18206:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "18206:3:0"
																						},
																						"nativeSrc": "18206:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "18206:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "18220:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "18220:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "18202:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "18202:3:0"
																				},
																				"nativeSrc": "18202:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "18202:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18227:1:0",
																				"nodeType": "YulLiteral",
																				"src": "18227:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18198:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "18198:3:0"
																		},
																		"nativeSrc": "18198:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18198:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "18190:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "18190:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 786,
																"isOffset": false,
																"isSlot": false,
																"src": "17946:11:0",
																"valueSize": 1
															},
															{
																"declaration": 786,
																"isOffset": false,
																"isSlot": false,
																"src": "17965:11:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "18050:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "18063:5:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "17978:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18070:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18190:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18213:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18220:4:0",
																"valueSize": 1
															}
														],
														"id": 831,
														"nodeType": "InlineAssembly",
														"src": "17872:371:0"
													},
													{
														"expression": {
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 832,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "18309:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 833,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "18318:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 834,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "18326:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18318:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18309:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 837,
														"nodeType": "ExpressionStatement",
														"src": "18309:21:0"
													},
													{
														"assignments": [
															839
														],
														"declarations": [
															{
																"constant": false,
																"id": 839,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "18656:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "18648:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 838,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18648:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 846,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18667:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 841,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "18671:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18667:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 843,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18666:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18686:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "18666:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18648:39:0"
													},
													{
														"expression": {
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 847,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "18904:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 849,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "18919:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 850,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "18933:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18919:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18915:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18904:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 854,
														"nodeType": "ExpressionStatement",
														"src": "18904:36:0"
													},
													{
														"expression": {
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 855,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "18973:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18984:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 857,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "18988:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 858,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19002:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18988:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18984:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18973:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 862,
														"nodeType": "ExpressionStatement",
														"src": "18973:36:0"
													},
													{
														"expression": {
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 863,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19043:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19054:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 865,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19058:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 866,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19072:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19058:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19054:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19043:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 870,
														"nodeType": "ExpressionStatement",
														"src": "19043:36:0"
													},
													{
														"expression": {
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 871,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19113:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19124:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 873,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19128:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 874,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19142:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19128:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19124:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19113:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 878,
														"nodeType": "ExpressionStatement",
														"src": "19113:36:0"
													},
													{
														"expression": {
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 879,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19183:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19194:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 881,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19198:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 882,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19212:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19198:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19194:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19183:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 886,
														"nodeType": "ExpressionStatement",
														"src": "19183:36:0"
													},
													{
														"expression": {
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 887,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19254:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19265:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 889,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19269:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 890,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19283:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19269:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19265:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19254:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 894,
														"nodeType": "ExpressionStatement",
														"src": "19254:36:0"
													},
													{
														"expression": {
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 895,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "19724:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 896,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "19733:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 897,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "19741:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19733:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19724:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 900,
														"nodeType": "ExpressionStatement",
														"src": "19724:24:0"
													},
													{
														"expression": {
															"id": 901,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "19769:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 790,
														"id": 902,
														"nodeType": "Return",
														"src": "19762:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "15358:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "15685:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "15700:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15692:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "15711:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15703:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "15722:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15714:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15691:43:0"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15766:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15758:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15757:16:0"
									},
									"scope": 1571,
									"src": "15676:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "20034:192:0",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20052:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 947,
														"src": "20044:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"arguments": [
														{
															"id": 923,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "20068:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 924,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "20071:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 925,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "20074:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															905,
															948
														],
														"referencedDeclaration": 905,
														"src": "20061:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20061:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20044:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 929,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "20117:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$528",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$528",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 928,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "20100:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20100:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 932,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "20137:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 933,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "20140:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 934,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "20143:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 931,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "20130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20130:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20158:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20130:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20100:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "20096:101:0",
												"trueBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "20161:36:0",
													"statements": [
														{
															"expression": {
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 939,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "20175:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20185:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20175:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 942,
															"nodeType": "ExpressionStatement",
															"src": "20175:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 945,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 921,
													"src": "20213:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 919,
												"id": 946,
												"nodeType": "Return",
												"src": "20206:13:0"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "19798:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "19933:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "19948:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19940:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "19959:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19951:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "19970:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19962:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19992:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19983:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 914,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 913,
														"name": "Rounding",
														"nameLocations": [
															"19983:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "19983:8:0"
													},
													"referencedDeclaration": 528,
													"src": "19983:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19939:62:0"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "20025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20024:9:0"
									},
									"scope": 1571,
									"src": "19924:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "20517:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 956,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "20531:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20536:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "20527:45:0",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "20539:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20560:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 955,
															"id": 960,
															"nodeType": "Return",
															"src": "20553:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21259:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1059,
														"src": "21251:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21251:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 973,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21268:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 967,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 951,
																			"src": "21279:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 966,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1227,
																			1262
																		],
																		"referencedDeclaration": 1227,
																		"src": "21274:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21274:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21285:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21274:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 971,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "21273:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21268:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21251:36:0"
											},
											{
												"id": 1058,
												"nodeType": "UncheckedBlock",
												"src": "21688:408:0",
												"statements": [
													{
														"expression": {
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 974,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21712:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 975,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21722:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 976,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21731:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 977,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21735:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21731:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21722:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 980,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21721:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21746:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21721:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21712:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 984,
														"nodeType": "ExpressionStatement",
														"src": "21712:35:0"
													},
													{
														"expression": {
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 985,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21761:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 986,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21771:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 987,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21780:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 988,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21784:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21780:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21771:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 991,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21770:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21795:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21770:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21761:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 995,
														"nodeType": "ExpressionStatement",
														"src": "21761:35:0"
													},
													{
														"expression": {
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 996,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21810:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 997,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21820:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 998,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21829:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 999,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21833:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21829:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21820:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1002,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21819:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21844:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21819:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21810:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1006,
														"nodeType": "ExpressionStatement",
														"src": "21810:35:0"
													},
													{
														"expression": {
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21859:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1008,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21869:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1009,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21878:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1010,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21882:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21878:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21869:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1013,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21868:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21893:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21868:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21859:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1017,
														"nodeType": "ExpressionStatement",
														"src": "21859:35:0"
													},
													{
														"expression": {
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1018,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21908:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1019,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21918:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1020,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21927:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1021,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21931:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21927:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21918:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1024,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21917:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21942:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21917:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21908:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1028,
														"nodeType": "ExpressionStatement",
														"src": "21908:35:0"
													},
													{
														"expression": {
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1029,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21957:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1030,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21967:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1031,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21976:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1032,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21980:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21976:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21967:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1035,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21966:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21991:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21966:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21957:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1039,
														"nodeType": "ExpressionStatement",
														"src": "21957:35:0"
													},
													{
														"expression": {
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1040,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "22006:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1041,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "22016:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1042,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "22025:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1043,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "22029:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22025:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22016:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1046,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22015:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22015:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22006:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1050,
														"nodeType": "ExpressionStatement",
														"src": "22006:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1052,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "22066:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1053,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "22074:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1054,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "22078:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22074:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1051,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "22062:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22062:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 955,
														"id": 1057,
														"nodeType": "Return",
														"src": "22055:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "20232:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "20469:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20482:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "20474:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20473:11:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "20508:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20507:9:0"
									},
									"scope": 1571,
									"src": "20460:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "22278:164:0",
										"statements": [
											{
												"id": 1093,
												"nodeType": "UncheckedBlock",
												"src": "22288:148:0",
												"statements": [
													{
														"assignments": [
															1072
														],
														"declarations": [
															{
																"constant": false,
																"id": 1072,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22320:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1093,
																"src": "22312:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1071,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22312:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1076,
														"initialValue": {
															"arguments": [
																{
																	"id": 1074,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "22334:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1073,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1060,
																	1095
																],
																"referencedDeclaration": 1060,
																"src": "22329:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22329:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22312:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1077,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "22357:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1079,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1066,
																						"src": "22384:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1078,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "22367:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22367:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1083,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1081,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1072,
																						"src": "22397:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1082,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1072,
																						"src": "22406:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22397:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1084,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1063,
																					"src": "22415:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22397:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22367:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22423:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22367:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22419:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22366:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22357:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1070,
														"id": 1092,
														"nodeType": "Return",
														"src": "22350:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "22108:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "22211:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22224:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "22216:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22236:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "22227:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1064,
														"name": "Rounding",
														"nameLocations": [
															"22227:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "22227:8:0"
													},
													"referencedDeclaration": 528,
													"src": "22227:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22215:30:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "22269:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22268:9:0"
									},
									"scope": 1571,
									"src": "22202:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "22633:922:0",
										"statements": [
											{
												"assignments": [
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "22651:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "22643:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"hexValue": "30",
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22660:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22643:18:0"
											},
											{
												"id": 1223,
												"nodeType": "UncheckedBlock",
												"src": "22671:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1107,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "22699:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22708:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "22699:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22714:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22699:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1121,
														"nodeType": "IfStatement",
														"src": "22695:99:0",
														"trueBody": {
															"id": 1120,
															"nodeType": "Block",
															"src": "22717:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1112,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "22735:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22745:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "22735:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1115,
																	"nodeType": "ExpressionStatement",
																	"src": "22735:13:0"
																},
																{
																	"expression": {
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1116,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "22766:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22776:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "22766:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1119,
																	"nodeType": "ExpressionStatement",
																	"src": "22766:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1122,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "22811:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22820:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "22811:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22825:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22811:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1136,
														"nodeType": "IfStatement",
														"src": "22807:96:0",
														"trueBody": {
															"id": 1135,
															"nodeType": "Block",
															"src": "22828:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1127,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "22846:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22856:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "22846:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1130,
																	"nodeType": "ExpressionStatement",
																	"src": "22846:12:0"
																},
																{
																	"expression": {
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1131,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "22876:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22886:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "22876:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1134,
																	"nodeType": "ExpressionStatement",
																	"src": "22876:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1137,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "22920:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22929:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "22920:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22934:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22920:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1151,
														"nodeType": "IfStatement",
														"src": "22916:96:0",
														"trueBody": {
															"id": 1150,
															"nodeType": "Block",
															"src": "22937:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1142,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "22955:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22965:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22955:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1145,
																	"nodeType": "ExpressionStatement",
																	"src": "22955:12:0"
																},
																{
																	"expression": {
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1146,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "22985:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22995:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22985:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1149,
																	"nodeType": "ExpressionStatement",
																	"src": "22985:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1152,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23029:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23038:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "23029:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23043:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23029:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1166,
														"nodeType": "IfStatement",
														"src": "23025:96:0",
														"trueBody": {
															"id": 1165,
															"nodeType": "Block",
															"src": "23046:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23064:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23074:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23064:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1160,
																	"nodeType": "ExpressionStatement",
																	"src": "23064:12:0"
																},
																{
																	"expression": {
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1161,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23094:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23104:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23094:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1164,
																	"nodeType": "ExpressionStatement",
																	"src": "23094:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1167,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23138:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23147:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "23138:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23151:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23138:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1181,
														"nodeType": "IfStatement",
														"src": "23134:93:0",
														"trueBody": {
															"id": 1180,
															"nodeType": "Block",
															"src": "23154:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1172,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23172:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23182:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "23172:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1175,
																	"nodeType": "ExpressionStatement",
																	"src": "23172:11:0"
																},
																{
																	"expression": {
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1176,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23201:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23211:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "23201:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1179,
																	"nodeType": "ExpressionStatement",
																	"src": "23201:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1182,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23244:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23253:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "23244:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23257:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23244:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1196,
														"nodeType": "IfStatement",
														"src": "23240:93:0",
														"trueBody": {
															"id": 1195,
															"nodeType": "Block",
															"src": "23260:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1187,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23278:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23288:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23278:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1190,
																	"nodeType": "ExpressionStatement",
																	"src": "23278:11:0"
																},
																{
																	"expression": {
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1191,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23307:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23317:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23307:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1194,
																	"nodeType": "ExpressionStatement",
																	"src": "23307:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1197,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23350:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23359:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "23350:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23363:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23350:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1211,
														"nodeType": "IfStatement",
														"src": "23346:93:0",
														"trueBody": {
															"id": 1210,
															"nodeType": "Block",
															"src": "23366:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1202,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23384:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23394:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23384:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1205,
																	"nodeType": "ExpressionStatement",
																	"src": "23384:11:0"
																},
																{
																	"expression": {
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1206,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23413:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23423:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23413:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1209,
																	"nodeType": "ExpressionStatement",
																	"src": "23413:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1212,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23456:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23465:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23456:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23469:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23456:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1222,
														"nodeType": "IfStatement",
														"src": "23452:64:0",
														"trueBody": {
															"id": 1221,
															"nodeType": "Block",
															"src": "23472:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1217,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23490:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23500:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23490:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1220,
																	"nodeType": "ExpressionStatement",
																	"src": "23490:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1224,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1104,
													"src": "23542:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1225,
												"nodeType": "Return",
												"src": "23535:13:0"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "22448:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "22581:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22594:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "22586:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22585:15:0"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "22624:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22623:9:0"
									},
									"scope": 1571,
									"src": "22572:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "23788:168:0",
										"statements": [
											{
												"id": 1260,
												"nodeType": "UncheckedBlock",
												"src": "23798:152:0",
												"statements": [
													{
														"assignments": [
															1239
														],
														"declarations": [
															{
																"constant": false,
																"id": 1239,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23830:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1260,
																"src": "23822:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1238,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23822:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1243,
														"initialValue": {
															"arguments": [
																{
																	"id": 1241,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "23844:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1240,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1227,
																	1262
																],
																"referencedDeclaration": 1227,
																"src": "23839:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23839:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23822:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1244,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "23871:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1246,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1233,
																						"src": "23898:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1245,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "23881:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23881:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1250,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1248,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "23911:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1249,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1239,
																						"src": "23916:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "23911:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1251,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1230,
																					"src": "23925:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23911:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "23881:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23937:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "23881:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23933:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1257,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23880:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "23871:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1237,
														"id": 1259,
														"nodeType": "Return",
														"src": "23864:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "23561:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23717:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23730:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "23722:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23746:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "23737:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1231,
														"name": "Rounding",
														"nameLocations": [
															"23737:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "23737:8:0"
													},
													"referencedDeclaration": 528,
													"src": "23737:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:34:0"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "23779:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23778:9:0"
									},
									"scope": 1571,
									"src": "23708:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "24149:854:0",
										"statements": [
											{
												"assignments": [
													1271
												],
												"declarations": [
													{
														"constant": false,
														"id": 1271,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24167:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "24159:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1270,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24159:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"hexValue": "30",
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24176:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24159:18:0"
											},
											{
												"id": 1387,
												"nodeType": "UncheckedBlock",
												"src": "24187:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1274,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24224:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24230:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "24224:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "24215:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1290,
														"nodeType": "IfStatement",
														"src": "24211:103:0",
														"trueBody": {
															"id": 1289,
															"nodeType": "Block",
															"src": "24234:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1279,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24252:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24261:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24267:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "24261:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "24252:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1284,
																	"nodeType": "ExpressionStatement",
																	"src": "24252:17:0"
																},
																{
																	"expression": {
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1285,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24287:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24297:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "24287:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1288,
																	"nodeType": "ExpressionStatement",
																	"src": "24287:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1291,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24331:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24340:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24346:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "24340:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "24331:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1307,
														"nodeType": "IfStatement",
														"src": "24327:103:0",
														"trueBody": {
															"id": 1306,
															"nodeType": "Block",
															"src": "24350:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24368:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24377:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24383:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "24377:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "24368:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1301,
																	"nodeType": "ExpressionStatement",
																	"src": "24368:17:0"
																},
																{
																	"expression": {
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1302,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24403:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24413:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "24403:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1305,
																	"nodeType": "ExpressionStatement",
																	"src": "24403:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1308,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24447:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24456:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24462:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "24456:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "24447:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1324,
														"nodeType": "IfStatement",
														"src": "24443:103:0",
														"trueBody": {
															"id": 1323,
															"nodeType": "Block",
															"src": "24466:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1313,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24484:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24493:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24499:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "24493:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "24484:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1318,
																	"nodeType": "ExpressionStatement",
																	"src": "24484:17:0"
																},
																{
																	"expression": {
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1319,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24519:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24529:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "24519:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "24519:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24563:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24572:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24578:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "24572:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "24563:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1341,
														"nodeType": "IfStatement",
														"src": "24559:100:0",
														"trueBody": {
															"id": 1340,
															"nodeType": "Block",
															"src": "24581:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24599:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24608:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24614:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "24608:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "24599:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1335,
																	"nodeType": "ExpressionStatement",
																	"src": "24599:16:0"
																},
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1336,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24633:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24643:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "24633:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "24633:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1342,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24676:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24685:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24691:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "24685:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "24676:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1358,
														"nodeType": "IfStatement",
														"src": "24672:100:0",
														"trueBody": {
															"id": 1357,
															"nodeType": "Block",
															"src": "24694:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1347,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24712:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24721:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24727:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "24721:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "24712:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1352,
																	"nodeType": "ExpressionStatement",
																	"src": "24712:16:0"
																},
																{
																	"expression": {
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1353,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24746:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24756:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "24746:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "24746:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1359,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24789:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24798:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24804:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "24798:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "24789:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1375,
														"nodeType": "IfStatement",
														"src": "24785:100:0",
														"trueBody": {
															"id": 1374,
															"nodeType": "Block",
															"src": "24807:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1364,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24825:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24834:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24840:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "24834:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "24825:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "24825:16:0"
																},
																{
																	"expression": {
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1370,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24859:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24869:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "24859:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1373,
																	"nodeType": "ExpressionStatement",
																	"src": "24859:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1376,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24902:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24911:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24917:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24911:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "24902:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1386,
														"nodeType": "IfStatement",
														"src": "24898:66:0",
														"trueBody": {
															"id": 1385,
															"nodeType": "Block",
															"src": "24920:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1381,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24938:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24948:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24938:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1384,
																	"nodeType": "ExpressionStatement",
																	"src": "24938:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1388,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1271,
													"src": "24990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1269,
												"id": 1389,
												"nodeType": "Return",
												"src": "24983:13:0"
											}
										]
									},
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "23962:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "24096:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24110:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "24102:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24102:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24101:15:0"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "24140:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24139:9:0"
									},
									"scope": 1571,
									"src": "24087:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "25238:170:0",
										"statements": [
											{
												"id": 1424,
												"nodeType": "UncheckedBlock",
												"src": "25248:154:0",
												"statements": [
													{
														"assignments": [
															1403
														],
														"declarations": [
															{
																"constant": false,
																"id": 1403,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25280:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1424,
																"src": "25272:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1402,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25272:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1407,
														"initialValue": {
															"arguments": [
																{
																	"id": 1405,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "25295:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1404,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1391,
																	1426
																],
																"referencedDeclaration": 1391,
																"src": "25289:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25289:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25272:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1408,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "25322:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1410,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1397,
																						"src": "25349:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1409,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "25332:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25332:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1412,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25362:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1413,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1403,
																						"src": "25368:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25362:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1415,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1394,
																					"src": "25377:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25362:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "25332:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25389:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "25332:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25385:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25331:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "25322:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1401,
														"id": 1423,
														"nodeType": "Return",
														"src": "25315:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "25009:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25166:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25180:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "25172:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25196:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "25187:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1395,
														"name": "Rounding",
														"nameLocations": [
															"25187:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "25187:8:0"
													},
													"referencedDeclaration": 528,
													"src": "25187:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25171:34:0"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "25229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25228:9:0"
									},
									"scope": 1571,
									"src": "25157:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "25728:600:0",
										"statements": [
											{
												"assignments": [
													1435
												],
												"declarations": [
													{
														"constant": false,
														"id": 1435,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25746:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "25738:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"hexValue": "30",
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25755:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25738:18:0"
											},
											{
												"id": 1509,
												"nodeType": "UncheckedBlock",
												"src": "25766:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1438,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "25794:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25803:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "25794:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25809:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25794:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1452,
														"nodeType": "IfStatement",
														"src": "25790:98:0",
														"trueBody": {
															"id": 1451,
															"nodeType": "Block",
															"src": "25812:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1443,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "25830:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25840:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "25830:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1446,
																	"nodeType": "ExpressionStatement",
																	"src": "25830:13:0"
																},
																{
																	"expression": {
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1447,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "25861:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25871:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25861:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1450,
																	"nodeType": "ExpressionStatement",
																	"src": "25861:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1453,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "25905:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25905:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25905:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1467,
														"nodeType": "IfStatement",
														"src": "25901:95:0",
														"trueBody": {
															"id": 1466,
															"nodeType": "Block",
															"src": "25922:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1458,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "25940:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25950:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25940:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1461,
																	"nodeType": "ExpressionStatement",
																	"src": "25940:12:0"
																},
																{
																	"expression": {
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1462,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "25970:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25980:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25970:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1465,
																	"nodeType": "ExpressionStatement",
																	"src": "25970:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1468,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "26013:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26022:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "26013:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26027:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26013:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1482,
														"nodeType": "IfStatement",
														"src": "26009:95:0",
														"trueBody": {
															"id": 1481,
															"nodeType": "Block",
															"src": "26030:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1473,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "26048:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26058:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26048:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1476,
																	"nodeType": "ExpressionStatement",
																	"src": "26048:12:0"
																},
																{
																	"expression": {
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1477,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "26078:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26088:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "26078:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1480,
																	"nodeType": "ExpressionStatement",
																	"src": "26078:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1483,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "26121:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26130:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "26121:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26135:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26121:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1497,
														"nodeType": "IfStatement",
														"src": "26117:95:0",
														"trueBody": {
															"id": 1496,
															"nodeType": "Block",
															"src": "26138:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1488,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "26156:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26166:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26156:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1491,
																	"nodeType": "ExpressionStatement",
																	"src": "26156:12:0"
																},
																{
																	"expression": {
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1492,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "26186:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26196:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26186:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1495,
																	"nodeType": "ExpressionStatement",
																	"src": "26186:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "26229:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26238:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "26229:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26242:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26229:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1508,
														"nodeType": "IfStatement",
														"src": "26225:64:0",
														"trueBody": {
															"id": 1507,
															"nodeType": "Block",
															"src": "26245:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1503,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "26263:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26273:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26263:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1506,
																	"nodeType": "ExpressionStatement",
																	"src": "26263:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1510,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1435,
													"src": "26315:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1433,
												"id": 1511,
												"nodeType": "Return",
												"src": "26308:13:0"
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "25414:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "25674:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "25681:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25680:15:0"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "25719:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25718:9:0"
									},
									"scope": 1571,
									"src": "25665:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "26565:177:0",
										"statements": [
											{
												"id": 1549,
												"nodeType": "UncheckedBlock",
												"src": "26575:161:0",
												"statements": [
													{
														"assignments": [
															1525
														],
														"declarations": [
															{
																"constant": false,
																"id": 1525,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26607:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1549,
																"src": "26599:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1524,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26599:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1529,
														"initialValue": {
															"arguments": [
																{
																	"id": 1527,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "26623:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1526,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1513,
																	1551
																],
																"referencedDeclaration": 1513,
																"src": "26616:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26616:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26599:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1530,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "26650:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1532,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1519,
																						"src": "26677:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1531,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "26660:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26660:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1539,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1534,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "26690:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1537,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1535,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1525,
																									"src": "26696:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1536,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "26706:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "26696:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1538,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "26695:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26690:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1540,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1516,
																					"src": "26711:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26690:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "26660:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26723:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "26660:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26719:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1546,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26659:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "26650:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1523,
														"id": 1548,
														"nodeType": "Return",
														"src": "26643:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "26334:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26492:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26507:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "26499:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26523:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "26514:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1517,
														"name": "Rounding",
														"nameLocations": [
															"26514:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "26514:8:0"
													},
													"referencedDeclaration": 528,
													"src": "26514:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26498:34:0"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "26556:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26555:9:0"
									},
									"scope": 1571,
									"src": "26483:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "26940:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1562,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "26963:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$528",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$528",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26957:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1560,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "26957:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26957:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26975:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "26957:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26980:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "26957:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1568,
												"nodeType": "Return",
												"src": "26950:31:0"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "26748:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "26875:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26901:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "26892:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1554,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1553,
														"name": "Rounding",
														"nameLocations": [
															"26892:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "26892:8:0"
													},
													"referencedDeclaration": 528,
													"src": "26892:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26891:19:0"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "26934:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26934:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26933:6:0"
									},
									"scope": 1571,
									"src": "26866:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "12076:14914:0",
							"usedErrors": [
								523
							],
							"usedEvents": []
						},
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "27114:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1573,
								"nodeType": "StructuredDocumentation",
								"src": "27142:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1821,
							"linearizedBaseContracts": [
								1821
							],
							"name": "Strings",
							"nameLocation": "27185:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1576,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "27224:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "27199:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1574,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "27199:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1575,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27237:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1579,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "27284:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "27261:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1577,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "27261:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1578,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27301:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "27310:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1586,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "27402:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27439:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "27431:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "27454:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "27446:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27430:31:0"
									},
									"src": "27396:66:0"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "27634:627:0",
										"statements": [
											{
												"id": 1632,
												"nodeType": "UncheckedBlock",
												"src": "27644:611:0",
												"statements": [
													{
														"assignments": [
															1595
														],
														"declarations": [
															{
																"constant": false,
																"id": 1595,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "27676:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1632,
																"src": "27668:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1594,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27668:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1602,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1598,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1589,
																		"src": "27696:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1596,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "27685:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1571_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27690:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1391,
																	"src": "27685:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27685:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27705:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "27685:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27668:38:0"
													},
													{
														"assignments": [
															1604
														],
														"declarations": [
															{
																"constant": false,
																"id": 1604,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "27734:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1632,
																"src": "27720:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1603,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "27720:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1609,
														"initialValue": {
															"arguments": [
																{
																	"id": 1607,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "27754:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "27743:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1605,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "27747:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27743:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27720:41:0"
													},
													{
														"assignments": [
															1611
														],
														"declarations": [
															{
																"constant": false,
																"id": 1611,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "27783:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1632,
																"src": "27775:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1610,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27775:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1612,
														"nodeType": "VariableDeclarationStatement",
														"src": "27775:11:0"
													},
													{
														"AST": {
															"nativeSrc": "27856:67:0",
															"nodeType": "YulBlock",
															"src": "27856:67:0",
															"statements": [
																{
																	"nativeSrc": "27874:35:0",
																	"nodeType": "YulAssignment",
																	"src": "27874:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "27885:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "27885:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "27897:2:0",
																						"nodeType": "YulLiteral",
																						"src": "27897:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "27901:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "27901:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "27893:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "27893:3:0"
																				},
																				"nativeSrc": "27893:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "27893:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27881:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "27881:3:0"
																		},
																		"nativeSrc": "27881:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "27881:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "27874:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "27874:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1604,
																"isOffset": false,
																"isSlot": false,
																"src": "27885:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1595,
																"isOffset": false,
																"isSlot": false,
																"src": "27901:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1611,
																"isOffset": false,
																"isSlot": false,
																"src": "27874:3:0",
																"valueSize": 1
															}
														],
														"id": 1613,
														"nodeType": "InlineAssembly",
														"src": "27847:76:0"
													},
													{
														"body": {
															"id": 1628,
															"nodeType": "Block",
															"src": "27949:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "27967:5:0",
																		"subExpression": {
																			"id": 1615,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "27967:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1617,
																	"nodeType": "ExpressionStatement",
																	"src": "27967:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "28050:86:0",
																		"nodeType": "YulBlock",
																		"src": "28050:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "28080:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "28080:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "28094:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "28094:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "28101:2:0",
																											"nodeType": "YulLiteral",
																											"src": "28101:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "28090:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "28090:3:0"
																									},
																									"nativeSrc": "28090:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "28090:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "28106:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "28106:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "28085:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "28085:4:0"
																							},
																							"nativeSrc": "28085:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "28085:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "28072:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "28072:7:0"
																					},
																					"nativeSrc": "28072:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "28072:46:0"
																				},
																				"nativeSrc": "28072:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "28072:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1576,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "28106:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1611,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "28080:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1589,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "28094:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1618,
																	"nodeType": "InlineAssembly",
																	"src": "28041:95:0"
																},
																{
																	"expression": {
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1619,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "28153:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28162:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "28153:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1622,
																	"nodeType": "ExpressionStatement",
																	"src": "28153:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1623,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "28186:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28195:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "28186:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1627,
																	"nodeType": "IfStatement",
																	"src": "28182:21:0",
																	"trueBody": {
																		"id": 1626,
																		"nodeType": "Break",
																		"src": "28198:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27943:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1629,
														"nodeType": "WhileStatement",
														"src": "27936:282:0"
													},
													{
														"expression": {
															"id": 1630,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "28238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1593,
														"id": 1631,
														"nodeType": "Return",
														"src": "28231:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "27468:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "27572:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "27581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27580:15:0"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "27619:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27618:15:0"
									},
									"scope": 1821,
									"src": "27563:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "28437:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "28468:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28476:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "28468:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28486:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "28468:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28480:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1654,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1637,
																			"src": "28514:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1652,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 518,
																			"src": "28499:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$518_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "28510:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 517,
																		"src": "28499:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28499:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1651,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "28490:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28490:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28454:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1642,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "28454:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28461:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "28454:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28454:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1658,
												"nodeType": "Return",
												"src": "28447:75:0"
											}
										]
									},
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "28267:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "28370:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28392:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "28385:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1636,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28385:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28384:14:0"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "28422:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28422:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28421:15:0"
									},
									"scope": 1821,
									"src": "28361:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "28708:100:0",
										"statements": [
											{
												"id": 1678,
												"nodeType": "UncheckedBlock",
												"src": "28718:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "28761:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1672,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1663,
																				"src": "28780:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1670,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "28768:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1571_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "28773:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1513,
																			"src": "28768:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28768:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28789:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "28768:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1668,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1680,
																	1763,
																	1783
																],
																"referencedDeclaration": 1763,
																"src": "28749:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28749:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1667,
														"id": 1677,
														"nodeType": "Return",
														"src": "28742:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "28535:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "28643:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28663:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "28655:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28654:15:0"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "28693:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1665,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28693:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28692:15:0"
									},
									"scope": 1821,
									"src": "28634:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "29021:435:0",
										"statements": [
											{
												"assignments": [
													1691
												],
												"declarations": [
													{
														"constant": false,
														"id": 1691,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "29039:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "29031:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"id": 1692,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1683,
													"src": "29052:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29031:26:0"
											},
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "29080:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "29067:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1694,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "29067:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1704,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29099:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1699,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "29103:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29112:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "29099:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "29089:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1696,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "29093:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29089:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29067:47:0"
											},
											{
												"expression": {
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1705,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "29124:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1707,
														"indexExpression": {
															"hexValue": "30",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29131:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29124:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29136:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "29124:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "29124:15:0"
											},
											{
												"expression": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1711,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "29149:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1713,
														"indexExpression": {
															"hexValue": "31",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29156:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29149:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29161:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "29149:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "29149:15:0"
											},
											{
												"body": {
													"id": 1745,
													"nodeType": "Block",
													"src": "29219:95:0",
													"statements": [
														{
															"expression": {
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1731,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "29233:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1733,
																	"indexExpression": {
																		"id": 1732,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "29240:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "29233:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1734,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "29245:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1738,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1735,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "29256:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29269:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "29256:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "29245:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "29233:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1740,
															"nodeType": "ExpressionStatement",
															"src": "29233:40:0"
														},
														{
															"expression": {
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1741,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "29287:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "29287:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1744,
															"nodeType": "ExpressionStatement",
															"src": "29287:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1725,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "29207:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "29207:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1746,
												"initializationExpression": {
													"assignments": [
														1718
													],
													"declarations": [
														{
															"constant": false,
															"id": 1718,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "29187:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1746,
															"src": "29179:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1717,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "29179:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1724,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29191:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1720,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "29195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29191:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29204:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "29191:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "29179:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "29214:3:0",
														"subExpression": {
															"id": 1728,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "29216:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1730,
													"nodeType": "ExpressionStatement",
													"src": "29214:3:0"
												},
												"nodeType": "ForStatement",
												"src": "29174:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1747,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "29327:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29341:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29327:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1756,
												"nodeType": "IfStatement",
												"src": "29323:96:0",
												"trueBody": {
													"id": 1755,
													"nodeType": "Block",
													"src": "29344:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1751,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "29394:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1752,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1685,
																		"src": "29401:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1750,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "29365:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29365:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1754,
															"nodeType": "RevertStatement",
															"src": "29358:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1759,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "29442:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "29435:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1757,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "29435:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29435:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1689,
												"id": 1761,
												"nodeType": "Return",
												"src": "29428:21:0"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "28814:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "28940:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28960:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "28952:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "28975:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "28967:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28951:31:0"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "29006:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29006:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29005:15:0"
									},
									"scope": 1821,
									"src": "28931:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "29688:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1776,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "29733:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29725:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1774,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "29725:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29725:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1772,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29717:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29717:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1779,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "29741:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1771,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1680,
															1763,
															1783
														],
														"referencedDeclaration": 1763,
														"src": "29705:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29705:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1781,
												"nodeType": "Return",
												"src": "29698:58:0"
											}
										]
									},
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "29462:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "29624:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "29644:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "29636:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29635:14:0"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "29673:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29673:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29672:15:0"
									},
									"scope": 1821,
									"src": "29615:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "29918:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1795,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1786,
																		"src": "29941:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29935:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1793,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29935:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29935:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29944:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "29935:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1800,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "29960:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29954:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1798,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29954:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29954:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29963:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "29954:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29935:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1807,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1786,
																			"src": "29989:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29983:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1805,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "29983:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29983:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1804,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "29973:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29973:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1813,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "30012:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "30006:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1811,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "30006:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30006:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1810,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "29996:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29996:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "29973:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29935:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1792,
												"id": 1818,
												"nodeType": "Return",
												"src": "29928:87:0"
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "29769:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "29849:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "29869:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "29855:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29855:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "29886:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "29872:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1787,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29872:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29854:34:0"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "29912:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29912:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29911:6:0"
									},
									"scope": 1821,
									"src": "29840:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "27177:2847:0",
							"usedErrors": [
								1586
							],
							"usedEvents": []
						},
						{
							"id": 1822,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30192:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1823,
								"nodeType": "StructuredDocumentation",
								"src": "30219:330:0",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 1892,
							"linearizedBaseContracts": [
								1892
							],
							"name": "MessageHashUtils",
							"nameLocation": "30558:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "31343:368:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "31405:300:0",
													"nodeType": "YulBlock",
													"src": "31405:300:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31426:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31426:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "31432:34:0",
																		"nodeType": "YulLiteral",
																		"src": "31432:34:0",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31419:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "31419:6:0"
																},
																"nativeSrc": "31419:48:0",
																"nodeType": "YulFunctionCall",
																"src": "31419:48:0"
															},
															"nativeSrc": "31419:48:0",
															"nodeType": "YulExpressionStatement",
															"src": "31419:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31528:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31528:4:0",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "31534:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "31534:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31521:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "31521:6:0"
																},
																"nativeSrc": "31521:25:0",
																"nodeType": "YulFunctionCall",
																"src": "31521:25:0"
															},
															"nativeSrc": "31521:25:0",
															"nodeType": "YulExpressionStatement",
															"src": "31521:25:0"
														},
														{
															"nativeSrc": "31600:31:0",
															"nodeType": "YulAssignment",
															"src": "31600:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31620:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31620:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31626:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31626:4:0",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "31610:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "31610:9:0"
																},
																"nativeSrc": "31610:21:0",
																"nodeType": "YulFunctionCall",
																"src": "31610:21:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "31600:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "31600:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1829,
														"isOffset": false,
														"isSlot": false,
														"src": "31600:6:0",
														"valueSize": 1
													},
													{
														"declaration": 1826,
														"isOffset": false,
														"isSlot": false,
														"src": "31534:11:0",
														"valueSize": 1
													}
												],
												"id": 1831,
												"nodeType": "InlineAssembly",
												"src": "31396:309:0"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "30581:665:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "31260:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "31291:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "31283:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1825,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31282:21:0"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "31335:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "31327:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31326:16:0"
									},
									"scope": 1892,
									"src": "31251:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "32263:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32315:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1850,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1836,
																						"src": "32372:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1851,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "32380:6:0",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "32372:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1848,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "32355:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1821_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 1849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "32363:8:0",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1634,
																				"src": "32355:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 1852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32355:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32349:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1846,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "32349:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32349:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 1854,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1836,
																	"src": "32390:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32302:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1842,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "32302:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32308:6:0",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "32302:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32302:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1841,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "32292:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32292:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1840,
												"id": 1857,
												"nodeType": "Return",
												"src": "32273:126:0"
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "31717:455:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "32186:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "32222:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "32209:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32208:22:0"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "32254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1838,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32253:9:0"
									},
									"scope": 1892,
									"src": "32177:229:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "32860:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32904:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 1873,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "32916:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1874,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "32927:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1870,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "32887:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "32891:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "32887:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32887:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1869,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "32877:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32877:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1877,
												"nodeType": "Return",
												"src": "32870:63:0"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "32412:332:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "32758:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "32798:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "32790:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "32822:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "32809:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32789:38:0"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "32851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1866,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32850:9:0"
									},
									"scope": 1892,
									"src": "32749:191:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "33491:292:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "33553:224:0",
													"nodeType": "YulBlock",
													"src": "33553:224:0",
													"statements": [
														{
															"nativeSrc": "33567:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "33567:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "33584:4:0",
																		"nodeType": "YulLiteral",
																		"src": "33584:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "33578:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "33578:5:0"
																},
																"nativeSrc": "33578:11:0",
																"nodeType": "YulFunctionCall",
																"src": "33578:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "33571:3:0",
																	"nodeType": "YulTypedName",
																	"src": "33571:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "33609:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "33609:3:0"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "33614:10:0",
																		"nodeType": "YulLiteral",
																		"src": "33614:10:0",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33602:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33602:6:0"
																},
																"nativeSrc": "33602:23:0",
																"nodeType": "YulFunctionCall",
																"src": "33602:23:0"
															},
															"nativeSrc": "33602:23:0",
															"nodeType": "YulExpressionStatement",
															"src": "33602:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "33649:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "33649:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33654:4:0",
																				"nodeType": "YulLiteral",
																				"src": "33654:4:0",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33645:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "33645:3:0"
																		},
																		"nativeSrc": "33645:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33645:14:0"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "33661:15:0",
																		"nodeType": "YulIdentifier",
																		"src": "33661:15:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33638:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33638:6:0"
																},
																"nativeSrc": "33638:39:0",
																"nodeType": "YulFunctionCall",
																"src": "33638:39:0"
															},
															"nativeSrc": "33638:39:0",
															"nodeType": "YulExpressionStatement",
															"src": "33638:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "33701:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "33701:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33706:4:0",
																				"nodeType": "YulLiteral",
																				"src": "33706:4:0",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33697:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "33697:3:0"
																		},
																		"nativeSrc": "33697:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33697:14:0"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "33713:10:0",
																		"nodeType": "YulIdentifier",
																		"src": "33713:10:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33690:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33690:6:0"
																},
																"nativeSrc": "33690:34:0",
																"nodeType": "YulFunctionCall",
																"src": "33690:34:0"
															},
															"nativeSrc": "33690:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "33690:34:0"
														},
														{
															"nativeSrc": "33737:30:0",
															"nodeType": "YulAssignment",
															"src": "33737:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "33757:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "33757:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33762:4:0",
																		"nodeType": "YulLiteral",
																		"src": "33762:4:0",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "33747:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "33747:9:0"
																},
																"nativeSrc": "33747:20:0",
																"nodeType": "YulFunctionCall",
																"src": "33747:20:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "33737:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33737:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1887,
														"isOffset": false,
														"isSlot": false,
														"src": "33737:6:0",
														"valueSize": 1
													},
													{
														"declaration": 1882,
														"isOffset": false,
														"isSlot": false,
														"src": "33661:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1884,
														"isOffset": false,
														"isSlot": false,
														"src": "33713:10:0",
														"valueSize": 1
													}
												],
												"id": 1889,
												"nodeType": "InlineAssembly",
												"src": "33544:233:0"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "32946:431:0",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "33391:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "33415:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "33407:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1881,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33407:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "33440:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "33432:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1883,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33406:45:0"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "33483:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "33475:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1886,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33474:16:0"
									},
									"scope": 1892,
									"src": "33382:401:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "30550:3235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1893,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33933:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1895,
										"name": "IERC5267",
										"nameLocations": [
											"35634:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "35634:8:0"
									},
									"id": 1896,
									"nodeType": "InheritanceSpecifier",
									"src": "35634:8:0"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1894,
								"nodeType": "StructuredDocumentation",
								"src": "33962:1643:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2111,
							"linearizedBaseContracts": [
								2111,
								91
							],
							"name": "EIP712",
							"nameLocation": "35624:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1898,
									"libraryName": {
										"id": 1897,
										"name": "ShortStrings",
										"nameLocations": [
											"35655:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 414,
										"src": "35655:12:0"
									},
									"nodeType": "UsingForDirective",
									"src": "35649:25:0"
								},
								{
									"constant": true,
									"id": 1903,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "35705:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "35680:140:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1899,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "35680:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1901,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "35735:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1900,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "35725:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1902,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "35725:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1905,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "36045:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36019:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1904,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "36019:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1907,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "36099:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36073:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "36073:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1909,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "36145:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36119:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1908,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "36119:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1911,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "36189:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36163:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1910,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "36163:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1913,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "36232:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36206:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1912,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "36206:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1916,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "36283:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36253:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1915,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1914,
											"name": "ShortString",
											"nameLocations": [
												"36253:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 203,
											"src": "36253:11:0"
										},
										"referencedDeclaration": 203,
										"src": "36253:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1919,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "36324:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36294:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1918,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1917,
											"name": "ShortString",
											"nameLocations": [
												"36294:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 203,
											"src": "36294:11:0"
										},
										"referencedDeclaration": 203,
										"src": "36294:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1921,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "36353:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36338:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1920,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36338:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1923,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "36387:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36372:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1922,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36372:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "37029:376:0",
										"statements": [
											{
												"expression": {
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1931,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "37039:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1934,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "37078:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1932,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "37047:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37052:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 355,
															"src": "37047:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$203_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37047:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"src": "37039:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"id": 1937,
												"nodeType": "ExpressionStatement",
												"src": "37039:53:0"
											},
											{
												"expression": {
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1938,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "37102:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1941,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "37147:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1939,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "37113:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37121:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 355,
															"src": "37113:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$203_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37113:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"src": "37102:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "37102:62:0"
											},
											{
												"expression": {
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1945,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "37174:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1949,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1926,
																		"src": "37204:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37198:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1947,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "37198:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37198:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1946,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "37188:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37188:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "37174:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "37174:36:0"
											},
											{
												"expression": {
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "37220:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1958,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1928,
																		"src": "37253:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37247:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1956,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "37247:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37247:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1955,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "37237:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37237:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "37220:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "37220:42:0"
											},
											{
												"expression": {
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1963,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "37273:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1964,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "37290:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "37296:7:0",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "37290:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37273:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "37273:30:0"
											},
											{
												"expression": {
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1968,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "37313:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1969,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "37338:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37338:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "37313:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "37313:48:0"
											},
											{
												"expression": {
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1973,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "37371:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1976,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "37393:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2111",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2111",
																	"typeString": "contract EIP712"
																}
															],
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "37385:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1974,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "37385:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37385:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37371:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1979,
												"nodeType": "ExpressionStatement",
												"src": "37371:27:0"
											}
										]
									},
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "36410:559:0",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 1981,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "37000:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "36986:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1925,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36986:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "37020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "37006:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37006:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36985:43:0"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37029:0:0"
									},
									"scope": 2111,
									"src": "36974:431:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "37553:200:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1989,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "37575:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37567:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37567:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1991,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "37584:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "37567:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1993,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "37599:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37605:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "37599:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1995,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "37616:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "37599:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "37567:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2004,
													"nodeType": "Block",
													"src": "37692:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2001,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "37713:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37713:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1986,
															"id": 2003,
															"nodeType": "Return",
															"src": "37706:30:0"
														}
													]
												},
												"id": 2005,
												"nodeType": "IfStatement",
												"src": "37563:184:0",
												"trueBody": {
													"id": 2000,
													"nodeType": "Block",
													"src": "37632:54:0",
													"statements": [
														{
															"expression": {
																"id": 1998,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "37653:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1986,
															"id": 1999,
															"nodeType": "Return",
															"src": "37646:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "37411:75:0",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "37500:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37518:2:0"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "37544:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1984,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37543:9:0"
									},
									"scope": 2111,
									"src": "37491:262:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "37823:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2015,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "37861:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2016,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "37872:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2017,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "37885:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2018,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "37901:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "37907:7:0",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "37901:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2022,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "37924:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2111",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2111",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37916:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2020,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "37916:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37916:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2013,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "37850:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "37854:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "37850:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37850:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2012,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "37840:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37840:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2011,
												"id": 2026,
												"nodeType": "Return",
												"src": "37833:98:0"
											}
										]
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "37768:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37789:2:0"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "37814:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2009,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37813:9:0"
									},
									"scope": 2111,
									"src": "37759:179:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "38649:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2038,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "38699:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38699:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2040,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "38721:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2036,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "38666:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$1892_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38683:15:0",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1891,
														"src": "38666:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38666:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2035,
												"id": 2042,
												"nodeType": "Return",
												"src": "38659:73:0"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "37944:614:0",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "38572:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "38597:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "38589:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2030,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38588:20:0"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "38640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38639:9:0"
									},
									"scope": 2111,
									"src": "38563:176:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										90
									],
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "39118:229:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2064,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "39179:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39179:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2066,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "39206:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39206:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2068,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "39236:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "39242:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "39236:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2072,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "39271:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39263:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "39263:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39263:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39298:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39290:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2074,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "39290:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39290:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "39314:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2078,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "39318:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2079,
																	"nodeType": "ArrayTypeName",
																	"src": "39318:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39314:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2083,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "39135:205:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2062,
												"id": 2084,
												"nodeType": "Return",
												"src": "39128:212:0"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "38745:40:0",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "38799:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38811:2:0"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "38895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38888:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2047,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "38888:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "38929:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38915:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2049,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38915:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "38961:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38947:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2051,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38947:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "38990:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38982:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "39019:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "39011:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39011:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "39058:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "39050:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2057,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "39050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "39093:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "39076:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2059,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2060,
													"nodeType": "ArrayTypeName",
													"src": "39076:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38874:239:0"
									},
									"scope": 2111,
									"src": "38790:557:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "39728:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2094,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "39772:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2092,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "39745:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "39751:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 382,
														"src": "39745:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$203_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39745:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2091,
												"id": 2096,
												"nodeType": "Return",
												"src": "39738:48:0"
											}
										]
									},
									"documentation": {
										"id": 2087,
										"nodeType": "StructuredDocumentation",
										"src": "39353:256:0",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "39676:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39687:2:0"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "39713:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2089,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39713:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39712:15:0"
									},
									"scope": 2111,
									"src": "39667:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "40183:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "40230:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2104,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "40200:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														},
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40209:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 382,
														"src": "40200:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$203_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40200:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2108,
												"nodeType": "Return",
												"src": "40193:54:0"
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "39799:262:0",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "40128:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40142:2:0"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "40168:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40168:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40167:15:0"
									},
									"scope": 2111,
									"src": "40119:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "35606:4650:0",
							"usedErrors": [
								211,
								213
							],
							"usedEvents": [
								71
							]
						},
						{
							"id": 2112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "40402:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2113,
								"nodeType": "StructuredDocumentation",
								"src": "40428:205:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2458,
							"linearizedBaseContracts": [
								2458
							],
							"name": "ECDSA",
							"nameLocation": "40642:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 2118,
									"members": [
										{
											"id": 2114,
											"name": "NoError",
											"nameLocation": "40682:7:0",
											"nodeType": "EnumValue",
											"src": "40682:7:0"
										},
										{
											"id": 2115,
											"name": "InvalidSignature",
											"nameLocation": "40699:16:0",
											"nodeType": "EnumValue",
											"src": "40699:16:0"
										},
										{
											"id": 2116,
											"name": "InvalidSignatureLength",
											"nameLocation": "40725:22:0",
											"nodeType": "EnumValue",
											"src": "40725:22:0"
										},
										{
											"id": 2117,
											"name": "InvalidSignatureS",
											"nameLocation": "40757:17:0",
											"nodeType": "EnumValue",
											"src": "40757:17:0"
										}
									],
									"name": "RecoverError",
									"nameLocation": "40659:12:0",
									"nodeType": "EnumDefinition",
									"src": "40654:126:0"
								},
								{
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "40786:63:0",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 2121,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "40860:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40881:2:0"
									},
									"src": "40854:30:0"
								},
								{
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "40890:60:0",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 2126,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "40961:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "40997:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "40989:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40988:16:0"
									},
									"src": "40955:50:0"
								},
								{
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "41011:85:0",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 2131,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "41107:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "41138:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "41130:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "41130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41129:11:0"
									},
									"src": "41101:40:0"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "42532:653:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2146,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "42546:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42556:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "42546:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42566:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "42546:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2181,
													"nodeType": "Block",
													"src": "43071:108:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43101:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43093:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2168,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "43093:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43093:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2172,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "43105:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "43118:22:0",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2116,
																		"src": "43105:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2118",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2176,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2136,
																					"src": "43150:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "43160:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "43150:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43142:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2174,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "43142:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43142:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2179,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43092:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2145,
															"id": 2180,
															"nodeType": "Return",
															"src": "43085:83:0"
														}
													]
												},
												"id": 2182,
												"nodeType": "IfStatement",
												"src": "42542:637:0",
												"trueBody": {
													"id": 2167,
													"nodeType": "Block",
													"src": "42570:495:0",
													"statements": [
														{
															"assignments": [
																2151
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2151,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "42592:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2167,
																	"src": "42584:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2150,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "42584:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2152,
															"nodeType": "VariableDeclarationStatement",
															"src": "42584:9:0"
														},
														{
															"assignments": [
																2154
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2154,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "42615:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2167,
																	"src": "42607:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2153,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "42607:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2155,
															"nodeType": "VariableDeclarationStatement",
															"src": "42607:9:0"
														},
														{
															"assignments": [
																2157
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2157,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "42636:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2167,
																	"src": "42630:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2156,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "42630:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2158,
															"nodeType": "VariableDeclarationStatement",
															"src": "42630:7:0"
														},
														{
															"AST": {
																"nativeSrc": "42838:171:0",
																"nodeType": "YulBlock",
																"src": "42838:171:0",
																"statements": [
																	{
																		"nativeSrc": "42856:32:0",
																		"nodeType": "YulAssignment",
																		"src": "42856:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "42871:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "42871:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "42882:4:0",
																							"nodeType": "YulLiteral",
																							"src": "42882:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "42867:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "42867:3:0"
																					},
																					"nativeSrc": "42867:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "42867:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "42861:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42861:5:0"
																			},
																			"nativeSrc": "42861:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "42861:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "42856:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42856:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "42905:32:0",
																		"nodeType": "YulAssignment",
																		"src": "42905:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "42920:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "42920:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "42931:4:0",
																							"nodeType": "YulLiteral",
																							"src": "42931:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "42916:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "42916:3:0"
																					},
																					"nativeSrc": "42916:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "42916:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "42910:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42910:5:0"
																			},
																			"nativeSrc": "42910:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "42910:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "42905:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42905:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "42954:41:0",
																		"nodeType": "YulAssignment",
																		"src": "42954:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "42964:1:0",
																					"nodeType": "YulLiteral",
																					"src": "42964:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "42977:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "42977:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "42988:4:0",
																									"nodeType": "YulLiteral",
																									"src": "42988:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "42973:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "42973:3:0"
																							},
																							"nativeSrc": "42973:20:0",
																							"nodeType": "YulFunctionCall",
																							"src": "42973:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "42967:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "42967:5:0"
																					},
																					"nativeSrc": "42967:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "42967:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "42959:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "42959:4:0"
																			},
																			"nativeSrc": "42959:36:0",
																			"nodeType": "YulFunctionCall",
																			"src": "42959:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "42954:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42954:1:0"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2151,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42856:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2154,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42905:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42871:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42920:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42977:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2157,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42954:1:0",
																	"valueSize": 1
																}
															],
															"id": 2159,
															"nodeType": "InlineAssembly",
															"src": "42829:180:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2161,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "43040:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2162,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "43046:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 2163,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "43049:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2164,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "43052:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2160,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2184,
																		2264,
																		2372
																	],
																	"referencedDeclaration": 2372,
																	"src": "43029:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43029:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2145,
															"id": 2166,
															"nodeType": "Return",
															"src": "43022:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "41147:1267:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "42428:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "42447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42439:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "42466:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42453:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42453:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42438:38:0"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42500:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42509:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2140,
														"name": "RecoverError",
														"nameLocations": [
															"42509:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "42509:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "42509:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42499:32:0"
									},
									"scope": 2458,
									"src": "42419:766:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "44079:168:0",
										"statements": [
											{
												"assignments": [
													2195,
													2198,
													2200
												],
												"declarations": [
													{
														"constant": false,
														"id": 2195,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "44098:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2213,
														"src": "44090:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2194,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44090:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2198,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "44122:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2213,
														"src": "44109:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2197,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2196,
																"name": "RecoverError",
																"nameLocations": [
																	"44109:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2118,
																"src": "44109:12:0"
															},
															"referencedDeclaration": 2118,
															"src": "44109:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2200,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "44137:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2213,
														"src": "44129:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2199,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "44129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2205,
												"initialValue": {
													"arguments": [
														{
															"id": 2202,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "44160:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2203,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "44166:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2201,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2184,
															2264,
															2372
														],
														"referencedDeclaration": 2184,
														"src": "44149:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44149:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44089:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2207,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "44198:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2208,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2200,
															"src": "44205:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2206,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "44186:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2118_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44186:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "44186:28:0"
											},
											{
												"expression": {
													"id": 2211,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2195,
													"src": "44231:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2193,
												"id": 2212,
												"nodeType": "Return",
												"src": "44224:16:0"
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "43191:796:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "44001:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "44017:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "44009:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "44036:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "44023:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44023:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44008:38:0"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "44070:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44069:9:0"
									},
									"scope": 2458,
									"src": "43992:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "44575:342:0",
										"statements": [
											{
												"id": 2262,
												"nodeType": "UncheckedBlock",
												"src": "44585:326:0",
												"statements": [
													{
														"assignments": [
															2232
														],
														"declarations": [
															{
																"constant": false,
																"id": 2232,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "44617:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 2262,
																"src": "44609:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 2231,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "44609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2239,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2233,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2221,
																"src": "44621:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44634:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44626:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 2234,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "44626:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44626:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "44621:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "44609:92:0"
													},
													{
														"assignments": [
															2241
														],
														"declarations": [
															{
																"constant": false,
																"id": 2241,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "44818:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 2262,
																"src": "44812:7:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 2240,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "44812:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2254,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2246,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2221,
																							"src": "44837:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2245,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "44829:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2244,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "44829:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "44829:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 2248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "44844:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "44829:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2250,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "44828:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 2251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44851:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "44828:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44822:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2242,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "44822:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44822:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "44812:42:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2256,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "44886:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2257,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "44892:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 2258,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2219,
																	"src": "44895:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2259,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2232,
																	"src": "44898:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2255,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2184,
																	2264,
																	2372
																],
																"referencedDeclaration": 2372,
																"src": "44875:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44875:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 2230,
														"id": 2261,
														"nodeType": "Return",
														"src": "44868:32:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "44253:205:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "44472:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "44491:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44483:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2216,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "44505:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44497:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "44516:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44508:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44482:37:0"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44543:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44552:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2226,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2225,
														"name": "RecoverError",
														"nameLocations": [
															"44552:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "44552:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "44552:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44566:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44542:32:0"
									},
									"scope": 2458,
									"src": "44463:454:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "45130:164:0",
										"statements": [
											{
												"assignments": [
													2277,
													2280,
													2282
												],
												"declarations": [
													{
														"constant": false,
														"id": 2277,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "45149:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2296,
														"src": "45141:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2276,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "45141:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2280,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "45173:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2296,
														"src": "45160:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2278,
																"name": "RecoverError",
																"nameLocations": [
																	"45160:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2118,
																"src": "45160:12:0"
															},
															"referencedDeclaration": 2118,
															"src": "45160:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2282,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "45188:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2296,
														"src": "45180:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2281,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "45180:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2288,
												"initialValue": {
													"arguments": [
														{
															"id": 2284,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "45211:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2285,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "45217:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2286,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "45220:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2283,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2184,
															2264,
															2372
														],
														"referencedDeclaration": 2264,
														"src": "45200:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45200:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45140:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2290,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2280,
															"src": "45245:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2291,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "45252:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2289,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "45233:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2118_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45233:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "45233:28:0"
											},
											{
												"expression": {
													"id": 2294,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2277,
													"src": "45278:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2275,
												"id": 2295,
												"nodeType": "Return",
												"src": "45271:16:0"
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "44923:116:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 2297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "45053:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "45069:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45061:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "45083:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45075:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "45094:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45086:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45060:37:0"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45121:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45120:9:0"
									},
									"scope": 2458,
									"src": "45044:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2371,
										"nodeType": "Block",
										"src": "45588:1372:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2318,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "46484:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2316,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "46476:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46476:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46489:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "46476:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2332,
												"nodeType": "IfStatement",
												"src": "46472:164:0",
												"trueBody": {
													"id": 2331,
													"nodeType": "Block",
													"src": "46557:79:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46587:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46579:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2322,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "46579:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46579:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2326,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "46591:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "46604:17:0",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2117,
																		"src": "46591:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2118",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 2328,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2306,
																		"src": "46623:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46578:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2315,
															"id": 2330,
															"nodeType": "Return",
															"src": "46571:54:0"
														}
													]
												}
											},
											{
												"assignments": [
													2334
												],
												"declarations": [
													{
														"constant": false,
														"id": 2334,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "46738:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2371,
														"src": "46730:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2333,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "46730:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2341,
												"initialValue": {
													"arguments": [
														{
															"id": 2336,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2300,
															"src": "46757:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2337,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "46763:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2338,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "46766:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2339,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2306,
															"src": "46769:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2335,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "46747:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46747:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46730:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2342,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "46785:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46803:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2343,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "46795:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46795:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46785:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2361,
												"nodeType": "IfStatement",
												"src": "46781:113:0",
												"trueBody": {
													"id": 2360,
													"nodeType": "Block",
													"src": "46807:87:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46837:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46829:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2348,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "46829:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46829:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2352,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "46841:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "46854:16:0",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2115,
																		"src": "46841:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2118",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46880:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46872:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2354,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "46872:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46872:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46828:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2315,
															"id": 2359,
															"nodeType": "Return",
															"src": "46821:62:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2362,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "46912:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2363,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "46920:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "46933:7:0",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2114,
															"src": "46920:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46950:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46942:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2365,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "46942:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46942:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2369,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "46911:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 2315,
												"id": 2370,
												"nodeType": "Return",
												"src": "46904:49:0"
											}
										]
									},
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "45300:125:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "45439:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "45467:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45459:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "45487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45481:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2301,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "45481:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "45506:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45498:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "45525:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45517:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45449:83:0"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45556:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45565:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2311,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2310,
														"name": "RecoverError",
														"nameLocations": [
															"45565:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "45565:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "45565:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45579:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45555:32:0"
									},
									"scope": 2458,
									"src": "45430:1530:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "47187:166:0",
										"statements": [
											{
												"assignments": [
													2387,
													2390,
													2392
												],
												"declarations": [
													{
														"constant": false,
														"id": 2387,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "47206:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "47198:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2386,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47198:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2390,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "47230:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "47217:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2389,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2388,
																"name": "RecoverError",
																"nameLocations": [
																	"47217:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2118,
																"src": "47217:12:0"
															},
															"referencedDeclaration": 2118,
															"src": "47217:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2392,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "47245:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "47237:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2391,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "47237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2399,
												"initialValue": {
													"arguments": [
														{
															"id": 2394,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "47268:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2395,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2377,
															"src": "47274:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2396,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2379,
															"src": "47277:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2397,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "47280:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2393,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2184,
															2264,
															2372
														],
														"referencedDeclaration": 2372,
														"src": "47257:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47257:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47197:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2401,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "47304:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2402,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "47311:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2400,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "47292:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2118_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47292:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2404,
												"nodeType": "ExpressionStatement",
												"src": "47292:28:0"
											},
											{
												"expression": {
													"id": 2405,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2387,
													"src": "47337:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2385,
												"id": 2406,
												"nodeType": "Return",
												"src": "47330:16:0"
											}
										]
									},
									"documentation": {
										"id": 2373,
										"nodeType": "StructuredDocumentation",
										"src": "46966:122:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "47102:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "47118:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47110:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2374,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "47130:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47124:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2376,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "47124:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "47141:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47133:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "47152:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47144:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47109:45:0"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47178:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47178:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47177:9:0"
									},
									"scope": 2458,
									"src": "47093:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2456,
										"nodeType": "Block",
										"src": "47558:460:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2417,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2412,
														"src": "47572:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2418,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "47581:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "47594:7:0",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2114,
														"src": "47581:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "47572:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 2426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2423,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "47668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2424,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "47677:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "47690:16:0",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2115,
															"src": "47677:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "47668:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2431,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "47773:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$2118",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2432,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "47782:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "47795:22:0",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2116,
																"src": "47782:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$2118",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "47773:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$2118",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2443,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "47907:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$2118",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2444,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2118,
																		"src": "47916:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "47929:17:0",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2117,
																	"src": "47916:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$2118",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "47907:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2452,
															"nodeType": "IfStatement",
															"src": "47903:109:0",
															"trueBody": {
																"id": 2451,
																"nodeType": "Block",
																"src": "47948:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2448,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2414,
																					"src": "47992:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2447,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2131,
																				"src": "47969:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "47969:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2450,
																		"nodeType": "RevertStatement",
																		"src": "47962:39:0"
																	}
																]
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "47769:243:0",
														"trueBody": {
															"id": 2442,
															"nodeType": "Block",
															"src": "47819:78:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2438,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2414,
																						"src": "47876:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "47868:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2436,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "47868:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "47868:17:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2435,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "47840:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47840:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2441,
																	"nodeType": "RevertStatement",
																	"src": "47833:53:0"
																}
															]
														}
													},
													"id": 2454,
													"nodeType": "IfStatement",
													"src": "47664:348:0",
													"trueBody": {
														"id": 2430,
														"nodeType": "Block",
														"src": "47708:55:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2427,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "47729:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47729:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2429,
																"nodeType": "RevertStatement",
																"src": "47722:30:0"
															}
														]
													}
												},
												"id": 2455,
												"nodeType": "IfStatement",
												"src": "47568:444:0",
												"trueBody": {
													"id": 2422,
													"nodeType": "Block",
													"src": "47603:55:0",
													"statements": [
														{
															"functionReturnParameters": 2416,
															"id": 2421,
															"nodeType": "Return",
															"src": "47617:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2409,
										"nodeType": "StructuredDocumentation",
										"src": "47359:122:0",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 2457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "47495:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "47520:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "47507:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2410,
														"name": "RecoverError",
														"nameLocations": [
															"47507:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "47507:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "47507:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "47535:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "47527:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2413,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47506:38:0"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47558:0:0"
									},
									"scope": 2458,
									"src": "47486:532:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3639,
							"src": "40634:7386:0",
							"usedErrors": [
								2121,
								2126,
								2131
							],
							"usedEvents": []
						},
						{
							"id": 2459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "48188:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2460,
								"nodeType": "StructuredDocumentation",
								"src": "48214:1963:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 2493,
							"linearizedBaseContracts": [
								2493
							],
							"name": "IERC20Permit",
							"nameLocation": "50188:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2461,
										"nodeType": "StructuredDocumentation",
										"src": "50207:850:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 2478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "51071:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "51095:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51087:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51087:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "51118:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51110:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51143:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51135:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "51166:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51158:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "51190:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51184:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2470,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "51184:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "51209:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51201:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2472,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "51201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "51228:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51220:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2474,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "51220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51077:158:0"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51244:0:0"
									},
									"scope": 2493,
									"src": "51062:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2479,
										"nodeType": "StructuredDocumentation",
										"src": "51251:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 2486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "51559:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "51574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "51566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51565:15:0"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "51604:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51603:9:0"
									},
									"scope": 2493,
									"src": "51550:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "51619:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 2492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "51814:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51830:2:0"
									},
									"returnParameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "51856:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "51856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51855:9:0"
									},
									"scope": 2493,
									"src": "51805:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3639,
							"src": "50178:1689:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2494,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "52014:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2495,
								"nodeType": "StructuredDocumentation",
								"src": "52040:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 2534,
							"linearizedBaseContracts": [
								2534
							],
							"name": "IERC20Errors",
							"nameLocation": "52190:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2496,
										"nodeType": "StructuredDocumentation",
										"src": "52209:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 2504,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "52529:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "52562:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "52554:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52554:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "52578:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "52570:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "52595:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "52587:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52553:49:0"
									},
									"src": "52523:80:0"
								},
								{
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "52609:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 2509,
									"name": "ERC20InvalidSender",
									"nameLocation": "52772:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "52799:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "52791:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52790:16:0"
									},
									"src": "52766:41:0"
								},
								{
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "52813:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 2514,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "52983:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "53012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "53004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53003:18:0"
									},
									"src": "52977:45:0"
								},
								{
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "53028:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 2523,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "53384:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "53419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "53411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "53436:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "53428:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "53455:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "53447:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53410:52:0"
									},
									"src": "53378:85:0"
								},
								{
									"documentation": {
										"id": 2524,
										"nodeType": "StructuredDocumentation",
										"src": "53469:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 2528,
									"name": "ERC20InvalidApprover",
									"nameLocation": "53654:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "53683:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "53675:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53674:18:0"
									},
									"src": "53648:45:0"
								},
								{
									"documentation": {
										"id": 2529,
										"nodeType": "StructuredDocumentation",
										"src": "53699:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 2533,
									"name": "ERC20InvalidSpender",
									"nameLocation": "53905:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "53933:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "53925:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53924:17:0"
									},
									"src": "53899:43:0"
								}
							],
							"scope": 3639,
							"src": "52180:1764:0",
							"usedErrors": [
								2504,
								2509,
								2514,
								2523,
								2528,
								2533
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2535,
								"nodeType": "StructuredDocumentation",
								"src": "53946:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 2582,
							"linearizedBaseContracts": [
								2582
							],
							"name": "IERC721Errors",
							"nameLocation": "54098:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2536,
										"nodeType": "StructuredDocumentation",
										"src": "54118:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 2540,
									"name": "ERC721InvalidOwner",
									"nameLocation": "54348:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "54375:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "54367:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54366:15:0"
									},
									"src": "54342:40:0"
								},
								{
									"documentation": {
										"id": 2541,
										"nodeType": "StructuredDocumentation",
										"src": "54388:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 2545,
									"name": "ERC721NonexistentToken",
									"nameLocation": "54531:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54562:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "54554:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54553:17:0"
									},
									"src": "54525:46:0"
								},
								{
									"documentation": {
										"id": 2546,
										"nodeType": "StructuredDocumentation",
										"src": "54577:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 2554,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "54877:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "54906:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "54898:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54922:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "54914:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "54939:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "54931:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54897:48:0"
									},
									"src": "54871:75:0"
								},
								{
									"documentation": {
										"id": 2555,
										"nodeType": "StructuredDocumentation",
										"src": "54952:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 2559,
									"name": "ERC721InvalidSender",
									"nameLocation": "55115:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "55143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "55135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55134:16:0"
									},
									"src": "55109:42:0"
								},
								{
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "55157:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 2564,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "55327:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "55357:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "55349:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55348:18:0"
									},
									"src": "55321:46:0"
								},
								{
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "55373:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 2571,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "55631:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "55666:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "55658:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "55676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55657:35:0"
									},
									"src": "55625:68:0"
								},
								{
									"documentation": {
										"id": 2572,
										"nodeType": "StructuredDocumentation",
										"src": "55699:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 2576,
									"name": "ERC721InvalidApprover",
									"nameLocation": "55884:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "55914:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "55906:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55905:18:0"
									},
									"src": "55878:46:0"
								},
								{
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "55930:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 2581,
									"name": "ERC721InvalidOperator",
									"nameLocation": "56138:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "56168:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "56160:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56159:18:0"
									},
									"src": "56132:46:0"
								}
							],
							"scope": 3639,
							"src": "54088:2092:0",
							"usedErrors": [
								2540,
								2545,
								2554,
								2559,
								2564,
								2571,
								2576,
								2581
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2583,
								"nodeType": "StructuredDocumentation",
								"src": "56182:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 2629,
							"linearizedBaseContracts": [
								2629
							],
							"name": "IERC1155Errors",
							"nameLocation": "56336:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "56357:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 2594,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "56729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "56764:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56756:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "56780:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56772:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "56797:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56789:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "56813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56755:66:0"
									},
									"src": "56723:99:0"
								},
								{
									"documentation": {
										"id": 2595,
										"nodeType": "StructuredDocumentation",
										"src": "56828:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 2599,
									"name": "ERC1155InvalidSender",
									"nameLocation": "56991:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "57020:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "57012:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57011:16:0"
									},
									"src": "56985:43:0"
								},
								{
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "57034:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 2604,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "57204:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "57235:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "57227:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57226:18:0"
									},
									"src": "57198:47:0"
								},
								{
									"documentation": {
										"id": 2605,
										"nodeType": "StructuredDocumentation",
										"src": "57251:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 2611,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "57518:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "57555:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "57547:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "57573:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "57565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57546:33:0"
									},
									"src": "57512:68:0"
								},
								{
									"documentation": {
										"id": 2612,
										"nodeType": "StructuredDocumentation",
										"src": "57586:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 2616,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "57771:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "57802:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "57794:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57793:18:0"
									},
									"src": "57765:47:0"
								},
								{
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "57818:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 2621,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "58026:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "58057:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "58049:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58048:18:0"
									},
									"src": "58020:47:0"
								},
								{
									"documentation": {
										"id": 2622,
										"nodeType": "StructuredDocumentation",
										"src": "58073:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 2628,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "58364:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "58398:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "58390:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "58417:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "58409:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58389:41:0"
									},
									"src": "58358:73:0"
								}
							],
							"scope": 3639,
							"src": "56326:2107:0",
							"usedErrors": [
								2594,
								2599,
								2604,
								2611,
								2616,
								2621,
								2628
							],
							"usedEvents": []
						},
						{
							"id": 2630,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "58557:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2631,
								"nodeType": "StructuredDocumentation",
								"src": "58583:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2650,
							"linearizedBaseContracts": [
								2650
							],
							"name": "Context",
							"nameLocation": "59098:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2639,
										"nodeType": "Block",
										"src": "59174:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2636,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "59191:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "59195:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "59191:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2635,
												"id": 2638,
												"nodeType": "Return",
												"src": "59184:17:0"
											}
										]
									},
									"id": 2640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "59121:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59131:2:0"
									},
									"returnParameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "59165:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59164:9:0"
									},
									"scope": 2650,
									"src": "59112:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2648,
										"nodeType": "Block",
										"src": "59281:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2645,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "59298:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "59302:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "59298:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2644,
												"id": 2647,
												"nodeType": "Return",
												"src": "59291:15:0"
											}
										]
									},
									"id": 2649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "59223:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59231:2:0"
									},
									"returnParameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "59265:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "59265:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59264:16:0"
									},
									"scope": 2650,
									"src": "59214:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "59080:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "59441:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2653,
										"name": "Context",
										"nameLocations": [
											"59985:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2650,
										"src": "59985:7:0"
									},
									"id": 2654,
									"nodeType": "InheritanceSpecifier",
									"src": "59985:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2652,
								"nodeType": "StructuredDocumentation",
								"src": "59468:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2795,
							"linearizedBaseContracts": [
								2795,
								2650
							],
							"name": "Ownable",
							"nameLocation": "59974:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2656,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "60015:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2795,
									"src": "59999:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2655,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "59999:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2657,
										"nodeType": "StructuredDocumentation",
										"src": "60028:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 2661,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "60124:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "60159:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "60151:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60150:17:0"
									},
									"src": "60118:50:0"
								},
								{
									"documentation": {
										"id": 2662,
										"nodeType": "StructuredDocumentation",
										"src": "60174:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 2666,
									"name": "OwnableInvalidOwner",
									"nameLocation": "60267:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "60295:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "60287:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60286:15:0"
									},
									"src": "60261:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 2672,
									"name": "OwnershipTransferred",
									"nameLocation": "60314:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "60351:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "60335:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2670,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "60382:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2672,
												"src": "60366:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60334:57:0"
									},
									"src": "60308:84:0"
								},
								{
									"body": {
										"id": 2697,
										"nodeType": "Block",
										"src": "60552:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2678,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2675,
														"src": "60566:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "60590:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "60582:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2679,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "60582:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60582:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60566:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2692,
												"nodeType": "IfStatement",
												"src": "60562:95:0",
												"trueBody": {
													"id": 2691,
													"nodeType": "Block",
													"src": "60594:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "60643:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "60635:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2685,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "60635:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60635:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2684,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2666,
																	"src": "60615:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60615:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2690,
															"nodeType": "RevertStatement",
															"src": "60608:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2694,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "60685:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2693,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2794,
														"src": "60666:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60666:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2696,
												"nodeType": "ExpressionStatement",
												"src": "60666:32:0"
											}
										]
									},
									"documentation": {
										"id": 2673,
										"nodeType": "StructuredDocumentation",
										"src": "60398:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 2698,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "60538:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "60530:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60529:22:0"
									},
									"returnParameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60552:0:0"
									},
									"scope": 2795,
									"src": "60518:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "60814:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2701,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2732,
														"src": "60824:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60824:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2703,
												"nodeType": "ExpressionStatement",
												"src": "60824:13:0"
											},
											{
												"id": 2704,
												"nodeType": "PlaceholderStatement",
												"src": "60847:1:0"
											}
										]
									},
									"documentation": {
										"id": 2699,
										"nodeType": "StructuredDocumentation",
										"src": "60711:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2706,
									"name": "onlyOwner",
									"nameLocation": "60802:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60811:2:0"
									},
									"src": "60793:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2714,
										"nodeType": "Block",
										"src": "60986:30:0",
										"statements": [
											{
												"expression": {
													"id": 2712,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2656,
													"src": "61003:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2711,
												"id": 2713,
												"nodeType": "Return",
												"src": "60996:13:0"
											}
										]
									},
									"documentation": {
										"id": 2707,
										"nodeType": "StructuredDocumentation",
										"src": "60861:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "60940:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60945:2:0"
									},
									"returnParameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "60977:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60976:9:0"
									},
									"scope": 2795,
									"src": "60931:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2731,
										"nodeType": "Block",
										"src": "61134:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2719,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2715,
															"src": "61148:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61148:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2721,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "61159:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61159:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "61148:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2730,
												"nodeType": "IfStatement",
												"src": "61144:101:0",
												"trueBody": {
													"id": 2729,
													"nodeType": "Block",
													"src": "61173:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2725,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "61221:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "61221:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2724,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2661,
																	"src": "61194:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61194:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2728,
															"nodeType": "RevertStatement",
															"src": "61187:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2716,
										"nodeType": "StructuredDocumentation",
										"src": "61022:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 2732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "61098:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61109:2:0"
									},
									"returnParameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61134:0:0"
									},
									"scope": 2795,
									"src": "61089:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2745,
										"nodeType": "Block",
										"src": "61640:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "61677:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "61669:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2739,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "61669:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61669:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2738,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2794,
														"src": "61650:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61650:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2744,
												"nodeType": "ExpressionStatement",
												"src": "61650:30:0"
											}
										]
									},
									"documentation": {
										"id": 2733,
										"nodeType": "StructuredDocumentation",
										"src": "61257:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2746,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2736,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2735,
												"name": "onlyOwner",
												"nameLocations": [
													"61630:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2706,
												"src": "61630:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61630:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "61595:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61612:2:0"
									},
									"returnParameters": {
										"id": 2737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61640:0:0"
									},
									"scope": 2795,
									"src": "61586:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2773,
										"nodeType": "Block",
										"src": "61906:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2754,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2749,
														"src": "61920:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "61940:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "61932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2755,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "61932:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61932:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "61920:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2768,
												"nodeType": "IfStatement",
												"src": "61916:91:0",
												"trueBody": {
													"id": 2767,
													"nodeType": "Block",
													"src": "61944:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "61993:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "61985:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2761,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "61985:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "61985:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2760,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2666,
																	"src": "61965:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61965:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2766,
															"nodeType": "RevertStatement",
															"src": "61958:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2770,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2749,
															"src": "62035:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2769,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2794,
														"src": "62016:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62016:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2772,
												"nodeType": "ExpressionStatement",
												"src": "62016:28:0"
											}
										]
									},
									"documentation": {
										"id": 2747,
										"nodeType": "StructuredDocumentation",
										"src": "61693:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2774,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2752,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2751,
												"name": "onlyOwner",
												"nameLocations": [
													"61896:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2706,
												"src": "61896:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61896:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "61845:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "61871:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2774,
												"src": "61863:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61862:18:0"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61906:0:0"
									},
									"scope": 2795,
									"src": "61836:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2793,
										"nodeType": "Block",
										"src": "62268:124:0",
										"statements": [
											{
												"assignments": [
													2781
												],
												"declarations": [
													{
														"constant": false,
														"id": 2781,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "62286:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2793,
														"src": "62278:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2780,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "62278:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2783,
												"initialValue": {
													"id": 2782,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2656,
													"src": "62297:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "62278:25:0"
											},
											{
												"expression": {
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2784,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2656,
														"src": "62313:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2785,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2777,
														"src": "62322:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "62313:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2787,
												"nodeType": "ExpressionStatement",
												"src": "62313:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2789,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2781,
															"src": "62366:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2790,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2777,
															"src": "62376:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2788,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2672,
														"src": "62345:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62345:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2792,
												"nodeType": "EmitStatement",
												"src": "62340:45:0"
											}
										]
									},
									"documentation": {
										"id": 2775,
										"nodeType": "StructuredDocumentation",
										"src": "62057:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "62214:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "62241:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "62233:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62232:18:0"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62268:0:0"
									},
									"scope": 2795,
									"src": "62205:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "59956:2438:0",
							"usedErrors": [
								2661,
								2666
							],
							"usedEvents": [
								2672
							]
						},
						{
							"id": 2796,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "62528:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2797,
								"nodeType": "StructuredDocumentation",
								"src": "62554:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2872,
							"linearizedBaseContracts": [
								2872
							],
							"name": "IERC20",
							"nameLocation": "62635:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2798,
										"nodeType": "StructuredDocumentation",
										"src": "62648:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2806,
									"name": "Transfer",
									"nameLocation": "62817:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "62842:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2806,
												"src": "62826:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2802,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "62864:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2806,
												"src": "62848:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2804,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "62876:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2806,
												"src": "62868:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "62868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62825:57:0"
									},
									"src": "62811:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2807,
										"nodeType": "StructuredDocumentation",
										"src": "62889:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2815,
									"name": "Approval",
									"nameLocation": "63048:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2809,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "63073:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "63057:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2811,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "63096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "63080:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2813,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "63113:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2815,
												"src": "63105:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63056:63:0"
									},
									"src": "63042:78:0"
								},
								{
									"documentation": {
										"id": 2816,
										"nodeType": "StructuredDocumentation",
										"src": "63126:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "63205:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63216:2:0"
									},
									"returnParameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "63242:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63241:9:0"
									},
									"scope": 2872,
									"src": "63196:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2822,
										"nodeType": "StructuredDocumentation",
										"src": "63257:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "63342:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "63360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "63352:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63351:17:0"
									},
									"returnParameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "63392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63391:9:0"
									},
									"scope": 2872,
									"src": "63333:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2830,
										"nodeType": "StructuredDocumentation",
										"src": "63407:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "63634:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "63651:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "63643:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63643:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "63663:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "63655:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63642:27:0"
									},
									"returnParameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "63688:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "63688:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63687:6:0"
									},
									"scope": 2872,
									"src": "63625:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2840,
										"nodeType": "StructuredDocumentation",
										"src": "63700:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "63978:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "63996:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "63988:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "64011:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "64003:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64003:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63987:32:0"
									},
									"returnParameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "64043:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64042:9:0"
									},
									"scope": 2872,
									"src": "63969:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2850,
										"nodeType": "StructuredDocumentation",
										"src": "64058:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "64739:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "64755:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "64747:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "64772:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "64764:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64746:32:0"
									},
									"returnParameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "64797:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "64797:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64796:6:0"
									},
									"scope": 2872,
									"src": "64730:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2860,
										"nodeType": "StructuredDocumentation",
										"src": "64809:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "65120:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "65141:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "65133:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "65155:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "65147:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "65167:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "65159:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65132:41:0"
									},
									"returnParameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "65192:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2868,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "65192:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65191:6:0"
									},
									"scope": 2872,
									"src": "65111:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3639,
							"src": "62625:2575:0",
							"usedErrors": [],
							"usedEvents": [
								2806,
								2815
							]
						},
						{
							"id": 2873,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "65372:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2875,
										"name": "IERC20",
										"nameLocations": [
											"65514:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2872,
										"src": "65514:6:0"
									},
									"id": 2876,
									"nodeType": "InheritanceSpecifier",
									"src": "65514:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2874,
								"nodeType": "StructuredDocumentation",
								"src": "65399:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 2895,
							"linearizedBaseContracts": [
								2895,
								2872
							],
							"name": "IERC20Metadata",
							"nameLocation": "65496:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2877,
										"nodeType": "StructuredDocumentation",
										"src": "65527:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "65595:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65599:2:0"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "65625:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2879,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65625:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65624:15:0"
									},
									"scope": 2895,
									"src": "65586:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2883,
										"nodeType": "StructuredDocumentation",
										"src": "65646:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "65716:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65722:2:0"
									},
									"returnParameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "65748:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2885,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65748:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65747:15:0"
									},
									"scope": 2895,
									"src": "65707:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2889,
										"nodeType": "StructuredDocumentation",
										"src": "65769:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "65848:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65856:2:0"
									},
									"returnParameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "65882:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2891,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "65882:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65881:7:0"
									},
									"scope": 2895,
									"src": "65839:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3639,
							"src": "65486:405:0",
							"usedErrors": [],
							"usedEvents": [
								2806,
								2815
							]
						},
						{
							"id": 2896,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "66023:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2898,
										"name": "Context",
										"nameLocations": [
											"67133:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2650,
										"src": "67133:7:0"
									},
									"id": 2899,
									"nodeType": "InheritanceSpecifier",
									"src": "67133:7:0"
								},
								{
									"baseName": {
										"id": 2900,
										"name": "IERC20",
										"nameLocations": [
											"67142:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2872,
										"src": "67142:6:0"
									},
									"id": 2901,
									"nodeType": "InheritanceSpecifier",
									"src": "67142:6:0"
								},
								{
									"baseName": {
										"id": 2902,
										"name": "IERC20Metadata",
										"nameLocations": [
											"67150:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2895,
										"src": "67150:14:0"
									},
									"id": 2903,
									"nodeType": "InheritanceSpecifier",
									"src": "67150:14:0"
								},
								{
									"baseName": {
										"id": 2904,
										"name": "IERC20Errors",
										"nameLocations": [
											"67166:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2534,
										"src": "67166:12:0"
									},
									"id": 2905,
									"nodeType": "InheritanceSpecifier",
									"src": "67166:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2897,
								"nodeType": "StructuredDocumentation",
								"src": "66053:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 3401,
							"linearizedBaseContracts": [
								3401,
								2534,
								2895,
								2872,
								2650
							],
							"name": "ERC20",
							"nameLocation": "67124:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2909,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "67229:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3401,
									"src": "67185:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2908,
										"keyName": "account",
										"keyNameLocation": "67201:7:0",
										"keyType": {
											"id": 2906,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "67193:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "67185:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2907,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "67212:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2915,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "67317:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3401,
									"src": "67245:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 2914,
										"keyName": "account",
										"keyNameLocation": "67261:7:0",
										"keyType": {
											"id": 2910,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "67253:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "67245:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2913,
											"keyName": "spender",
											"keyNameLocation": "67288:7:0",
											"keyType": {
												"id": 2911,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "67280:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "67272:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2912,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "67299:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2917,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "67351:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3401,
									"src": "67335:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2916,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "67335:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2919,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "67385:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3401,
									"src": "67370:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2918,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "67370:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2921,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "67411:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3401,
									"src": "67396:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2920,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "67396:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2937,
										"nodeType": "Block",
										"src": "67657:57:0",
										"statements": [
											{
												"expression": {
													"id": 2931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2929,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2919,
														"src": "67667:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2930,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2924,
														"src": "67675:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "67667:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2932,
												"nodeType": "ExpressionStatement",
												"src": "67667:13:0"
											},
											{
												"expression": {
													"id": 2935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2933,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2921,
														"src": "67690:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2934,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2926,
														"src": "67700:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "67690:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2936,
												"nodeType": "ExpressionStatement",
												"src": "67690:17:0"
											}
										]
									},
									"documentation": {
										"id": 2922,
										"nodeType": "StructuredDocumentation",
										"src": "67425:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 2938,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "67627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "67613:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2923,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67613:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "67648:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "67634:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2925,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67634:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67612:44:0"
									},
									"returnParameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67657:0:0"
									},
									"scope": 3401,
									"src": "67601:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2882
									],
									"body": {
										"id": 2946,
										"nodeType": "Block",
										"src": "67839:29:0",
										"statements": [
											{
												"expression": {
													"id": 2944,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2919,
													"src": "67856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2943,
												"id": 2945,
												"nodeType": "Return",
												"src": "67849:12:0"
											}
										]
									},
									"documentation": {
										"id": 2939,
										"nodeType": "StructuredDocumentation",
										"src": "67720:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "67788:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67792:2:0"
									},
									"returnParameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "67824:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2941,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67824:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67823:15:0"
									},
									"scope": 3401,
									"src": "67779:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2888
									],
									"body": {
										"id": 2955,
										"nodeType": "Block",
										"src": "68043:31:0",
										"statements": [
											{
												"expression": {
													"id": 2953,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2921,
													"src": "68060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2952,
												"id": 2954,
												"nodeType": "Return",
												"src": "68053:14:0"
											}
										]
									},
									"documentation": {
										"id": 2948,
										"nodeType": "StructuredDocumentation",
										"src": "67874:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "67990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67996:2:0"
									},
									"returnParameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2956,
												"src": "68028:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "68028:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68027:15:0"
									},
									"scope": 3401,
									"src": "67981:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2894
									],
									"body": {
										"id": 2964,
										"nodeType": "Block",
										"src": "68763:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "68780:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 2961,
												"id": 2963,
												"nodeType": "Return",
												"src": "68773:9:0"
											}
										]
									},
									"documentation": {
										"id": 2957,
										"nodeType": "StructuredDocumentation",
										"src": "68080:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 2965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "68716:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68724:2:0"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "68756:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2959,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "68756:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68755:7:0"
									},
									"scope": 3401,
									"src": "68707:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2821
									],
									"body": {
										"id": 2973,
										"nodeType": "Block",
										"src": "68910:36:0",
										"statements": [
											{
												"expression": {
													"id": 2971,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2917,
													"src": "68927:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2970,
												"id": 2972,
												"nodeType": "Return",
												"src": "68920:19:0"
											}
										]
									},
									"documentation": {
										"id": 2966,
										"nodeType": "StructuredDocumentation",
										"src": "68795:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 2974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "68858:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68869:2:0"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "68901:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68900:9:0"
									},
									"scope": 3401,
									"src": "68849:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2829
									],
									"body": {
										"id": 2986,
										"nodeType": "Block",
										"src": "69078:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2982,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2909,
														"src": "69095:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2984,
													"indexExpression": {
														"id": 2983,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2977,
														"src": "69105:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "69095:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2981,
												"id": 2985,
												"nodeType": "Return",
												"src": "69088:25:0"
											}
										]
									},
									"documentation": {
										"id": 2975,
										"nodeType": "StructuredDocumentation",
										"src": "68952:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "69013:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "69031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "69023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69022:17:0"
									},
									"returnParameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "69069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69068:9:0"
									},
									"scope": 3401,
									"src": "69004:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2839
									],
									"body": {
										"id": 3010,
										"nodeType": "Block",
										"src": "69390:103:0",
										"statements": [
											{
												"assignments": [
													2998
												],
												"declarations": [
													{
														"constant": false,
														"id": 2998,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "69408:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3010,
														"src": "69400:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2997,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "69400:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3001,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2999,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "69416:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69416:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "69400:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3003,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2998,
															"src": "69448:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3004,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2990,
															"src": "69455:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3005,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2992,
															"src": "69459:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3002,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3131,
														"src": "69438:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69438:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3007,
												"nodeType": "ExpressionStatement",
												"src": "69438:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "69482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2996,
												"id": 3009,
												"nodeType": "Return",
												"src": "69475:11:0"
											}
										]
									},
									"documentation": {
										"id": 2988,
										"nodeType": "StructuredDocumentation",
										"src": "69126:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 3011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "69324:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "69341:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3011,
												"src": "69333:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "69353:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3011,
												"src": "69345:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69332:27:0"
									},
									"returnParameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3011,
												"src": "69384:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "69384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69383:6:0"
									},
									"scope": 3401,
									"src": "69315:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2849
									],
									"body": {
										"id": 3027,
										"nodeType": "Block",
										"src": "69640:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3021,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2915,
															"src": "69657:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 3023,
														"indexExpression": {
															"id": 3022,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3014,
															"src": "69669:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "69657:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3025,
													"indexExpression": {
														"id": 3024,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3016,
														"src": "69676:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "69657:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3020,
												"id": 3026,
												"nodeType": "Return",
												"src": "69650:34:0"
											}
										]
									},
									"documentation": {
										"id": 3012,
										"nodeType": "StructuredDocumentation",
										"src": "69499:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 3028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "69560:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "69578:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "69570:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3016,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "69593:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "69585:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69569:32:0"
									},
									"returnParameters": {
										"id": 3020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "69631:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69630:9:0"
									},
									"scope": 3401,
									"src": "69551:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2859
									],
									"body": {
										"id": 3051,
										"nodeType": "Block",
										"src": "70077:107:0",
										"statements": [
											{
												"assignments": [
													3039
												],
												"declarations": [
													{
														"constant": false,
														"id": 3039,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "70095:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3051,
														"src": "70087:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3038,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "70087:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3042,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3040,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "70103:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70103:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70087:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3044,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3039,
															"src": "70134:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3045,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3031,
															"src": "70141:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3046,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3033,
															"src": "70150:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3043,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3292,
															3352
														],
														"referencedDeclaration": 3292,
														"src": "70125:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70125:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3048,
												"nodeType": "ExpressionStatement",
												"src": "70125:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3049,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "70173:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3037,
												"id": 3050,
												"nodeType": "Return",
												"src": "70166:11:0"
											}
										]
									},
									"documentation": {
										"id": 3029,
										"nodeType": "StructuredDocumentation",
										"src": "69697:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 3052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "70007:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "70023:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "70015:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "70040:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "70032:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70014:32:0"
									},
									"returnParameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "70071:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3035,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "70071:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70070:6:0"
									},
									"scope": 3401,
									"src": "69998:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2871
									],
									"body": {
										"id": 3083,
										"nodeType": "Block",
										"src": "70837:151:0",
										"statements": [
											{
												"assignments": [
													3065
												],
												"declarations": [
													{
														"constant": false,
														"id": 3065,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "70855:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3083,
														"src": "70847:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3064,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "70847:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3068,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3066,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "70865:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70865:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70847:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3070,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3055,
															"src": "70903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3071,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3065,
															"src": "70909:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3072,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3059,
															"src": "70918:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3069,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3400,
														"src": "70887:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70887:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3074,
												"nodeType": "ExpressionStatement",
												"src": "70887:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3076,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3055,
															"src": "70944:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3057,
															"src": "70950:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3078,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3059,
															"src": "70954:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3075,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3131,
														"src": "70934:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70934:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3080,
												"nodeType": "ExpressionStatement",
												"src": "70934:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "70977:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3063,
												"id": 3082,
												"nodeType": "Return",
												"src": "70970:11:0"
											}
										]
									},
									"documentation": {
										"id": 3053,
										"nodeType": "StructuredDocumentation",
										"src": "70190:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 3084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "70753:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "70774:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "70766:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "70788:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "70780:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "70800:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "70792:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70792:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70765:41:0"
									},
									"returnParameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "70831:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3061,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "70831:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70830:6:0"
									},
									"scope": 3401,
									"src": "70744:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3130,
										"nodeType": "Block",
										"src": "71430:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3094,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3087,
														"src": "71444:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "71460:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "71452:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3095,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "71452:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71452:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "71444:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3108,
												"nodeType": "IfStatement",
												"src": "71440:86:0",
												"trueBody": {
													"id": 3107,
													"nodeType": "Block",
													"src": "71464:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "71512:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "71504:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3101,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "71504:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "71504:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3100,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "71485:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71485:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3106,
															"nodeType": "RevertStatement",
															"src": "71478:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3109,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3089,
														"src": "71539:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "71553:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "71545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3110,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "71545:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71545:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "71539:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3123,
												"nodeType": "IfStatement",
												"src": "71535:86:0",
												"trueBody": {
													"id": 3122,
													"nodeType": "Block",
													"src": "71557:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "71607:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "71599:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3116,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "71599:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "71599:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3115,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "71578:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71578:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3121,
															"nodeType": "RevertStatement",
															"src": "71571:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3125,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3087,
															"src": "71638:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3126,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3089,
															"src": "71644:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3127,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3091,
															"src": "71648:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3124,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3208,
														"src": "71630:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71630:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3129,
												"nodeType": "ExpressionStatement",
												"src": "71630:24:0"
											}
										]
									},
									"documentation": {
										"id": 3085,
										"nodeType": "StructuredDocumentation",
										"src": "70994:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 3131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "71370:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "71388:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "71380:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "71402:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "71394:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "71414:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "71406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71379:41:0"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71430:0:0"
									},
									"scope": 3401,
									"src": "71361:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3207,
										"nodeType": "Block",
										"src": "72051:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3141,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3134,
														"src": "72065:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "72073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3142,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "72073:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72073:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "72065:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3178,
													"nodeType": "Block",
													"src": "72239:362:0",
													"statements": [
														{
															"assignments": [
																3153
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3153,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "72261:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3178,
																	"src": "72253:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3152,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "72253:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3157,
															"initialValue": {
																"baseExpression": {
																	"id": 3154,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2909,
																	"src": "72275:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3156,
																"indexExpression": {
																	"id": 3155,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3134,
																	"src": "72285:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "72275:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "72253:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3158,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3153,
																	"src": "72308:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3138,
																	"src": "72322:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "72308:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3168,
															"nodeType": "IfStatement",
															"src": "72304:115:0",
															"trueBody": {
																"id": 3167,
																"nodeType": "Block",
																"src": "72329:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 3162,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3134,
																					"src": "72379:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3163,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3153,
																					"src": "72385:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3164,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3138,
																					"src": "72398:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3161,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2504,
																				"src": "72354:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 3165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "72354:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3166,
																		"nodeType": "RevertStatement",
																		"src": "72347:57:0"
																	}
																]
															}
														},
														{
															"id": 3177,
															"nodeType": "UncheckedBlock",
															"src": "72432:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 3175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 3169,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2909,
																				"src": "72539:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3171,
																			"indexExpression": {
																				"id": 3170,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3134,
																				"src": "72549:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "72539:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3172,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3153,
																				"src": "72557:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3173,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3138,
																				"src": "72571:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "72557:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "72539:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3176,
																	"nodeType": "ExpressionStatement",
																	"src": "72539:37:0"
																}
															]
														}
													]
												},
												"id": 3179,
												"nodeType": "IfStatement",
												"src": "72061:540:0",
												"trueBody": {
													"id": 3151,
													"nodeType": "Block",
													"src": "72085:148:0",
													"statements": [
														{
															"expression": {
																"id": 3149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3147,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2917,
																	"src": "72201:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3148,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3138,
																	"src": "72217:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "72201:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3150,
															"nodeType": "ExpressionStatement",
															"src": "72201:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3180,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3136,
														"src": "72615:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72629:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "72621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3181,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "72621:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3184,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72621:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "72615:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3199,
													"nodeType": "Block",
													"src": "72830:206:0",
													"statements": [
														{
															"id": 3198,
															"nodeType": "UncheckedBlock",
															"src": "72844:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 3196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 3192,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2909,
																				"src": "72989:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3194,
																			"indexExpression": {
																				"id": 3193,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3136,
																				"src": "72999:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "72989:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 3195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3138,
																			"src": "73006:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "72989:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3197,
																	"nodeType": "ExpressionStatement",
																	"src": "72989:22:0"
																}
															]
														}
													]
												},
												"id": 3200,
												"nodeType": "IfStatement",
												"src": "72611:425:0",
												"trueBody": {
													"id": 3191,
													"nodeType": "Block",
													"src": "72633:191:0",
													"statements": [
														{
															"id": 3190,
															"nodeType": "UncheckedBlock",
															"src": "72647:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 3188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3186,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2917,
																			"src": "72778:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 3187,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3138,
																			"src": "72794:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "72778:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3189,
																	"nodeType": "ExpressionStatement",
																	"src": "72778:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3202,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3134,
															"src": "73060:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3203,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3136,
															"src": "73066:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3204,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3138,
															"src": "73070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3201,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2806,
														"src": "73051:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73051:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3206,
												"nodeType": "EmitStatement",
												"src": "73046:30:0"
											}
										]
									},
									"documentation": {
										"id": 3132,
										"nodeType": "StructuredDocumentation",
										"src": "71667:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 3208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "71985:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3134,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "72001:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3208,
												"src": "71993:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3136,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "72015:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3208,
												"src": "72007:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "72027:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3208,
												"src": "72019:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "72019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71992:41:0"
									},
									"returnParameters": {
										"id": 3140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72051:0:0"
									},
									"scope": 3401,
									"src": "71976:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3240,
										"nodeType": "Block",
										"src": "73482:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3216,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3211,
														"src": "73496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "73515:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "73507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3217,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "73507:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "73507:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "73496:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3230,
												"nodeType": "IfStatement",
												"src": "73492:91:0",
												"trueBody": {
													"id": 3229,
													"nodeType": "Block",
													"src": "73519:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3225,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "73569:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "73561:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3223,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "73561:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "73561:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3222,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "73540:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "73540:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3228,
															"nodeType": "RevertStatement",
															"src": "73533:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "73608:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "73600:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "73600:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "73600:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3236,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3211,
															"src": "73612:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3237,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3213,
															"src": "73621:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3231,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3208,
														"src": "73592:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73592:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3239,
												"nodeType": "ExpressionStatement",
												"src": "73592:35:0"
											}
										]
									},
									"documentation": {
										"id": 3209,
										"nodeType": "StructuredDocumentation",
										"src": "73089:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 3241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "73435:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3211,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "73449:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3241,
												"src": "73441:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3213,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "73466:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3241,
												"src": "73458:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73440:32:0"
									},
									"returnParameters": {
										"id": 3215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73482:0:0"
									},
									"scope": 3401,
									"src": "73426:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3273,
										"nodeType": "Block",
										"src": "74008:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3249,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3244,
														"src": "74022:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "74041:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "74033:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3250,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "74033:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "74033:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "74022:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3263,
												"nodeType": "IfStatement",
												"src": "74018:89:0",
												"trueBody": {
													"id": 3262,
													"nodeType": "Block",
													"src": "74045:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "74093:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "74085:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3256,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "74085:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "74085:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3255,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "74066:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "74066:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3261,
															"nodeType": "RevertStatement",
															"src": "74059:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3265,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3244,
															"src": "74124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "74141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "74133:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3266,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "74133:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74133:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3270,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3246,
															"src": "74145:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3264,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3208,
														"src": "74116:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74116:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3272,
												"nodeType": "ExpressionStatement",
												"src": "74116:35:0"
											}
										]
									},
									"documentation": {
										"id": 3242,
										"nodeType": "StructuredDocumentation",
										"src": "73640:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 3274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "73961:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3244,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "73975:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3274,
												"src": "73967:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73967:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3246,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "73992:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3274,
												"src": "73984:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73966:32:0"
									},
									"returnParameters": {
										"id": 3248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74008:0:0"
									},
									"scope": 3401,
									"src": "73952:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3291,
										"nodeType": "Block",
										"src": "74768:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3285,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3277,
															"src": "74787:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3286,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3279,
															"src": "74794:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3287,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3281,
															"src": "74803:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "74810:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3284,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3292,
															3352
														],
														"referencedDeclaration": 3352,
														"src": "74778:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 3289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74778:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3290,
												"nodeType": "ExpressionStatement",
												"src": "74778:37:0"
											}
										]
									},
									"documentation": {
										"id": 3275,
										"nodeType": "StructuredDocumentation",
										"src": "74164:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 3292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "74703:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3277,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "74720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "74712:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "74735:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "74727:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "74752:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "74744:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74711:47:0"
									},
									"returnParameters": {
										"id": 3283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74768:0:0"
									},
									"scope": 3401,
									"src": "74694:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3351,
										"nodeType": "Block",
										"src": "75752:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3304,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3295,
														"src": "75766:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "75783:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "75775:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3305,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "75775:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75775:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "75766:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3318,
												"nodeType": "IfStatement",
												"src": "75762:89:0",
												"trueBody": {
													"id": 3317,
													"nodeType": "Block",
													"src": "75787:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "75837:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "75829:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3311,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "75829:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "75829:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3310,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "75808:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75808:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3316,
															"nodeType": "RevertStatement",
															"src": "75801:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3319,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3297,
														"src": "75864:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "75883:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "75875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3320,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "75875:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75875:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "75864:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3333,
												"nodeType": "IfStatement",
												"src": "75860:90:0",
												"trueBody": {
													"id": 3332,
													"nodeType": "Block",
													"src": "75887:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "75936:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "75928:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3326,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "75928:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "75928:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3325,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "75908:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75908:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3331,
															"nodeType": "RevertStatement",
															"src": "75901:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3334,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2915,
																"src": "75959:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 3337,
															"indexExpression": {
																"id": 3335,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3295,
																"src": "75971:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "75959:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3338,
														"indexExpression": {
															"id": 3336,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3297,
															"src": "75978:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "75959:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3339,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3299,
														"src": "75989:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "75959:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3341,
												"nodeType": "ExpressionStatement",
												"src": "75959:35:0"
											},
											{
												"condition": {
													"id": 3342,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3301,
													"src": "76008:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3350,
												"nodeType": "IfStatement",
												"src": "76004:76:0",
												"trueBody": {
													"id": 3349,
													"nodeType": "Block",
													"src": "76019:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3344,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3295,
																		"src": "76047:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3345,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3297,
																		"src": "76054:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3346,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3299,
																		"src": "76063:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3343,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "76038:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 3347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "76038:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3348,
															"nodeType": "EmitStatement",
															"src": "76033:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3293,
										"nodeType": "StructuredDocumentation",
										"src": "74828:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 3352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "75663:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "75680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3352,
												"src": "75672:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75672:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3297,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "75695:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3352,
												"src": "75687:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3299,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "75712:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3352,
												"src": "75704:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "75704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3301,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "75724:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3352,
												"src": "75719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "75719:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75671:63:0"
									},
									"returnParameters": {
										"id": 3303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75752:0:0"
									},
									"scope": 3401,
									"src": "75654:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3399,
										"nodeType": "Block",
										"src": "76457:388:0",
										"statements": [
											{
												"assignments": [
													3363
												],
												"declarations": [
													{
														"constant": false,
														"id": 3363,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "76475:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 3399,
														"src": "76467:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3362,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "76467:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3368,
												"initialValue": {
													"arguments": [
														{
															"id": 3365,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3355,
															"src": "76504:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3366,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3357,
															"src": "76511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3364,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3028,
														"src": "76494:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 3367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76494:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "76467:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3369,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3363,
														"src": "76533:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "76558:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 3371,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "76558:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 3370,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "76553:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "76553:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 3374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "76567:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "76553:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76533:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3398,
												"nodeType": "IfStatement",
												"src": "76529:310:0",
												"trueBody": {
													"id": 3397,
													"nodeType": "Block",
													"src": "76572:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3376,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3363,
																	"src": "76590:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3359,
																	"src": "76609:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "76590:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3386,
															"nodeType": "IfStatement",
															"src": "76586:130:0",
															"trueBody": {
																"id": 3385,
																"nodeType": "Block",
																"src": "76616:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 3380,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3357,
																					"src": "76668:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3381,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3363,
																					"src": "76677:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3382,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3359,
																					"src": "76695:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3379,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2523,
																				"src": "76641:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 3383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "76641:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3384,
																		"nodeType": "RevertStatement",
																		"src": "76634:67:0"
																	}
																]
															}
														},
														{
															"id": 3396,
															"nodeType": "UncheckedBlock",
															"src": "76729:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 3388,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3355,
																				"src": "76766:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 3389,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3357,
																				"src": "76773:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3390,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3363,
																					"src": "76782:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 3391,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3359,
																					"src": "76801:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "76782:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 3393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "76808:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 3387,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				3292,
																				3352
																			],
																			"referencedDeclaration": 3352,
																			"src": "76757:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 3394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "76757:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3395,
																	"nodeType": "ExpressionStatement",
																	"src": "76757:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3353,
										"nodeType": "StructuredDocumentation",
										"src": "76092:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 3400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "76377:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3355,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "76401:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3400,
												"src": "76393:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3357,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "76416:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3400,
												"src": "76408:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "76433:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3400,
												"src": "76425:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76392:47:0"
									},
									"returnParameters": {
										"id": 3361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76457:0:0"
									},
									"scope": 3401,
									"src": "76368:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3639,
							"src": "67106:9741:0",
							"usedErrors": [
								2504,
								2509,
								2514,
								2523,
								2528,
								2533
							],
							"usedEvents": [
								2806,
								2815
							]
						},
						{
							"id": 3402,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "77013:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3404,
										"name": "ERC20",
										"nameLocations": [
											"77565:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3401,
										"src": "77565:5:0"
									},
									"id": 3405,
									"nodeType": "InheritanceSpecifier",
									"src": "77565:5:0"
								},
								{
									"baseName": {
										"id": 3406,
										"name": "IERC20Permit",
										"nameLocations": [
											"77572:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2493,
										"src": "77572:12:0"
									},
									"id": 3407,
									"nodeType": "InheritanceSpecifier",
									"src": "77572:12:0"
								},
								{
									"baseName": {
										"id": 3408,
										"name": "EIP712",
										"nameLocations": [
											"77586:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2111,
										"src": "77586:6:0"
									},
									"id": 3409,
									"nodeType": "InheritanceSpecifier",
									"src": "77586:6:0"
								},
								{
									"baseName": {
										"id": 3410,
										"name": "Nonces",
										"nameLocations": [
											"77594:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 67,
										"src": "77594:6:0"
									},
									"id": 3411,
									"nodeType": "InheritanceSpecifier",
									"src": "77594:6:0"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3403,
								"nodeType": "StructuredDocumentation",
								"src": "77044:487:0",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 3544,
							"linearizedBaseContracts": [
								3544,
								67,
								2111,
								91,
								2493,
								3401,
								2534,
								2895,
								2872,
								2650
							],
							"name": "ERC20Permit",
							"nameLocation": "77550:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3416,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "77632:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3544,
									"src": "77607:146:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3412,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "77607:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 3414,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "77668:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 3413,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "77658:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3415,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "77658:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 3417,
										"nodeType": "StructuredDocumentation",
										"src": "77760:52:0",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 3421,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "77823:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3419,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "77855:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3421,
												"src": "77847:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "77847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77846:18:0"
									},
									"src": "77817:48:0"
								},
								{
									"documentation": {
										"id": 3422,
										"nodeType": "StructuredDocumentation",
										"src": "77871:45:0",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 3428,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "77927:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3424,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "77956:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3428,
												"src": "77948:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "77948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "77972:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3428,
												"src": "77964:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "77964:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77947:31:0"
									},
									"src": "77921:58:0"
								},
								{
									"body": {
										"id": 3438,
										"nodeType": "Block",
										"src": "78260:2:0",
										"statements": []
									},
									"documentation": {
										"id": 3429,
										"nodeType": "StructuredDocumentation",
										"src": "77985:220:0",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 3439,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3434,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3431,
													"src": "78249:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 3435,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "78255:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3436,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3433,
												"name": "EIP712",
												"nameLocations": [
													"78242:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2111,
												"src": "78242:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "78242:17:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3431,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "78236:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "78222:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3430,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "78222:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78221:20:0"
									},
									"returnParameters": {
										"id": 3437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78260:0:0"
									},
									"scope": 3544,
									"src": "78210:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2478
									],
									"body": {
										"id": 3515,
										"nodeType": "Block",
										"src": "78505:483:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3457,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "78519:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78525:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "78519:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3459,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3448,
														"src": "78537:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "78519:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3466,
												"nodeType": "IfStatement",
												"src": "78515:97:0",
												"trueBody": {
													"id": 3465,
													"nodeType": "Block",
													"src": "78547:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3462,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3448,
																		"src": "78592:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3461,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3421,
																	"src": "78568:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 3463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78568:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3464,
															"nodeType": "RevertStatement",
															"src": "78561:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													3468
												],
												"declarations": [
													{
														"constant": false,
														"id": 3468,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "78630:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3515,
														"src": "78622:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3467,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "78622:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3482,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3472,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3416,
																	"src": "78664:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3473,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3442,
																	"src": "78681:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3474,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3444,
																	"src": "78688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3475,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3446,
																	"src": "78697:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3477,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3442,
																			"src": "78714:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3476,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "78704:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 3478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "78704:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3479,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3448,
																	"src": "78722:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3470,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "78653:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "78657:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "78653:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "78653:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3469,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "78643:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78643:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78622:110:0"
											},
											{
												"assignments": [
													3484
												],
												"declarations": [
													{
														"constant": false,
														"id": 3484,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "78751:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3515,
														"src": "78743:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3483,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "78743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3488,
												"initialValue": {
													"arguments": [
														{
															"id": 3486,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3468,
															"src": "78775:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3485,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "78758:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78758:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78743:43:0"
											},
											{
												"assignments": [
													3490
												],
												"declarations": [
													{
														"constant": false,
														"id": 3490,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "78805:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3515,
														"src": "78797:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3489,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "78797:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3498,
												"initialValue": {
													"arguments": [
														{
															"id": 3493,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3484,
															"src": "78828:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3494,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3450,
															"src": "78834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3495,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3452,
															"src": "78837:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3496,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "78840:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3491,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2458,
															"src": "78814:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$2458_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78820:7:0",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2408,
														"src": "78814:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78814:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78797:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3499,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3490,
														"src": "78856:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3500,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3442,
														"src": "78866:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "78856:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3508,
												"nodeType": "IfStatement",
												"src": "78852:88:0",
												"trueBody": {
													"id": 3507,
													"nodeType": "Block",
													"src": "78873:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3503,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3490,
																		"src": "78915:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3504,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3442,
																		"src": "78923:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3502,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3428,
																	"src": "78894:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 3505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78894:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3506,
															"nodeType": "RevertStatement",
															"src": "78887:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3510,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3442,
															"src": "78959:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3511,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3444,
															"src": "78966:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3512,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3446,
															"src": "78975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3509,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3292,
															3352
														],
														"referencedDeclaration": 3292,
														"src": "78950:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78950:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3514,
												"nodeType": "ExpressionStatement",
												"src": "78950:31:0"
											}
										]
									},
									"documentation": {
										"id": 3440,
										"nodeType": "StructuredDocumentation",
										"src": "78268:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 3516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "78325:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "78349:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "78341:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3444,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "78372:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "78364:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3446,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "78397:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "78389:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3448,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "78420:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "78412:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "78444:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "78438:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3449,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "78438:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "78463:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "78455:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "78482:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3516,
												"src": "78474:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3453,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78331:158:0"
									},
									"returnParameters": {
										"id": 3456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78505:0:0"
									},
									"scope": 3544,
									"src": "78316:672:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26,
										2486
									],
									"body": {
										"id": 3532,
										"nodeType": "Block",
										"src": "79142:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3529,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3519,
															"src": "79172:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3527,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "79159:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$3544_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 3528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "79165:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "79159:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79159:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3526,
												"id": 3531,
												"nodeType": "Return",
												"src": "79152:26:0"
											}
										]
									},
									"documentation": {
										"id": 3517,
										"nodeType": "StructuredDocumentation",
										"src": "78994:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 3533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "79051:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3523,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3521,
												"name": "IERC20Permit",
												"nameLocations": [
													"79102:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2493,
												"src": "79102:12:0"
											},
											{
												"id": 3522,
												"name": "Nonces",
												"nameLocations": [
													"79116:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 67,
												"src": "79116:6:0"
											}
										],
										"src": "79093:30:0"
									},
									"parameters": {
										"id": 3520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3519,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "79066:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "79058:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79058:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79057:15:0"
									},
									"returnParameters": {
										"id": 3526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "79133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79132:9:0"
									},
									"scope": 3544,
									"src": "79042:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2492
									],
									"body": {
										"id": 3542,
										"nodeType": "Block",
										"src": "79360:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3539,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2007,
														"src": "79377:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79377:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3538,
												"id": 3541,
												"nodeType": "Return",
												"src": "79370:27:0"
											}
										]
									},
									"documentation": {
										"id": 3534,
										"nodeType": "StructuredDocumentation",
										"src": "79191:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 3543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "79301:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79317:2:0"
									},
									"returnParameters": {
										"id": 3538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3543,
												"src": "79351:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "79351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79350:9:0"
									},
									"scope": 3544,
									"src": "79292:112:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3639,
							"src": "77532:1874:0",
							"usedErrors": [
								9,
								211,
								213,
								2121,
								2126,
								2131,
								2504,
								2509,
								2514,
								2523,
								2528,
								2533,
								3421,
								3428
							],
							"usedEvents": [
								71,
								2806,
								2815
							]
						},
						{
							"id": 3545,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "79576:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3547,
										"name": "Context",
										"nameLocations": [
											"79848:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2650,
										"src": "79848:7:0"
									},
									"id": 3548,
									"nodeType": "InheritanceSpecifier",
									"src": "79848:7:0"
								},
								{
									"baseName": {
										"id": 3549,
										"name": "ERC20",
										"nameLocations": [
											"79857:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3401,
										"src": "79857:5:0"
									},
									"id": 3550,
									"nodeType": "InheritanceSpecifier",
									"src": "79857:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3546,
								"nodeType": "StructuredDocumentation",
								"src": "79604:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 3585,
							"linearizedBaseContracts": [
								3585,
								3401,
								2534,
								2895,
								2872,
								2650
							],
							"name": "ERC20Burnable",
							"nameLocation": "79831:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3562,
										"nodeType": "Block",
										"src": "80027:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3557,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "80043:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "80043:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3559,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3553,
															"src": "80057:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3556,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3274,
														"src": "80037:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "80037:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3561,
												"nodeType": "ExpressionStatement",
												"src": "80037:26:0"
											}
										]
									},
									"documentation": {
										"id": 3551,
										"nodeType": "StructuredDocumentation",
										"src": "79869:109:0",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 3563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "79992:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3553,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "80005:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3563,
												"src": "79997:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79996:15:0"
									},
									"returnParameters": {
										"id": 3555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "80027:0:0"
									},
									"scope": 3585,
									"src": "79983:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3583,
										"nodeType": "Block",
										"src": "80451:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3572,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3566,
															"src": "80477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3573,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "80486:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "80486:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3575,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3568,
															"src": "80500:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3571,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3400,
														"src": "80461:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "80461:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3577,
												"nodeType": "ExpressionStatement",
												"src": "80461:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3566,
															"src": "80522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3580,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3568,
															"src": "80531:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3578,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3274,
														"src": "80516:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "80516:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3582,
												"nodeType": "ExpressionStatement",
												"src": "80516:21:0"
											}
										]
									},
									"documentation": {
										"id": 3564,
										"nodeType": "StructuredDocumentation",
										"src": "80076:305:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 3584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "80395:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3566,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "80412:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3584,
												"src": "80404:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "80429:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3584,
												"src": "80421:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "80421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80403:32:0"
									},
									"returnParameters": {
										"id": 3570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "80451:0:0"
									},
									"scope": 3585,
									"src": "80386:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3639,
							"src": "79813:733:0",
							"usedErrors": [
								2504,
								2509,
								2514,
								2523,
								2528,
								2533
							],
							"usedEvents": [
								2806,
								2815
							]
						},
						{
							"id": 3586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "80584:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3588,
										"name": "ERC20",
										"nameLocations": [
											"80694:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3401,
										"src": "80694:5:0"
									},
									"id": 3589,
									"nodeType": "InheritanceSpecifier",
									"src": "80694:5:0"
								},
								{
									"baseName": {
										"id": 3590,
										"name": "ERC20Burnable",
										"nameLocations": [
											"80701:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3585,
										"src": "80701:13:0"
									},
									"id": 3591,
									"nodeType": "InheritanceSpecifier",
									"src": "80701:13:0"
								},
								{
									"baseName": {
										"id": 3592,
										"name": "Ownable",
										"nameLocations": [
											"80716:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2795,
										"src": "80716:7:0"
									},
									"id": 3593,
									"nodeType": "InheritanceSpecifier",
									"src": "80716:7:0"
								},
								{
									"baseName": {
										"id": 3594,
										"name": "ERC20Permit",
										"nameLocations": [
											"80725:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3544,
										"src": "80725:11:0"
									},
									"id": 3595,
									"nodeType": "InheritanceSpecifier",
									"src": "80725:11:0"
								}
							],
							"canonicalName": "SuperToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3587,
								"nodeType": "StructuredDocumentation",
								"src": "80614:57:0",
								"text": "@custom:security-contact ummanmemmedov2005@gmail.com"
							},
							"fullyImplemented": true,
							"id": 3638,
							"linearizedBaseContracts": [
								3638,
								3544,
								67,
								2111,
								91,
								2493,
								2795,
								3585,
								3401,
								2534,
								2895,
								2872,
								2650
							],
							"name": "SuperToken",
							"nameLocation": "80680:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3621,
										"nodeType": "Block",
										"src": "80882:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3611,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "80898:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "80902:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "80898:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030",
																"id": 3613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "80910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "80920:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3615,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2965,
																		"src": "80926:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 3616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "80926:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "80920:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "80910:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3610,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3241,
														"src": "80892:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "80892:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3620,
												"nodeType": "ExpressionStatement",
												"src": "80892:45:0"
											}
										]
									},
									"id": 3622,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "537570657220546f6b656e",
													"id": 3600,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "80791:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_121dd1bdbf32a1bdd7f2da410e9c82c54d2c0f5d5aee245dbcb76db878d1feae",
														"typeString": "literal_string \"Super Token\""
													},
													"value": "Super Token"
												},
												{
													"hexValue": "53544b",
													"id": 3601,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "80806:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ddd63dcd5916e2715f93ae4bf1497005f4f308cec81ea856ac13c63c6bc50072",
														"typeString": "literal_string \"STK\""
													},
													"value": "STK"
												}
											],
											"id": 3602,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3599,
												"name": "ERC20",
												"nameLocations": [
													"80785:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3401,
												"src": "80785:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "80785:27:0"
										},
										{
											"arguments": [
												{
													"id": 3604,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3597,
													"src": "80829:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3605,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3603,
												"name": "Ownable",
												"nameLocations": [
													"80821:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2795,
												"src": "80821:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "80821:21:0"
										},
										{
											"arguments": [
												{
													"hexValue": "537570657220546f6b656e",
													"id": 3607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "80863:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_121dd1bdbf32a1bdd7f2da410e9c82c54d2c0f5d5aee245dbcb76db878d1feae",
														"typeString": "literal_string \"Super Token\""
													},
													"value": "Super Token"
												}
											],
											"id": 3608,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3606,
												"name": "ERC20Permit",
												"nameLocations": [
													"80851:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3544,
												"src": "80851:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "80851:26:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3597,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "80763:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3622,
												"src": "80755:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80754:22:0"
									},
									"returnParameters": {
										"id": 3609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "80882:0:0"
									},
									"scope": 3638,
									"src": "80743:201:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3636,
										"nodeType": "Block",
										"src": "81009:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3624,
															"src": "81025:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3633,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3626,
															"src": "81029:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3631,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3241,
														"src": "81019:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "81019:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3635,
												"nodeType": "ExpressionStatement",
												"src": "81019:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 3637,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3629,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3628,
												"name": "onlyOwner",
												"nameLocations": [
													"80999:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2706,
												"src": "80999:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "80999:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "80959:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "80972:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3637,
												"src": "80964:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80964:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "80984:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3637,
												"src": "80976:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "80976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "80963:28:0"
									},
									"returnParameters": {
										"id": 3630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "81009:0:0"
									},
									"scope": 3638,
									"src": "80950:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3639,
							"src": "80671:374:0",
							"usedErrors": [
								9,
								211,
								213,
								2121,
								2126,
								2131,
								2504,
								2509,
								2514,
								2523,
								2528,
								2533,
								2661,
								2666,
								3421,
								3428
							],
							"usedEvents": [
								71,
								2672,
								2806,
								2815
							]
						}
					],
					"src": "151:80894:0"
				},
				"id": 0
			}
		}
	}
}